{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadPostSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadPostsSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(mainLoadPostsSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(writePostSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(postScrapSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(postUnScrapSaga),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(addCommentSaga),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(loadForumPostsSaga),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(deletePostSaga),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(deleteCommentSaga),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(upLikePostSaga),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(unLikePostSaga),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(upLikeCommentSaga),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(unLikeCommentSaga),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchPost);\n\nimport { takeLatest, call, put, throttle, takeEvery } from \"redux-saga/effects\";\nimport { LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, MAIN_LOAD_POSTS_REQUEST, MAIN_LOAD_POSTS_SUCCESS, MAIN_LOAD_POSTS_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, WRITE_POST_REQUEST, WRITE_POST_SUCCESS, WRITE_POST_FAILURE, POST_SCRAP_REQUEST, POST_SCRAP_SUCCESS, POST_SCRAP_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, LOAD_FORUM_POSTS_REQUEST, LOAD_FORUM_POSTS_SUCCESS, LOAD_FORUM_POSTS_FAILURE, DELETE_COMMENT_REQUEST, DELETE_COMMENT_SUCCESS, DELETE_COMMENT_FAILURE, DELETE_POST_REQUEST, DELETE_POST_SUCCESS, DELETE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, LIKE_COMMENT_REQUEST, LIKE_COMMENT_SUCCESS, LIKE_COMMENT_FAILURE, UNLIKE_COMMENT_REQUEST, UNLIKE_COMMENT_SUCCESS, UNLIKE_COMMENT_FAILURE, POST_UNSCRAP_SUCCESS, POST_UNSCRAP_FAILURE, POST_UNSCRAP_REQUEST } from \"../reducers/post\";\nimport { mainLoadPosts, writePost, loadPost, loadPosts, loadForumPosts, addComment, deletePost, deleteComment, deleteCommentWithChildren, upLike, unLike, postScrap, postUnScrap } from \"../lib/api/post\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 관련 사가 설정파일\n * @note deprecated 된 것은 컴포넌트 혹은 페이지 내부에서 axios 직접 요청으로 대체\n */\n// saga\n\nfunction loadPostSaga(action) {\n  var postId, res;\n  return _regeneratorRuntime.wrap(function loadPostSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          postId = action.payload.postId;\n          _context.next = 4;\n          return call(loadPost, postId);\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            post: res.data.post\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 14;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction loadPostsSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function loadPostsSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loadPosts, action.payload);\n\n        case 3:\n          res = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            contentType: action.payload.type,\n            data: res.data.posts,\n            temporalPostsLength: res.data.postSize\n          });\n\n        case 6:\n          _context2.next = 13;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          _context2.next = 13;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            contentType: action.payload\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction mainLoadPostsSaga(action) {\n  var res, _res$data$posts, study, project, forum;\n\n  return _regeneratorRuntime.wrap(function mainLoadPostsSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(mainLoadPosts);\n\n        case 3:\n          res = _context3.sent;\n          _res$data$posts = res.data.posts, study = _res$data$posts.study, project = _res$data$posts.project, forum = _res$data$posts.forum;\n          _context3.next = 7;\n          return put({\n            type: MAIN_LOAD_POSTS_SUCCESS,\n            study: study,\n            project: project,\n            forum: forum\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 14;\n          return put({\n            type: MAIN_LOAD_POSTS_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction writePostSaga(action) {\n  var res, post;\n  return _regeneratorRuntime.wrap(function writePostSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(writePost, action.payload);\n\n        case 3:\n          res = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: WRITE_POST_SUCCESS\n          });\n\n        case 6:\n          post = res.data.post;\n          window.location.href = \"http://localhost:3000/articles/\".concat(post.type, \"/\").concat(post._id);\n          _context4.next = 15;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          _context4.next = 15;\n          return put({\n            type: WRITE_POST_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 10]]);\n}\n\nfunction postScrapSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function postScrapSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(postScrap, action.payload);\n\n        case 3:\n          res = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: POST_SCRAP_SUCCESS,\n            scrap: res.data.scrap\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          _context5.next = 13;\n          return put({\n            type: POST_SCRAP_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction postUnScrapSaga(action) {\n  return _regeneratorRuntime.wrap(function postUnScrapSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(postUnScrap, action.payload);\n\n        case 3:\n          _context6.next = 5;\n          return put({\n            type: POST_UNSCRAP_SUCCESS,\n            scrapId: action.payload.id\n          });\n\n        case 5:\n          _context6.next = 12;\n          break;\n\n        case 7:\n          _context6.prev = 7;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(_context6.t0);\n          _context6.next = 12;\n          return put({\n            type: POST_UNSCRAP_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 7]]);\n} // -> deprecated\n\n\nfunction addCommentSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function addCommentSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(addComment, action.payload);\n\n        case 3:\n          res = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: ADD_COMMENT_SUCCESS\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: ADD_COMMENT_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction loadForumPostsSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function loadForumPostsSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(loadForumPosts, action.payload);\n\n        case 3:\n          res = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: LOAD_FORUM_POSTS_SUCCESS,\n            forumPosts: res.data.posts,\n            temporalPostsLength: res.data.postSize\n          });\n\n        case 6:\n          _context8.next = 12;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 12;\n          return put({\n            type: LOAD_FORUM_POSTS_FAILURE,\n            error: _context8.t0.response\n          });\n\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\n\nfunction deletePostSaga(action) {\n  return _regeneratorRuntime.wrap(function deletePostSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(deletePost, action.payload);\n\n        case 3:\n          _context9.next = 5;\n          return put({\n            type: DELETE_POST_SUCCESS\n          });\n\n        case 5:\n          _context9.next = 12;\n          break;\n\n        case 7:\n          _context9.prev = 7;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.log(_context9.t0);\n          _context9.next = 12;\n          return put({\n            type: DELETE_POST_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 7]]);\n} // -> deprecated\n\n\nfunction deleteCommentSaga(action) {\n  return _regeneratorRuntime.wrap(function deleteCommentSaga$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n\n          if (!(action.payload.type === \"children\")) {\n            _context10.next = 6;\n            break;\n          }\n\n          _context10.next = 4;\n          return call(deleteCommentWithChildren, action.payload.id);\n\n        case 4:\n          _context10.next = 8;\n          break;\n\n        case 6:\n          _context10.next = 8;\n          return call(deleteComment, action.payload.id);\n\n        case 8:\n          _context10.next = 10;\n          return put({\n            type: DELETE_COMMENT_SUCCESS\n          });\n\n        case 10:\n          _context10.next = 17;\n          break;\n\n        case 12:\n          _context10.prev = 12;\n          _context10.t0 = _context10[\"catch\"](0);\n          console.log(_context10.t0);\n          _context10.next = 17;\n          return put({\n            type: DELETE_COMMENT_FAILURE\n          });\n\n        case 17:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 12]]);\n}\n\nfunction upLikePostSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function upLikePostSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(upLike, action.payload);\n\n        case 3:\n          res = _context11.sent;\n          _context11.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            user: action.payload.user,\n            postId: action.payload.id,\n            like: res.data.like\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.log(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: LIKE_POST_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction unLikePostSaga(action) {\n  return _regeneratorRuntime.wrap(function unLikePostSaga$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.prev = 0;\n          _context12.next = 3;\n          return call(unLike, action.payload);\n\n        case 3:\n          _context12.next = 5;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            user: action.payload.user,\n            likeId: action.payload.id,\n            postId: action.payload.id\n          });\n\n        case 5:\n          _context12.next = 12;\n          break;\n\n        case 7:\n          _context12.prev = 7;\n          _context12.t0 = _context12[\"catch\"](0);\n          console.log(_context12.t0);\n          _context12.next = 12;\n          return put({\n            type: UNLIKE_POST_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12, null, [[0, 7]]);\n}\n\nfunction upLikeCommentSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function upLikeCommentSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(upLike, action.payload);\n\n        case 3:\n          res = _context13.sent;\n          _context13.next = 6;\n          return put({\n            type: LIKE_COMMENT_SUCCESS,\n            user: action.payload.user,\n            commentId: action.payload.id,\n            like: res.data.like\n          });\n\n        case 6:\n          _context13.next = 13;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          console.log(_context13.t0);\n          _context13.next = 13;\n          return put({\n            type: LIKE_COMMENT_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction unLikeCommentSaga(action) {\n  return _regeneratorRuntime.wrap(function unLikeCommentSaga$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.prev = 0;\n          _context14.next = 3;\n          return call(unLike, action.payload);\n\n        case 3:\n          _context14.next = 5;\n          return put({\n            type: UNLIKE_COMMENT_SUCCESS,\n            user: action.payload.user,\n            likeId: action.payload.id,\n            commentId: action.payload.commentId\n          });\n\n        case 5:\n          _context14.next = 12;\n          break;\n\n        case 7:\n          _context14.prev = 7;\n          _context14.t0 = _context14[\"catch\"](0);\n          console.log(_context14.t0);\n          _context14.next = 12;\n          return put({\n            type: UNLIKE_COMMENT_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14, null, [[0, 7]]);\n} // watcher\n\n\nexport function watchPost() {\n  return _regeneratorRuntime.wrap(function watchPost$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(MAIN_LOAD_POSTS_REQUEST, mainLoadPostsSaga);\n\n        case 2:\n          _context15.next = 4;\n          return takeLatest(LOAD_POSTS_REQUEST, loadPostsSaga);\n\n        case 4:\n          _context15.next = 6;\n          return takeLatest(LOAD_POST_REQUEST, loadPostSaga);\n\n        case 6:\n          _context15.next = 8;\n          return throttle(2000, WRITE_POST_REQUEST, writePostSaga);\n\n        case 8:\n          _context15.next = 10;\n          return takeLatest(POST_SCRAP_REQUEST, postScrapSaga);\n\n        case 10:\n          _context15.next = 12;\n          return takeLatest(POST_UNSCRAP_REQUEST, postUnScrapSaga);\n\n        case 12:\n          _context15.next = 14;\n          return throttle(2000, ADD_COMMENT_REQUEST, addCommentSaga);\n\n        case 14:\n          _context15.next = 16;\n          return takeLatest(LOAD_FORUM_POSTS_REQUEST, loadForumPostsSaga);\n\n        case 16:\n          _context15.next = 18;\n          return takeLatest(DELETE_POST_REQUEST, deletePostSaga);\n\n        case 18:\n          _context15.next = 20;\n          return takeEvery(DELETE_COMMENT_REQUEST, deleteCommentSaga);\n\n        case 20:\n          _context15.next = 22;\n          return takeLatest(LIKE_POST_REQUEST, upLikePostSaga);\n\n        case 22:\n          _context15.next = 24;\n          return takeLatest(UNLIKE_POST_REQUEST, unLikePostSaga);\n\n        case 24:\n          _context15.next = 26;\n          return takeLatest(LIKE_COMMENT_REQUEST, upLikeCommentSaga);\n\n        case 26:\n          _context15.next = 28;\n          return takeLatest(UNLIKE_COMMENT_REQUEST, unLikeCommentSaga);\n\n        case 28:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/sagas/post.js"],"names":["loadPostSaga","loadPostsSaga","mainLoadPostsSaga","writePostSaga","postScrapSaga","postUnScrapSaga","addCommentSaga","loadForumPostsSaga","deletePostSaga","deleteCommentSaga","upLikePostSaga","unLikePostSaga","upLikeCommentSaga","unLikeCommentSaga","watchPost","takeLatest","call","put","throttle","takeEvery","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","MAIN_LOAD_POSTS_REQUEST","MAIN_LOAD_POSTS_SUCCESS","MAIN_LOAD_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","WRITE_POST_REQUEST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","POST_SCRAP_REQUEST","POST_SCRAP_SUCCESS","POST_SCRAP_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_FORUM_POSTS_REQUEST","LOAD_FORUM_POSTS_SUCCESS","LOAD_FORUM_POSTS_FAILURE","DELETE_COMMENT_REQUEST","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LIKE_COMMENT_REQUEST","LIKE_COMMENT_SUCCESS","LIKE_COMMENT_FAILURE","UNLIKE_COMMENT_REQUEST","UNLIKE_COMMENT_SUCCESS","UNLIKE_COMMENT_FAILURE","POST_UNSCRAP_SUCCESS","POST_UNSCRAP_FAILURE","POST_UNSCRAP_REQUEST","mainLoadPosts","writePost","loadPost","loadPosts","loadForumPosts","addComment","deletePost","deleteComment","deleteCommentWithChildren","upLike","unLike","postScrap","postUnScrap","action","postId","payload","res","type","post","data","console","log","error","response","contentType","posts","temporalPostsLength","postSize","study","project","forum","window","location","href","_id","scrap","scrapId","id","forumPosts","user","like","likeId","commentId"],"mappings":"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","sourcesContent":["import { takeLatest, call, put, throttle, takeEvery } from \"redux-saga/effects\";\nimport {\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  MAIN_LOAD_POSTS_REQUEST,\n  MAIN_LOAD_POSTS_SUCCESS,\n  MAIN_LOAD_POSTS_FAILURE,\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  WRITE_POST_REQUEST,\n  WRITE_POST_SUCCESS,\n  WRITE_POST_FAILURE,\n  POST_SCRAP_REQUEST,\n  POST_SCRAP_SUCCESS,\n  POST_SCRAP_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  LOAD_FORUM_POSTS_REQUEST,\n  LOAD_FORUM_POSTS_SUCCESS,\n  LOAD_FORUM_POSTS_FAILURE,\n  DELETE_COMMENT_REQUEST,\n  DELETE_COMMENT_SUCCESS,\n  DELETE_COMMENT_FAILURE,\n  DELETE_POST_REQUEST,\n  DELETE_POST_SUCCESS,\n  DELETE_POST_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  LIKE_COMMENT_REQUEST,\n  LIKE_COMMENT_SUCCESS,\n  LIKE_COMMENT_FAILURE,\n  UNLIKE_COMMENT_REQUEST,\n  UNLIKE_COMMENT_SUCCESS,\n  UNLIKE_COMMENT_FAILURE,\n  POST_UNSCRAP_SUCCESS,\n  POST_UNSCRAP_FAILURE,\n  POST_UNSCRAP_REQUEST,\n} from \"../reducers/post\";\n\nimport {\n  mainLoadPosts,\n  writePost,\n  loadPost,\n  loadPosts,\n  loadForumPosts,\n  addComment,\n  deletePost,\n  deleteComment,\n  deleteCommentWithChildren,\n  upLike,\n  unLike,\n  postScrap,\n  postUnScrap,\n} from \"../lib/api/post\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 관련 사가 설정파일\n * @note deprecated 된 것은 컴포넌트 혹은 페이지 내부에서 axios 직접 요청으로 대체\n */\n\n// saga\n\nfunction* loadPostSaga(action) {\n  try {\n    const { postId } = action.payload;\n    const res = yield call(loadPost, postId);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      post: res.data.post,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* loadPostsSaga(action) {\n  try {\n    const res = yield call(loadPosts, action.payload);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      contentType: action.payload.type,\n      data: res.data.posts,\n      temporalPostsLength: res.data.postSize,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      contentType: action.payload,\n    });\n  }\n}\n\nfunction* mainLoadPostsSaga(action) {\n  try {\n    const res = yield call(mainLoadPosts);\n    const { study, project, forum } = res.data.posts;\n    yield put({\n      type: MAIN_LOAD_POSTS_SUCCESS,\n      study,\n      project,\n      forum,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: MAIN_LOAD_POSTS_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* writePostSaga(action) {\n  try {\n    const res = yield call(writePost, action.payload);\n    yield put({ type: WRITE_POST_SUCCESS });\n    const post = res.data.post;\n    window.location.href = `http://localhost:3000/articles/${post.type}/${post._id}`;\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: WRITE_POST_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* postScrapSaga(action) {\n  try {\n    const res = yield call(postScrap, action.payload);\n    yield put({ type: POST_SCRAP_SUCCESS, scrap: res.data.scrap });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: POST_SCRAP_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* postUnScrapSaga(action) {\n  try {\n    yield call(postUnScrap, action.payload);\n    yield put({ type: POST_UNSCRAP_SUCCESS, scrapId: action.payload.id });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: POST_UNSCRAP_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\n// -> deprecated\nfunction* addCommentSaga(action) {\n  try {\n    const res = yield call(addComment, action.payload);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n    });\n  }\n}\n\nfunction* loadForumPostsSaga(action) {\n  try {\n    const res = yield call(loadForumPosts, action.payload);\n    yield put({\n      type: LOAD_FORUM_POSTS_SUCCESS,\n      forumPosts: res.data.posts,\n      temporalPostsLength: res.data.postSize,\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_FORUM_POSTS_FAILURE,\n      error: error.response,\n    });\n  }\n}\n\nfunction* deletePostSaga(action) {\n  try {\n    yield call(deletePost, action.payload);\n    yield put({ type: DELETE_POST_SUCCESS });\n  } catch (error) {\n    console.log(error);\n    yield put({ type: DELETE_POST_FAILURE });\n  }\n}\n\n// -> deprecated\nfunction* deleteCommentSaga(action) {\n  try {\n    if (action.payload.type === \"children\") {\n      yield call(deleteCommentWithChildren, action.payload.id);\n    } else {\n      yield call(deleteComment, action.payload.id);\n    }\n    yield put({ type: DELETE_COMMENT_SUCCESS });\n  } catch (error) {\n    console.log(error);\n    yield put({ type: DELETE_COMMENT_FAILURE });\n  }\n}\n\nfunction* upLikePostSaga(action) {\n  try {\n    const res = yield call(upLike, action.payload);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      user: action.payload.user,\n      postId: action.payload.id,\n      like: res.data.like,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({ type: LIKE_POST_FAILURE });\n  }\n}\n\nfunction* unLikePostSaga(action) {\n  try {\n    yield call(unLike, action.payload);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      user: action.payload.user,\n      likeId: action.payload.id,\n      postId: action.payload.id,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({ type: UNLIKE_POST_FAILURE });\n  }\n}\n\nfunction* upLikeCommentSaga(action) {\n  try {\n    const res = yield call(upLike, action.payload);\n    yield put({\n      type: LIKE_COMMENT_SUCCESS,\n      user: action.payload.user,\n      commentId: action.payload.id,\n      like: res.data.like,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({ type: LIKE_COMMENT_FAILURE });\n  }\n}\n\nfunction* unLikeCommentSaga(action) {\n  try {\n    yield call(unLike, action.payload);\n    yield put({\n      type: UNLIKE_COMMENT_SUCCESS,\n      user: action.payload.user,\n      likeId: action.payload.id,\n      commentId: action.payload.commentId,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({ type: UNLIKE_COMMENT_FAILURE });\n  }\n}\n\n// watcher\n\nexport function* watchPost() {\n  yield takeLatest(MAIN_LOAD_POSTS_REQUEST, mainLoadPostsSaga);\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPostsSaga);\n  yield takeLatest(LOAD_POST_REQUEST, loadPostSaga);\n  yield throttle(2000, WRITE_POST_REQUEST, writePostSaga);\n  yield takeLatest(POST_SCRAP_REQUEST, postScrapSaga);\n  yield takeLatest(POST_UNSCRAP_REQUEST, postUnScrapSaga);\n  yield throttle(2000, ADD_COMMENT_REQUEST, addCommentSaga);\n  yield takeLatest(LOAD_FORUM_POSTS_REQUEST, loadForumPostsSaga);\n  yield takeLatest(DELETE_POST_REQUEST, deletePostSaga);\n  yield takeEvery(DELETE_COMMENT_REQUEST, deleteCommentSaga);\n  yield takeLatest(LIKE_POST_REQUEST, upLikePostSaga);\n  yield takeLatest(UNLIKE_POST_REQUEST, unLikePostSaga);\n  yield takeLatest(LIKE_COMMENT_REQUEST, upLikeCommentSaga);\n  yield takeLatest(UNLIKE_COMMENT_REQUEST, unLikeCommentSaga);\n}\n"]},"metadata":{},"sourceType":"module"}