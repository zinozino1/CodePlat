{"ast":null,"code":"var _jsxFileName = \"/Users/jinho/Project/ProjectFrontend/components/common/contents/SkillFilterForm.jsx\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Select, Radio, Checkbox } from \"antd\";\nimport styled, { css } from \"styled-components\";\nimport { StackList } from \"../../../lib/constant/constant\";\nimport { useDispatch } from \"react-redux\";\nimport { skillChangeAction, initializeSkillAction } from \"../../../reducers/skill\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 기술 스택 선택 폼 컴포넌트\n */\n// style\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkillFilterFormWrapper = styled.div.withConfig({\n  displayName: \"SkillFilterForm__SkillFilterFormWrapper\",\n  componentId: \"t2e762-0\"\n})([\"margin:0 auto;width:900px;\", \" @media (max-width:1268px){width:100%;}\"], props => (props.type === \"register\" || props.type === \"write\" || props.type === \"mypage\") && css([\"width:100%;\"]));\nconst RadioWrapper = styled.div.withConfig({\n  displayName: \"SkillFilterForm__RadioWrapper\",\n  componentId: \"t2e762-1\"\n})([\".ant-radio-group{display:flex;justify-content:space-between;.ant-radio-button-wrapper{flex:1;z-index:1;&:hover{color:#313355;}}.ant-radio-button-wrapper-checked{color:#fff;border:none;background:#313355;&::selection{border:none;}&::after{background:#313355 !important;}&::before{background:none;}&:hover{color:#fff;}}@media (max-width:768px){flex-direction:column;}}\"]);\nconst CheckBoxWrapper = styled.div.withConfig({\n  displayName: \"SkillFilterForm__CheckBoxWrapper\",\n  componentId: \"t2e762-2\"\n})([\"padding:20px;background:#fff;.ant-checkbox-wrapper{color:#777;font-weight:400;}\"]);\nconst SelectWrapper = styled.div.withConfig({\n  displayName: \"SkillFilterForm__SelectWrapper\",\n  componentId: \"t2e762-3\"\n})([\"padding:20px 0;.ant-select-selection-item-remove{display:none;}.ant-select{width:100%;}\"]);\n\nconst SkillFilterForm = ({\n  type,\n  isEdit,\n  values\n}) => {\n  // redux\n  const dispatch = useDispatch(); // local state\n\n  const {\n    0: radioValue,\n    1: setRadioValue\n  } = useState(\"language\");\n  const {\n    0: checkList,\n    1: setCheckList\n  } = useState(StackList.language);\n  const [checkedValues, setCheckedValues] = isEdit ? useState(values) : useState([]); // event listener\n\n  const onClickRadio = useCallback(e => {\n    setRadioValue(e.target.value);\n    setCheckList(StackList[e.target.value]);\n  }, []);\n  const onClickCheckBox = useCallback(e => {\n    if (checkedValues.includes(e.target.value)) {\n      setCheckedValues(checkedValues.filter((v, i) => {\n        return v !== e.target.value;\n      }));\n    } else {\n      if (!e.target.value) return;\n      setCheckedValues(checkedValues.concat(e.target.value));\n    }\n  }, [checkedValues, values]); // hooks\n\n  useEffect(() => {\n    dispatch(skillChangeAction(checkedValues));\n  }, [checkedValues]);\n  useEffect(() => {\n    return () => {\n      dispatch(initializeSkillAction());\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SkillFilterFormWrapper, {\n    type: type,\n    children: [/*#__PURE__*/_jsxDEV(RadioWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n        defaultValue: \"language\",\n        children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"language\",\n          onClick: onClickRadio,\n          children: \"\\uC5B8\\uC5B4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"framework\",\n          onClick: onClickRadio,\n          children: \"\\uD504\\uB808\\uC784\\uC6CC\\uD06C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"database\",\n          onClick: onClickRadio,\n          children: \"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"cloudos\",\n          onClick: onClickRadio,\n          children: \"\\uD074\\uB77C\\uC6B0\\uB4DC/OS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"mldl\",\n          onClick: onClickRadio,\n          children: \"ML/DL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckBoxWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n        options: checkList,\n        defaultValue: isEdit ? values : [],\n        onClick: onClickCheckBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        mode: \"tags\",\n        placeholder: type === \"register\" ? \"관심 기술을 선택해주세요.\" : \"기술을 선택해주세요\",\n        value: checkedValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\nexport default /*#__PURE__*/React.memo(SkillFilterForm);","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/components/common/contents/SkillFilterForm.jsx"],"names":["React","useState","useCallback","useEffect","Select","Radio","Checkbox","styled","css","StackList","useDispatch","skillChangeAction","initializeSkillAction","SkillFilterFormWrapper","div","props","type","RadioWrapper","CheckBoxWrapper","SelectWrapper","SkillFilterForm","isEdit","values","dispatch","radioValue","setRadioValue","checkList","setCheckList","language","checkedValues","setCheckedValues","onClickRadio","e","target","value","onClickCheckBox","includes","filter","v","i","concat","memo"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Select, Radio, Checkbox } from \"antd\";\nimport styled, { css } from \"styled-components\";\nimport { StackList } from \"../../../lib/constant/constant\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  skillChangeAction,\n  initializeSkillAction,\n} from \"../../../reducers/skill\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 기술 스택 선택 폼 컴포넌트\n */\n\n// style\n\nconst SkillFilterFormWrapper = styled.div`\n  margin: 0 auto;\n  width: 900px;\n  ${(props) =>\n    (props.type === \"register\" ||\n      props.type === \"write\" ||\n      props.type === \"mypage\") &&\n    css`\n      width: 100%;\n    `}\n  @media (max-width: 1268px) {\n    width: 100%;\n  }\n`;\n\nconst RadioWrapper = styled.div`\n  .ant-radio-group {\n    display: flex;\n    justify-content: space-between;\n\n    .ant-radio-button-wrapper {\n      flex: 1;\n      z-index: 1;\n      &:hover {\n        color: #313355;\n      }\n    }\n    .ant-radio-button-wrapper-checked {\n      color: #fff;\n      border: none;\n      background: #313355;\n      &::selection {\n        border: none;\n      }\n      &::after {\n        background: #313355 !important;\n      }\n      &::before {\n        background: none;\n      }\n      &:hover {\n        color: #fff;\n      }\n    }\n\n    @media (max-width: 768px) {\n      flex-direction: column;\n    }\n  }\n`;\n\nconst CheckBoxWrapper = styled.div`\n  padding: 20px;\n  background: #fff;\n  .ant-checkbox-wrapper {\n    color: #777;\n    font-weight: 400;\n  }\n`;\n\nconst SelectWrapper = styled.div`\n  padding: 20px 0;\n  .ant-select-selection-item-remove {\n    display: none;\n  }\n  .ant-select {\n    width: 100%;\n  }\n`;\n\nconst SkillFilterForm = ({ type, isEdit, values }) => {\n  // redux\n\n  const dispatch = useDispatch();\n\n  // local state\n\n  const [radioValue, setRadioValue] = useState(\"language\");\n  const [checkList, setCheckList] = useState(StackList.language);\n  const [checkedValues, setCheckedValues] = isEdit\n    ? useState(values)\n    : useState([]);\n\n  // event listener\n\n  const onClickRadio = useCallback((e) => {\n    setRadioValue(e.target.value);\n    setCheckList(StackList[e.target.value]);\n  }, []);\n\n  const onClickCheckBox = useCallback(\n    (e) => {\n      if (checkedValues.includes(e.target.value)) {\n        setCheckedValues(\n          checkedValues.filter((v, i) => {\n            return v !== e.target.value;\n          }),\n        );\n      } else {\n        if (!e.target.value) return;\n        setCheckedValues(checkedValues.concat(e.target.value));\n      }\n    },\n    [checkedValues, values],\n  );\n\n  // hooks\n\n  useEffect(() => {\n    dispatch(skillChangeAction(checkedValues));\n  }, [checkedValues]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeSkillAction());\n    };\n  }, []);\n\n  return (\n    <SkillFilterFormWrapper type={type}>\n      <RadioWrapper>\n        <Radio.Group defaultValue=\"language\">\n          <Radio.Button value=\"language\" onClick={onClickRadio}>\n            언어\n          </Radio.Button>\n          <Radio.Button value=\"framework\" onClick={onClickRadio}>\n            프레임워크\n          </Radio.Button>\n          <Radio.Button value=\"database\" onClick={onClickRadio}>\n            데이터베이스\n          </Radio.Button>\n          <Radio.Button value=\"cloudos\" onClick={onClickRadio}>\n            클라우드/OS\n          </Radio.Button>\n          <Radio.Button value=\"mldl\" onClick={onClickRadio}>\n            ML/DL\n          </Radio.Button>\n        </Radio.Group>\n      </RadioWrapper>\n      <CheckBoxWrapper>\n        <Checkbox.Group\n          options={checkList}\n          defaultValue={isEdit ? values : []}\n          onClick={onClickCheckBox}\n        />\n      </CheckBoxWrapper>\n      <SelectWrapper>\n        <Select\n          mode=\"tags\"\n          placeholder={\n            type === \"register\"\n              ? \"관심 기술을 선택해주세요.\"\n              : \"기술을 선택해주세요\"\n          }\n          value={checkedValues}\n        />\n      </SelectWrapper>\n    </SkillFilterFormWrapper>\n  );\n};\n\nexport default React.memo(SkillFilterForm);\n"]},"metadata":{},"sourceType":"module"}