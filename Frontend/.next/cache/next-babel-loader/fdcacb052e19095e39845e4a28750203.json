{"ast":null,"code":"var _jsxFileName = \"/Users/jinho/Project/ProjectFrontend/components/common/contents/Editor.jsx\";\nimport React, { useRef, useEffect } from \"react\";\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/atom-one-dark.css\";\nimport \"quill/dist/quill.snow.css\";\nimport styled from \"styled-components\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 작성 에디터 컴포넌트\n */\n// highlightjs config\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nhljs.configure({\n  languages: [\"javascript\", \"ruby\", \"python\", \"rust\", \"c\", \"c++\", \"go\", \"java\", \"rust\", \"kotlin\", \"typescript\"]\n}); // style\n\nconst EditorBlock = styled.div.withConfig({\n  displayName: \"Editor__EditorBlock\",\n  componentId: \"b00hhv-0\"\n})([\"padding-top:1rem;padding-bottom:1rem;\"]);\nconst TitleInput = styled.input.withConfig({\n  displayName: \"Editor__TitleInput\",\n  componentId: \"b00hhv-1\"\n})([\"font-size:1.2rem;outline:none;padding-bottom:0.2rem;border:none;border-bottom:1px solid #aaa;margin-bottom:1rem;width:100%;\"]);\nconst QuillWrapper = styled.div.withConfig({\n  displayName: \"Editor__QuillWrapper\",\n  componentId: \"b00hhv-2\"\n})([\".ql-editor{padding:20px;min-height:320px;font-size:1rem;line-height:1.5;}.ql-editor.ql-blank::before{left:20px;}\"]);\n\nconst Editor = ({\n  onChangeTitle,\n  onChangeDescription,\n  description,\n  title\n}) => {\n  // local state\n  const Quill = false ? require(\"quill\") : () => false;\n  const quillElement = useRef(null);\n  const quillInstance = useRef(null); // hooks\n\n  useEffect(() => {\n    quillInstance.current = new Quill(quillElement.current, {\n      theme: \"snow\",\n      placeholder: \"내용을 입력해주세요.\",\n      modules: {\n        syntax: {\n          highlight: text => hljs.highlightAuto(text).value\n        },\n        toolbar: [[{\n          header: \"1\"\n        }, {\n          header: \"2\"\n        }], [{\n          color: []\n        }], [\"bold\", \"italic\", \"underline\", \"strike\"], [{\n          list: \"ordered\"\n        }, {\n          list: \"bullet\"\n        }], [\"blockquote\", \"code-block\"], [{\n          size: [\"small\", false, \"large\", \"huge\"]\n        }]]\n      }\n    });\n    const quill = quillInstance.current;\n    quill.root.innerHTML = description;\n    quill.on(\"text-change\", (delta, oldDelta, source) => {\n      if (source === \"user\") {\n        onChangeDescription(quill.root.innerHTML);\n      }\n    });\n    return () => {};\n  }, [onChangeDescription]);\n  return /*#__PURE__*/_jsxDEV(EditorBlock, {\n    children: [/*#__PURE__*/_jsxDEV(TitleInput, {\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n      onChange: onChangeTitle,\n      defaultValue: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuillWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: quillElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Editor;","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/components/common/contents/Editor.jsx"],"names":["React","useRef","useEffect","hljs","styled","configure","languages","EditorBlock","div","TitleInput","input","QuillWrapper","Editor","onChangeTitle","onChangeDescription","description","title","Quill","require","quillElement","quillInstance","current","theme","placeholder","modules","syntax","highlight","text","highlightAuto","value","toolbar","header","color","list","size","quill","root","innerHTML","on","delta","oldDelta","source"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/atom-one-dark.css\";\nimport \"quill/dist/quill.snow.css\";\nimport styled from \"styled-components\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 작성 에디터 컴포넌트\n */\n\n// highlightjs config\n\nhljs.configure({\n  languages: [\n    \"javascript\",\n    \"ruby\",\n    \"python\",\n    \"rust\",\n    \"c\",\n    \"c++\",\n    \"go\",\n    \"java\",\n    \"rust\",\n    \"kotlin\",\n    \"typescript\",\n  ],\n});\n\n// style\n\nconst EditorBlock = styled.div`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n`;\nconst TitleInput = styled.input`\n  font-size: 1.2rem;\n  outline: none;\n  padding-bottom: 0.2rem;\n  border: none;\n  border-bottom: 1px solid #aaa;\n  margin-bottom: 1rem;\n  width: 100%;\n`;\nconst QuillWrapper = styled.div`\n  .ql-editor {\n    padding: 20px;\n    min-height: 320px;\n    font-size: 1rem;\n    line-height: 1.5;\n  }\n  .ql-editor.ql-blank::before {\n    left: 20px;\n  }\n`;\n\nconst Editor = ({ onChangeTitle, onChangeDescription, description, title }) => {\n  // local state\n\n  const Quill = typeof window === \"object\" ? require(\"quill\") : () => false;\n  const quillElement = useRef(null);\n  const quillInstance = useRef(null);\n\n  // hooks\n\n  useEffect(() => {\n    quillInstance.current = new Quill(quillElement.current, {\n      theme: \"snow\",\n      placeholder: \"내용을 입력해주세요.\",\n      modules: {\n        syntax: { highlight: (text) => hljs.highlightAuto(text).value },\n        toolbar: [\n          [{ header: \"1\" }, { header: \"2\" }],\n          [{ color: [] }],\n          [\"bold\", \"italic\", \"underline\", \"strike\"],\n          [{ list: \"ordered\" }, { list: \"bullet\" }],\n          [\"blockquote\", \"code-block\"],\n          [{ size: [\"small\", false, \"large\", \"huge\"] }],\n        ],\n      },\n    });\n    const quill = quillInstance.current;\n    quill.root.innerHTML = description;\n    quill.on(\"text-change\", (delta, oldDelta, source) => {\n      if (source === \"user\") {\n        onChangeDescription(quill.root.innerHTML);\n      }\n    });\n\n    return () => {};\n  }, [onChangeDescription]);\n\n  return (\n    <EditorBlock>\n      <TitleInput\n        placeholder=\"제목을 입력해주세요.\"\n        onChange={onChangeTitle}\n        defaultValue={title}\n      ></TitleInput>\n      <QuillWrapper>\n        <div ref={quillElement}></div>\n      </QuillWrapper>\n    </EditorBlock>\n  );\n};\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}