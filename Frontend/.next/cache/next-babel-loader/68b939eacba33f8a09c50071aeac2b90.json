{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/jinho/Project/ProjectFrontend/components/common/contents/TagBox.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { Tag, Input, Tooltip } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포럼 포스트 작성에 쓰이는 태그박스 컴포넌트\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar TagBox = function TagBox(_ref) {\n  _s();\n\n  var tags = _ref.tags,\n      setTags = _ref.setTags,\n      inputVisible = _ref.inputVisible,\n      setInputVisible = _ref.setInputVisible,\n      inputValue = _ref.inputValue,\n      setInputValue = _ref.setInputValue,\n      editInputIndex = _ref.editInputIndex,\n      setEditInputIndex = _ref.setEditInputIndex,\n      editInputValue = _ref.editInputValue,\n      setEditInputValue = _ref.setEditInputValue;\n  // event listener\n  var handleClose = useCallback(function (removedTag) {\n    setTags(tags.filter(function (tag) {\n      return tag !== removedTag;\n    }));\n  }, [tags]);\n  var showInput = useCallback(function () {\n    setInputVisible(true);\n  }, []);\n  var handleInputChange = useCallback(function (e) {\n    setInputValue(e.target.value);\n  }, []);\n  var handleInputConfirm = useCallback(function () {\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      setTags([].concat(_toConsumableArray(tags), [inputValue]));\n    }\n\n    setInputVisible(false);\n    setInputValue(\"\");\n  }, [inputValue, tags]);\n  var handleEditInputChange = useCallback(function (e) {\n    setEditInputValue(e.target.value);\n  }, []);\n  var handleEditInputConfirm = useCallback(function () {\n    var newTags = _toConsumableArray(tags);\n\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [tags.map(function (tag, index) {\n      if (editInputIndex === index) {\n        return /*#__PURE__*/_jsxDEV(Input, {\n          ref: saveEditInputRef,\n          size: \"small\",\n          className: \"tag-input\",\n          value: editInputValue,\n          onChange: handleEditInputChange,\n          onBlur: handleEditInputConfirm,\n          onPressEnter: handleEditInputConfirm\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, _this);\n      }\n\n      var isLongTag = tag.length > 20;\n\n      var tagElem = /*#__PURE__*/_jsxDEV(Tag, {\n        className: \"edit-tag\",\n        closable: true,\n        onClose: function onClose() {\n          return handleClose(tag);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isLongTag ? \"\".concat(tag.slice(0, 20), \"...\") : tag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, _this)\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, _this);\n\n      return isLongTag ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: tag,\n        children: tagElem\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, _this) : tagElem;\n    }), inputVisible && /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      size: \"small\",\n      className: \"tag-input\",\n      value: inputValue,\n      onChange: handleInputChange,\n      onBlur: handleInputConfirm,\n      onPressEnter: handleInputConfirm,\n      style: {\n        width: \"78px\",\n        marginRight: \"8px\",\n        verticalAlign: \"top\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, _this), !inputVisible && /*#__PURE__*/_jsxDEV(Tag, {\n      className: \"site-tag-plus\",\n      onClick: showInput,\n      children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, _this), \" \\uD0DC\\uADF8\\uCD94\\uAC00\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TagBox, \"3RxMm+G3KzfZBW7kz/RHJcviEzc=\");\n\n_c = TagBox;\nexport default TagBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagBox\");","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/components/common/contents/TagBox.jsx"],"names":["React","useCallback","Tag","Input","Tooltip","PlusOutlined","TagBox","tags","setTags","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","handleClose","removedTag","filter","tag","showInput","handleInputChange","e","target","value","handleInputConfirm","indexOf","handleEditInputChange","handleEditInputConfirm","newTags","map","index","saveEditInputRef","isLongTag","length","tagElem","slice","width","marginRight","verticalAlign"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Tag, Input, Tooltip } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포럼 포스트 작성에 쓰이는 태그박스 컴포넌트\n */\n\nconst TagBox = ({\n  tags,\n  setTags,\n  inputVisible,\n  setInputVisible,\n  inputValue,\n  setInputValue,\n  editInputIndex,\n  setEditInputIndex,\n  editInputValue,\n  setEditInputValue,\n}) => {\n  // event listener\n\n  const handleClose = useCallback(\n    (removedTag) => {\n      setTags(tags.filter((tag) => tag !== removedTag));\n    },\n    [tags],\n  );\n  const showInput = useCallback(() => {\n    setInputVisible(true);\n  }, []);\n  const handleInputChange = useCallback((e) => {\n    setInputValue(e.target.value);\n  }, []);\n  const handleInputConfirm = useCallback(() => {\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      setTags([...tags, inputValue]);\n    }\n    setInputVisible(false);\n    setInputValue(\"\");\n  }, [inputValue, tags]);\n  const handleEditInputChange = useCallback((e) => {\n    setEditInputValue(e.target.value);\n  }, []);\n  const handleEditInputConfirm = useCallback(() => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  }, []);\n\n  return (\n    <>\n      {tags.map((tag, index) => {\n        if (editInputIndex === index) {\n          return (\n            <Input\n              ref={saveEditInputRef}\n              key={tag}\n              size=\"small\"\n              className=\"tag-input\"\n              value={editInputValue}\n              onChange={handleEditInputChange}\n              onBlur={handleEditInputConfirm}\n              onPressEnter={handleEditInputConfirm}\n            />\n          );\n        }\n\n        const isLongTag = tag.length > 20;\n\n        const tagElem = (\n          <Tag\n            className=\"edit-tag\"\n            key={tag}\n            closable\n            onClose={() => handleClose(tag)}\n          >\n            <span>{isLongTag ? `${tag.slice(0, 20)}...` : tag}</span>\n          </Tag>\n        );\n        return isLongTag ? (\n          <Tooltip title={tag} key={tag}>\n            {tagElem}\n          </Tooltip>\n        ) : (\n          tagElem\n        );\n      })}\n      {inputVisible && (\n        <Input\n          type=\"text\"\n          size=\"small\"\n          className=\"tag-input\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onBlur={handleInputConfirm}\n          onPressEnter={handleInputConfirm}\n          style={{ width: \"78px\", marginRight: \"8px\", verticalAlign: \"top\" }}\n        />\n      )}\n      {!inputVisible && (\n        <Tag className=\"site-tag-plus\" onClick={showInput}>\n          <PlusOutlined /> 태그추가\n        </Tag>\n      )}\n    </>\n  );\n};\n\nexport default TagBox;\n"]},"metadata":{},"sourceType":"module"}