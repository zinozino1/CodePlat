{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 채팅 관련 리덕스 설정파일\n */\nimport { handleActions, createAction } from \"redux-actions\"; // initial state\n\nvar initialState = {\n  currentChatRoom: null\n}; // action type\n\nexport var SET_CURRENT_CHAT_ROOM = \"chat/SET_CURRENT_CHAT_ROOM\";\nexport var INITIALIZE_CHAT_ROOM = \"chat/INITIALIZE_CHAT_ROOM\"; // action creator\n\nexport var setCurrentChatRoomAction = createAction(SET_CURRENT_CHAT_ROOM, function (data) {\n  return data;\n});\nexport var initializeChatRoomAction = createAction(INITIALIZE_CHAT_ROOM); // reducer\n\nvar chatReducer = handleActions((_handleActions = {}, _defineProperty(_handleActions, SET_CURRENT_CHAT_ROOM, function (state, action) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    currentChatRoom: action.payload\n  });\n}), _defineProperty(_handleActions, INITIALIZE_CHAT_ROOM, function (state, action) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    currentChatRoom: null\n  });\n}), _handleActions), initialState);\nexport default chatReducer;","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/reducers/chat.js"],"names":["handleActions","createAction","initialState","currentChatRoom","SET_CURRENT_CHAT_ROOM","INITIALIZE_CHAT_ROOM","setCurrentChatRoomAction","data","initializeChatRoomAction","chatReducer","state","action","payload"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAT,EAAwBC,YAAxB,QAA4C,eAA5C,C,CAEA;;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE;AADE,CAArB,C,CAIA;;AAEA,OAAO,IAAMC,qBAAqB,GAAG,4BAA9B;AAEP,OAAO,IAAMC,oBAAoB,GAAG,2BAA7B,C,CAEP;;AAEA,OAAO,IAAMC,wBAAwB,GAAGL,YAAY,CAClDG,qBADkD,EAElD,UAACG,IAAD;AAAA,SAAUA,IAAV;AAAA,CAFkD,CAA7C;AAKP,OAAO,IAAMC,wBAAwB,GAAGP,YAAY,CAACI,oBAAD,CAA7C,C,CAEP;;AAEA,IAAMI,WAAW,GAAGT,aAAa,uDAE5BI,qBAF4B,EAEJ,UAACM,KAAD,EAAQC,MAAR;AAAA,yCACpBD,KADoB;AAEvBP,IAAAA,eAAe,EAAEQ,MAAM,CAACC;AAFD;AAAA,CAFI,mCAM5BP,oBAN4B,EAML,UAACK,KAAD,EAAQC,MAAR;AAAA,yCACnBD,KADmB;AAEtBP,IAAAA,eAAe,EAAE;AAFK;AAAA,CANK,oBAW/BD,YAX+B,CAAjC;AAcA,eAAeO,WAAf","sourcesContent":["/**\n * @author 박진호\n * @version 1.0\n * @summary 채팅 관련 리덕스 설정파일\n */\n\nimport { handleActions, createAction } from \"redux-actions\";\n\n// initial state\n\nconst initialState = {\n  currentChatRoom: null,\n};\n\n// action type\n\nexport const SET_CURRENT_CHAT_ROOM = \"chat/SET_CURRENT_CHAT_ROOM\";\n\nexport const INITIALIZE_CHAT_ROOM = \"chat/INITIALIZE_CHAT_ROOM\";\n\n// action creator\n\nexport const setCurrentChatRoomAction = createAction(\n  SET_CURRENT_CHAT_ROOM,\n  (data) => data,\n);\n\nexport const initializeChatRoomAction = createAction(INITIALIZE_CHAT_ROOM);\n\n// reducer\n\nconst chatReducer = handleActions(\n  {\n    [SET_CURRENT_CHAT_ROOM]: (state, action) => ({\n      ...state,\n      currentChatRoom: action.payload,\n    }),\n    [INITIALIZE_CHAT_ROOM]: (state, action) => ({\n      ...state,\n      currentChatRoom: null,\n    }),\n  },\n  initialState,\n);\n\nexport default chatReducer;\n"]},"metadata":{},"sourceType":"module"}