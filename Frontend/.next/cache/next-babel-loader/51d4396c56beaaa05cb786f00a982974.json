{"ast":null,"code":"import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Avatar, Popover, Comment, Input, Image, Checkbox } from \"antd\";\nimport ProfileModal from \"../../modal/ProfileModal\";\nimport { UserOutlined, LockOutlined, LikeOutlined, LikeFilled } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nimport useToggle from \"../../../hooks/useToggle\";\nimport { SERVER_URL } from \"../../../lib/constant/constant\";\nimport { likeCommentRequestAction, unLikeCommentRequestAction } from \"../../../reducers/post\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 대댓글 아이템 컴포넌트\n */\n// style\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst ReApplyFormWrapper = styled.div.withConfig({\n  displayName: \"ReCommentListItem__ReApplyFormWrapper\",\n  componentId: \"sc-14mn7tx-0\"\n})([\"width:800px;display:flex;@media (max-width:768px){width:200px;display:block;}\"]);\nconst ReApplyInput = styled(Input.TextArea).withConfig({\n  displayName: \"ReCommentListItem__ReApplyInput\",\n  componentId: \"sc-14mn7tx-1\"\n})([\"flex:7;\"]);\nconst ButtonWrapper = styled.div.withConfig({\n  displayName: \"ReCommentListItem__ButtonWrapper\",\n  componentId: \"sc-14mn7tx-2\"\n})([\"line-height:30px;flex:1;.cancel-btn{cursor:pointer;margin-left:5px;}.submit-btn{cursor:pointer;color:#208fff;margin-left:10px;}.secret-btn{margin-left:10px;}\"]);\nconst CommentActivityWrapper = styled.div.withConfig({\n  displayName: \"ReCommentListItem__CommentActivityWrapper\",\n  componentId: \"sc-14mn7tx-3\"\n})([\"font-size:11px;padding:0 3px;cursor:pointer;\"]);\n\nconst ReCommentListItem = ({\n  reComment,\n  post,\n  me,\n  onDeleteComment\n}) => {\n  // redux\n  const dispatch = useDispatch(); // local state\n\n  const {\n    0: editReCommentText,\n    1: setEditReCommentText\n  } = useState(\"\");\n  const [isEditReComment, onToggleIsEditReComment] = useToggle(false);\n  const {\n    0: isReEditSecret,\n    1: setIsReEditSecret\n  } = useState(false);\n  const {\n    0: currentReComment,\n    1: setCurrentReComment\n  } = useState(null);\n  const {\n    0: like,\n    1: setLike\n  } = useState(reComment.likes.some((v, i) => {\n    if (me && v.userId === me._id) {\n      return true;\n    }\n  }) ? true : false); // event listener\n\n  const onChangeEditReCommentText = useCallback(e => {\n    setEditReCommentText(e.target.value);\n  }, []);\n  const onToggleIsReEditSecret = useCallback(() => {\n    setIsReEditSecret(!isReEditSecret);\n  }, [isReEditSecret]);\n  const onUpdateReComment = useCallback(reComment => {\n    if (editReCommentText === \"\") {\n      alert(\"내용을 입력해주세요.\");\n      return;\n    }\n\n    let updateConfirm = confirm(\"수정하시겠습니까?\");\n\n    if (updateConfirm) {\n      axios.patch(`/api/comments`, {\n        commentId: reComment._id,\n        content: editReCommentText,\n        secretComment: isReEditSecret\n      }).then(res => {\n        onToggleIsEditReComment();\n        Router.push(`/articles/${post.type}/${post._id}`);\n      }).catch(error => {\n        alert(\"댓글수정 실패\");\n      });\n    } else {\n      return;\n    }\n  }, [editReCommentText, isReEditSecret]);\n  const onToggleLike = useCallback(() => {\n    setLike(!like);\n\n    if (like) {\n      dispatch(unLikeCommentRequestAction({\n        user: me,\n        id: reComment.likes.find((v, i) => {\n          if (v.userId === me._id) {\n            return true;\n          }\n        })._id,\n        type: \"comment\",\n        commentId: reComment._id\n      }));\n    } else {\n      dispatch(likeCommentRequestAction({\n        user: me,\n        id: reComment._id,\n        type: \"comment\"\n      }));\n    }\n  }, [like, me, reComment]);\n  const onCancelEdit = useCallback(() => {\n    setEditReCommentText(reComment.content);\n    setIsReEditSecret(reComment.secretComment);\n    onToggleIsEditReComment();\n  }, [reComment, isEditReComment]);\n  const onChangeCurrentReComment = useCallback(reComment => {\n    setCurrentReComment(reComment);\n  }, []); // hooks\n\n  useEffect(() => {\n    setEditReCommentText(reComment.content);\n    setIsReEditSecret(reComment.secretComment);\n  }, [reComment]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsx(Comment, {\n      author: !reComment.isDelete && reComment.writer && post.writer && (reComment.writer._id === post.writer._id ? /*#__PURE__*/_jsx(\"span\", {\n        style: {\n          color: \"#1a91fe\"\n        },\n        children: \"\\uAE00\\uC4F4\\uC774\"\n      }) : reComment.writer.nickname),\n      actions: me ? isEditReComment && currentReComment && currentReComment._id === reComment._id ? [/*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsxs(ReApplyFormWrapper, {\n          children: [/*#__PURE__*/_jsx(ReApplyInput, {\n            rows: 1,\n            onChange: onChangeEditReCommentText,\n            defaultValue: reComment.content\n          }), /*#__PURE__*/_jsxs(ButtonWrapper, {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              className: \"submit-btn\",\n              onClick: () => {\n                onUpdateReComment(reComment);\n              },\n              children: \"\\uC218\\uC815\"\n            }, \"comment-list-reply-to-0\"), /*#__PURE__*/_jsx(\"span\", {\n              className: \"cancel-btn\",\n              onClick: onCancelEdit,\n              children: \"\\uCDE8\\uC18C\"\n            }, \"comment-list-reply-to-1\"), /*#__PURE__*/_jsx(\"span\", {\n              className: \"secret-btn\",\n              children: /*#__PURE__*/_jsx(Checkbox, {\n                onChange: onToggleIsReEditSecret,\n                style: {\n                  color: \"#999\"\n                },\n                defaultChecked: reComment.secretComment,\n                children: \"\\uBE44\\uBC00 \\uB313\\uAE00\"\n              })\n            }, \"comment-list-reply-to-2\")]\n          })]\n        })\n      })] : [/*#__PURE__*/_jsx(CommentActivityWrapper, {\n        children: me && /*#__PURE__*/_jsxs(\"span\", {\n          onClick: onToggleLike,\n          style: {\n            marginRight: \"10px\"\n          },\n          children: [like ? /*#__PURE__*/_jsx(LikeFilled, {\n            style: {\n              marginRight: \"3px\",\n              color: \"#1a91fe\"\n            }\n          }) : /*#__PURE__*/_jsx(LikeOutlined, {\n            style: {\n              marginRight: \"3px\"\n            }\n          }), reComment.likes.length]\n        })\n      }), /*#__PURE__*/_jsx(CommentActivityWrapper, {\n        children: reComment.writer && me && me._id === reComment.writer._id && /*#__PURE__*/_jsx(\"span\", {\n          onClick: () => {\n            onDeleteComment(reComment._id);\n          },\n          children: \"\\uC0AD\\uC81C\"\n        }, \"comment-list-reply-to-0\")\n      }), /*#__PURE__*/_jsx(CommentActivityWrapper, {\n        children: reComment.writer && me._id === reComment.writer._id && /*#__PURE__*/_jsx(\"span\", {\n          children: \"|\"\n        })\n      }), /*#__PURE__*/_jsx(CommentActivityWrapper, {\n        children: reComment.writer && me._id === reComment.writer._id && /*#__PURE__*/_jsx(\"span\", {\n          onClick: () => {\n            onToggleIsEditReComment();\n            onChangeCurrentReComment(reComment);\n          },\n          children: \"\\uC218\\uC815\"\n        }, \"comment-list-reply-to-0\")\n      })] : [],\n      avatar: /*#__PURE__*/_jsx(Popover, {\n        content: /*#__PURE__*/_jsx(\"div\", {\n          onClick: e => {\n            e.stopPropagation();\n          },\n          children: reComment.writer && reComment.writer.constructor == Object && /*#__PURE__*/_jsx(ProfileModal, {\n            writer: reComment.writer\n          })\n        }),\n        children: /*#__PURE__*/_jsx(Avatar, {\n          onClick: e => {\n            e.stopPropagation();\n          },\n          style: {\n            cursor: \"pointer\"\n          },\n          size: 28,\n          icon: /*#__PURE__*/_jsx(UserOutlined, {}),\n          src: reComment.writer && reComment.writer.avatarUrl && /*#__PURE__*/_jsx(Image, {\n            width: 28,\n            height: 28,\n            src: `${SERVER_URL}/${reComment.writer.avatarUrl}`\n          })\n        })\n      }),\n      content: reComment.writer && reComment.writer.constructor == Object ? reComment.secretComment ? me && (reComment.writer && reComment.writer._id === me._id || post.comments.find((v, i) => {\n        if (v._id === reComment.commentTo) {\n          return true;\n        }\n      }).writer._id === me._id) ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: reComment.content\n        }), /*#__PURE__*/_jsxs(\"span\", {\n          style: {\n            color: \"#999\",\n            fontSize: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsx(LockOutlined, {\n            style: {\n              margin: \"0 5px\",\n              color: \"#999\"\n            }\n          }), \"\\uBE44\\uBC00 \\uB313\\uAE00\"]\n        })]\n      }) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(LockOutlined, {\n          style: {\n            margin: \"0 5px\",\n            color: \"#999\"\n          }\n        }), /*#__PURE__*/_jsx(\"span\", {\n          style: {\n            color: \"#999\"\n          },\n          children: \"\\uBE44\\uBC00 \\uB313\\uAE00\\uC785\\uB2C8\\uB2E4.\"\n        })]\n      }) : reComment.content : \"탈퇴한 회원입니다.\",\n      datetime: `${new Date(reComment.createdAt).getMonth() + 1}/${new Date(reComment.createdAt).getDate()}  ${new Date(reComment.createdAt).getHours()}:${new Date(reComment.createdAt).getMinutes() < 10 ? \"0\" + new Date(reComment.createdAt).getMinutes() : new Date(reComment.createdAt).getMinutes()}:${new Date(reComment.createdAt).getSeconds() < 10 ? \"0\" + new Date(reComment.createdAt).getSeconds() : new Date(reComment.createdAt).getSeconds()}`\n    })\n  }, reComment._id);\n};\n\nexport default ReCommentListItem;","map":null,"metadata":{},"sourceType":"module"}