{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport client from \"./client\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 관련 api 정의 파일\n * @note deprecated 된 것은 컴포넌트 혹은 페이지 내부에서 axios 직접 요청으로 대체\n */\n\nexport var mainLoadPosts = function mainLoadPosts() {\n  return client.get(\"/api/posts\");\n};\nexport var writePost = function writePost(data) {\n  var config = {\n    headers: {\n      Accept: \"application/json\",\n      enctype: \"multipart/form-data\"\n    }\n  };\n  return client.post(\"/api/posts\", data, config);\n};\nexport var loadPost = function loadPost(postId) {\n  return client.get(\"/api/posts/\".concat(postId));\n};\nexport var loadPosts = function loadPosts(data) {\n  var filteredTechStack = data.techStack.map(function (v, i) {\n    if (v === \"C++\") {\n      return \"C%2B%2B\";\n    }\n\n    if (v === \"C#\") {\n      return \"C%23\";\n    } else {\n      return v;\n    }\n  });\n  return client.get(\"/api/posts/getPosts?type=\".concat(data.type, \"&techStack=\").concat(filteredTechStack.toString(), \"&skip=\").concat(data.skip, \"&term=\").concat(data.term, \"&location=\").concat(data.location));\n};\nexport var loadForumPosts = function loadForumPosts(data) {\n  return client.get(\"/api/posts/getForum?type=\".concat(data.type, \"&term=\").concat(data.term, \"&skip=\").concat(data.skip, \"&field=\").concat(data.field));\n};\nexport var postScrap = function postScrap(data) {\n  return client.post(\"/api/scraps\", _objectSpread({}, data));\n};\nexport var postUnScrap = function postUnScrap(data) {\n  return client[\"delete\"](\"/api/scraps/\".concat(data.id));\n}; // -> deprecated\n\nexport var addComment = function addComment(data) {\n  return client.post(\"/api/comments\", _objectSpread({}, data));\n};\nexport var deletePost = function deletePost(postId) {\n  return client[\"delete\"](\"/api/posts/\".concat(postId));\n}; // -> deprecated\n\nexport var deleteCommentWithChildren = function deleteCommentWithChildren(commentId) {\n  return client.put(\"/api/comments/parentDelete\", {\n    id: commentId\n  });\n}; // -> deprecated\n\nexport var deleteComment = function deleteComment(commentId) {\n  return client[\"delete\"](\"/api/comments/\".concat(commentId));\n};\nexport var upLike = function upLike(data) {\n  return client.post(\"/api/likes\", {\n    type: data.type,\n    id: data.id\n  });\n};\nexport var unLike = function unLike(data) {\n  return client[\"delete\"](\"/api/likes/\".concat(data.id));\n};","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/lib/api/post.js"],"names":["client","mainLoadPosts","get","writePost","data","config","headers","Accept","enctype","post","loadPost","postId","loadPosts","filteredTechStack","techStack","map","v","i","type","toString","skip","term","location","loadForumPosts","field","postScrap","postUnScrap","id","addComment","deletePost","deleteCommentWithChildren","commentId","put","deleteComment","upLike","unLike"],"mappings":"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","sourcesContent":["import client from \"./client\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 관련 api 정의 파일\n * @note deprecated 된 것은 컴포넌트 혹은 페이지 내부에서 axios 직접 요청으로 대체\n */\n\nexport const mainLoadPosts = () => client.get(`/api/posts`);\n\nexport const writePost = (data) => {\n  const config = {\n    headers: {\n      Accept: \"application/json\",\n      enctype: \"multipart/form-data\",\n    },\n  };\n  return client.post(`/api/posts`, data, config);\n};\n\nexport const loadPost = (postId) => client.get(`/api/posts/${postId}`);\n\nexport const loadPosts = (data) => {\n  const filteredTechStack = data.techStack.map((v, i) => {\n    if (v === \"C++\") {\n      return \"C%2B%2B\";\n    }\n    if (v === \"C#\") {\n      return \"C%23\";\n    } else {\n      return v;\n    }\n  });\n\n  return client.get(\n    `/api/posts/getPosts?type=${\n      data.type\n    }&techStack=${filteredTechStack.toString()}&skip=${data.skip}&term=${\n      data.term\n    }&location=${data.location}`,\n  );\n};\n\nexport const loadForumPosts = (data) =>\n  client.get(\n    `/api/posts/getForum?type=${data.type}&term=${data.term}&skip=${data.skip}&field=${data.field}`,\n  );\n\nexport const postScrap = (data) => client.post(`/api/scraps`, { ...data });\n\nexport const postUnScrap = (data) => client.delete(`/api/scraps/${data.id}`);\n\n// -> deprecated\nexport const addComment = (data) => client.post(`/api/comments`, { ...data });\n\nexport const deletePost = (postId) => client.delete(`/api/posts/${postId}`);\n\n// -> deprecated\nexport const deleteCommentWithChildren = (commentId) =>\n  client.put(`/api/comments/parentDelete`, { id: commentId });\n\n// -> deprecated\nexport const deleteComment = (commentId) =>\n  client.delete(`/api/comments/${commentId}`);\n\nexport const upLike = (data) =>\n  client.post(`/api/likes`, {\n    type: data.type,\n    id: data.id,\n  });\n\nexport const unLike = (data) => client.delete(`/api/likes/${data.id}`);\n"]},"metadata":{},"sourceType":"module"}