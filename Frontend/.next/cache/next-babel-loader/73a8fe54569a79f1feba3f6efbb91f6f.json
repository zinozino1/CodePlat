{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport client from \"./client\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 관련 api 정의 파일\n * @note deprecated 된 것은 컴포넌트 혹은 페이지 내부에서 axios 직접 요청으로 대체\n */\n\nexport const mainLoadPosts = () => client.get(`/api/posts`);\nexport const writePost = data => {\n  const config = {\n    headers: {\n      Accept: \"application/json\",\n      enctype: \"multipart/form-data\"\n    }\n  };\n  return client.post(`/api/posts`, data, config);\n};\nexport const loadPost = postId => client.get(`/api/posts/${postId}`);\nexport const loadPosts = data => {\n  const filteredTechStack = data.techStack.map((v, i) => {\n    if (v === \"C++\") {\n      return \"C%2B%2B\";\n    }\n\n    if (v === \"C#\") {\n      return \"C%23\";\n    } else {\n      return v;\n    }\n  });\n  return client.get(`/api/posts/getPosts?type=${data.type}&techStack=${filteredTechStack.toString()}&skip=${data.skip}&term=${data.term}&location=${data.location}`);\n};\nexport const loadForumPosts = data => client.get(`/api/posts/getForum?type=${data.type}&term=${data.term}&skip=${data.skip}&field=${data.field}`);\nexport const postScrap = data => client.post(`/api/scraps`, _objectSpread({}, data));\nexport const postUnScrap = data => client.delete(`/api/scraps/${data.id}`); // -> deprecated\n\nexport const addComment = data => client.post(`/api/comments`, _objectSpread({}, data));\nexport const deletePost = postId => client.delete(`/api/posts/${postId}`); // -> deprecated\n\nexport const deleteCommentWithChildren = commentId => client.put(`/api/comments/parentDelete`, {\n  id: commentId\n}); // -> deprecated\n\nexport const deleteComment = commentId => client.delete(`/api/comments/${commentId}`);\nexport const upLike = data => client.post(`/api/likes`, {\n  type: data.type,\n  id: data.id\n});\nexport const unLike = data => client.delete(`/api/likes/${data.id}`);","map":null,"metadata":{},"sourceType":"module"}