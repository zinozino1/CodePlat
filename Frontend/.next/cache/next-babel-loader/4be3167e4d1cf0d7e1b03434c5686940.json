{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport client from \"./client\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 관련 api 정의 파일\n * @note deprecated 된 것은 컴포넌트 혹은 페이지 내부에서 axios 직접 요청으로 대체\n */\n\nexport const mainLoadPosts = () => client.get(`/api/posts`);\nexport const writePost = data => {\n  const config = {\n    headers: {\n      Accept: \"application/json\",\n      enctype: \"multipart/form-data\"\n    }\n  };\n  return client.post(`/api/posts`, data, config);\n};\nexport const loadPost = postId => client.get(`/api/posts/${postId}`);\nexport const loadPosts = data => {\n  const filteredTechStack = data.techStack.map((v, i) => {\n    if (v === \"C++\") {\n      return \"C%2B%2B\";\n    }\n\n    if (v === \"C#\") {\n      return \"C%23\";\n    } else {\n      return v;\n    }\n  });\n  return client.get(`/api/posts/getPosts?type=${data.type}&techStack=${filteredTechStack.toString()}&skip=${data.skip}&term=${data.term}&location=${data.location}`);\n};\nexport const loadForumPosts = data => client.get(`/api/posts/getForum?type=${data.type}&term=${data.term}&skip=${data.skip}&field=${data.field}`);\nexport const postScrap = data => client.post(`/api/scraps`, _objectSpread({}, data));\nexport const postUnScrap = data => client.delete(`/api/scraps/${data.id}`); // -> deprecated\n\nexport const addComment = data => client.post(`/api/comments`, _objectSpread({}, data));\nexport const deletePost = postId => client.delete(`/api/posts/${postId}`); // -> deprecated\n\nexport const deleteCommentWithChildren = commentId => client.put(`/api/comments/parentDelete`, {\n  id: commentId\n}); // -> deprecated\n\nexport const deleteComment = commentId => client.delete(`/api/comments/${commentId}`);\nexport const upLike = data => client.post(`/api/likes`, {\n  type: data.type,\n  id: data.id\n});\nexport const unLike = data => client.delete(`/api/likes/${data.id}`);","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/Frontend/lib/api/post.js"],"names":["client","mainLoadPosts","get","writePost","data","config","headers","Accept","enctype","post","loadPost","postId","loadPosts","filteredTechStack","techStack","map","v","i","type","toString","skip","term","location","loadForumPosts","field","postScrap","postUnScrap","delete","id","addComment","deletePost","deleteCommentWithChildren","commentId","put","deleteComment","upLike","unLike"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAMD,MAAM,CAACE,GAAP,CAAY,YAAZ,CAA5B;AAEP,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU;AACjC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEPC,MAAAA,OAAO,EAAE;AAFF;AADI,GAAf;AAMA,SAAOR,MAAM,CAACS,IAAP,CAAa,YAAb,EAA0BL,IAA1B,EAAgCC,MAAhC,CAAP;AACD,CARM;AAUP,OAAO,MAAMK,QAAQ,GAAIC,MAAD,IAAYX,MAAM,CAACE,GAAP,CAAY,cAAaS,MAAO,EAAhC,CAA7B;AAEP,OAAO,MAAMC,SAAS,GAAIR,IAAD,IAAU;AACjC,QAAMS,iBAAiB,GAAGT,IAAI,CAACU,SAAL,CAAeC,GAAf,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrD,QAAID,CAAC,KAAK,KAAV,EAAiB;AACf,aAAO,SAAP;AACD;;AACD,QAAIA,CAAC,KAAK,IAAV,EAAgB;AACd,aAAO,MAAP;AACD,KAFD,MAEO;AACL,aAAOA,CAAP;AACD;AACF,GATyB,CAA1B;AAWA,SAAOhB,MAAM,CAACE,GAAP,CACJ,4BACCE,IAAI,CAACc,IACN,cAAaL,iBAAiB,CAACM,QAAlB,EAA6B,SAAQf,IAAI,CAACgB,IAAK,SAC3DhB,IAAI,CAACiB,IACN,aAAYjB,IAAI,CAACkB,QAAS,EALtB,CAAP;AAOD,CAnBM;AAqBP,OAAO,MAAMC,cAAc,GAAInB,IAAD,IAC5BJ,MAAM,CAACE,GAAP,CACG,4BAA2BE,IAAI,CAACc,IAAK,SAAQd,IAAI,CAACiB,IAAK,SAAQjB,IAAI,CAACgB,IAAK,UAAShB,IAAI,CAACoB,KAAM,EADhG,CADK;AAKP,OAAO,MAAMC,SAAS,GAAIrB,IAAD,IAAUJ,MAAM,CAACS,IAAP,CAAa,aAAb,oBAAgCL,IAAhC,EAA5B;AAEP,OAAO,MAAMsB,WAAW,GAAItB,IAAD,IAAUJ,MAAM,CAAC2B,MAAP,CAAe,eAAcvB,IAAI,CAACwB,EAAG,EAArC,CAA9B,C,CAEP;;AACA,OAAO,MAAMC,UAAU,GAAIzB,IAAD,IAAUJ,MAAM,CAACS,IAAP,CAAa,eAAb,oBAAkCL,IAAlC,EAA7B;AAEP,OAAO,MAAM0B,UAAU,GAAInB,MAAD,IAAYX,MAAM,CAAC2B,MAAP,CAAe,cAAahB,MAAO,EAAnC,CAA/B,C,CAEP;;AACA,OAAO,MAAMoB,yBAAyB,GAAIC,SAAD,IACvChC,MAAM,CAACiC,GAAP,CAAY,4BAAZ,EAAyC;AAAEL,EAAAA,EAAE,EAAEI;AAAN,CAAzC,CADK,C,CAGP;;AACA,OAAO,MAAME,aAAa,GAAIF,SAAD,IAC3BhC,MAAM,CAAC2B,MAAP,CAAe,iBAAgBK,SAAU,EAAzC,CADK;AAGP,OAAO,MAAMG,MAAM,GAAI/B,IAAD,IACpBJ,MAAM,CAACS,IAAP,CAAa,YAAb,EAA0B;AACxBS,EAAAA,IAAI,EAAEd,IAAI,CAACc,IADa;AAExBU,EAAAA,EAAE,EAAExB,IAAI,CAACwB;AAFe,CAA1B,CADK;AAMP,OAAO,MAAMQ,MAAM,GAAIhC,IAAD,IAAUJ,MAAM,CAAC2B,MAAP,CAAe,cAAavB,IAAI,CAACwB,EAAG,EAApC,CAAzB","sourcesContent":["import client from \"./client\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 관련 api 정의 파일\n * @note deprecated 된 것은 컴포넌트 혹은 페이지 내부에서 axios 직접 요청으로 대체\n */\n\nexport const mainLoadPosts = () => client.get(`/api/posts`);\n\nexport const writePost = (data) => {\n  const config = {\n    headers: {\n      Accept: \"application/json\",\n      enctype: \"multipart/form-data\",\n    },\n  };\n  return client.post(`/api/posts`, data, config);\n};\n\nexport const loadPost = (postId) => client.get(`/api/posts/${postId}`);\n\nexport const loadPosts = (data) => {\n  const filteredTechStack = data.techStack.map((v, i) => {\n    if (v === \"C++\") {\n      return \"C%2B%2B\";\n    }\n    if (v === \"C#\") {\n      return \"C%23\";\n    } else {\n      return v;\n    }\n  });\n\n  return client.get(\n    `/api/posts/getPosts?type=${\n      data.type\n    }&techStack=${filteredTechStack.toString()}&skip=${data.skip}&term=${\n      data.term\n    }&location=${data.location}`,\n  );\n};\n\nexport const loadForumPosts = (data) =>\n  client.get(\n    `/api/posts/getForum?type=${data.type}&term=${data.term}&skip=${data.skip}&field=${data.field}`,\n  );\n\nexport const postScrap = (data) => client.post(`/api/scraps`, { ...data });\n\nexport const postUnScrap = (data) => client.delete(`/api/scraps/${data.id}`);\n\n// -> deprecated\nexport const addComment = (data) => client.post(`/api/comments`, { ...data });\n\nexport const deletePost = (postId) => client.delete(`/api/posts/${postId}`);\n\n// -> deprecated\nexport const deleteCommentWithChildren = (commentId) =>\n  client.put(`/api/comments/parentDelete`, { id: commentId });\n\n// -> deprecated\nexport const deleteComment = (commentId) =>\n  client.delete(`/api/comments/${commentId}`);\n\nexport const upLike = (data) =>\n  client.post(`/api/likes`, {\n    type: data.type,\n    id: data.id,\n  });\n\nexport const unLike = (data) => client.delete(`/api/likes/${data.id}`);\n"]},"metadata":{},"sourceType":"module"}