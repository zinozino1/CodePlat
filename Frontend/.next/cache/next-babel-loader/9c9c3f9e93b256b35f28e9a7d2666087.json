{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jinho/Project/ProjectFrontend/components/common/contents/CommentForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { Form, Button, Input, Checkbox } from \"antd\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router, { withRouter } from \"next/router\";\nimport useToggle from \"../../../hooks/useToggle\";\nimport axios from \"axios\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 댓글 작성 폼 컴포넌트\n */\n// style\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CommentFormWrapper = styled.div.withConfig({\n  displayName: \"CommentForm__CommentFormWrapper\",\n  componentId: \"sc-1mffdup-0\"\n})([\".comment-input{&:hover{border:1px solid #ddd;}}.comment-btn{background:#313355;color:#fff;border:1px solid #313355;}\"]);\n_c = CommentFormWrapper;\nvar TextAreaWrapper = styled(Input.TextArea).withConfig({\n  displayName: \"CommentForm__TextAreaWrapper\",\n  componentId: \"sc-1mffdup-1\"\n})([\"width:94%;\"]);\n_c2 = TextAreaWrapper;\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post,\n      router = _ref.router;\n\n  // redux\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; // local state\n\n\n  var _useState = useState(\"\"),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      isSecret = _useToggle2[0],\n      onToggleIsSecret = _useToggle2[1]; // event listener\n\n\n  var onChangeComment = useCallback(function (e) {\n    setComment(e.target.value);\n  }, []);\n  var onSubmit = useCallback(function () {\n    var sumbitConfirm = confirm(\"댓글을 등록하시겠습니까?\");\n\n    if (sumbitConfirm) {\n      setComment(\"\");\n      axios.post(\"/api/comments\", {\n        postId: post._id,\n        type: post.type,\n        content: comment,\n        secretComment: isSecret\n      }).then(function (res) {\n        Router.push(\"/articles/\".concat(post.type, \"/\").concat(post._id));\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    } else {\n      return;\n    }\n  }, [comment, post, isSecret]);\n  return /*#__PURE__*/_jsxDEV(CommentFormWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        children: [/*#__PURE__*/_jsxDEV(TextAreaWrapper, {\n          className: \"comment-input\",\n          rows: 3,\n          onChange: onChangeComment,\n          value: comment,\n          placeholder: me ? \"댓글을 작성해보세요.\" : \"로그인이 필요한 서비스입니다.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          style: {\n            marginTop: \"5px\",\n            color: \"#999\"\n          },\n          onChange: onToggleIsSecret,\n          disabled: me ? false : true,\n          children: \"\\uBE44\\uBC00 \\uB313\\uAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"comment-btn\",\n          htmlType: \"submit\",\n          onClick: onSubmit,\n          type: \"primary\",\n          disabled: me ? false : true,\n          children: \"\\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CommentForm, \"czi/IZOn+znc4kQNVFyQeSaUG4I=\", false, function () {\n  return [useSelector, useToggle];\n});\n\n_c3 = CommentForm;\nexport default _c4 = withRouter(CommentForm);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CommentFormWrapper\");\n$RefreshReg$(_c2, \"TextAreaWrapper\");\n$RefreshReg$(_c3, \"CommentForm\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/components/common/contents/CommentForm.jsx"],"names":["React","useCallback","useState","Form","Button","Input","Checkbox","styled","useDispatch","useSelector","Router","withRouter","useToggle","axios","CommentFormWrapper","div","TextAreaWrapper","TextArea","CommentForm","post","router","state","user","me","comment","setComment","isSecret","onToggleIsSecret","onChangeComment","e","target","value","onSubmit","sumbitConfirm","confirm","postId","_id","type","content","secretComment","then","res","push","err","console","log","marginTop","color"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { Form, Button, Input, Checkbox } from \"antd\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router, { withRouter } from \"next/router\";\nimport useToggle from \"../../../hooks/useToggle\";\nimport axios from \"axios\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 댓글 작성 폼 컴포넌트\n */\n\n// style\n\nconst CommentFormWrapper = styled.div`\n  .comment-input {\n    &:hover {\n      border: 1px solid #ddd;\n    }\n  }\n  .comment-btn {\n    background: #313355;\n    color: #fff;\n    border: 1px solid #313355;\n  }\n`;\n\nconst TextAreaWrapper = styled(Input.TextArea)`\n  width: 94%;\n`;\n\nconst CommentForm = ({ post, router }) => {\n  // redux\n\n  const { me } = useSelector((state) => state.user);\n\n  // local state\n\n  const [comment, setComment] = useState(\"\");\n  const [isSecret, onToggleIsSecret] = useToggle(false);\n\n  // event listener\n\n  const onChangeComment = useCallback((e) => {\n    setComment(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    let sumbitConfirm = confirm(\"댓글을 등록하시겠습니까?\");\n    if (sumbitConfirm) {\n      setComment(\"\");\n      axios\n        .post(`/api/comments`, {\n          postId: post._id,\n          type: post.type,\n          content: comment,\n          secretComment: isSecret,\n        })\n        .then((res) => {\n          Router.push(`/articles/${post.type}/${post._id}`);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return;\n    }\n  }, [comment, post, isSecret]);\n\n  return (\n    <CommentFormWrapper>\n      <Form>\n        <Form.Item>\n          <TextAreaWrapper\n            className=\"comment-input\"\n            rows={3}\n            onChange={onChangeComment}\n            value={comment}\n            placeholder={\n              me ? \"댓글을 작성해보세요.\" : \"로그인이 필요한 서비스입니다.\"\n            }\n          />\n          <Checkbox\n            style={{ marginTop: \"5px\", color: \"#999\" }}\n            onChange={onToggleIsSecret}\n            disabled={me ? false : true}\n          >\n            비밀 댓글\n          </Checkbox>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            className=\"comment-btn\"\n            htmlType=\"submit\"\n            onClick={onSubmit}\n            type=\"primary\"\n            disabled={me ? false : true}\n          >\n            등록\n          </Button>\n        </Form.Item>\n      </Form>\n    </CommentFormWrapper>\n  );\n};\n\nexport default withRouter(CommentForm);\n"]},"metadata":{},"sourceType":"module"}