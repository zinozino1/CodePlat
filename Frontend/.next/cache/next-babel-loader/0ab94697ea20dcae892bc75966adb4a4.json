{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions, createAction } from \"redux-actions\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 유저 관련 리덕스 설정파일\n * @note deprecated 된 것은 컴포넌트 혹은 페이지 내부에서 axios 직접 요청으로 대체\n */\n// initial state\n\nconst initialState = {\n  me: null,\n  setUserLoading: false,\n  setUserDone: false,\n  setUserFalse: null,\n  loginLoading: false,\n  loginDone: false,\n  loginError: null,\n  logoutLoading: false,\n  logoutDone: false,\n  logoutError: null,\n  registerLoading: false,\n  registerSuccess: false,\n  registerFailure: null\n}; // action type\n\nexport const SET_USER_REQUEST = \"user/SET_USER_REQUEST\";\nexport const SET_USER_SUCCESS = \"user/SET_USER_SUCCESS\";\nexport const SET_USER_FAILURE = \"user/SET_USER_FAILURE\";\nexport const LOG_IN_REQUEST = \"user/LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"user/LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"user/LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"user/LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"user/LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"user/LOG_OUT_FAILURE\"; // -> deprecated\n\nexport const REGISTER_REQUEST = \"user/REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"user/REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"user/REGISTER_FAILURE\";\nexport const SET_CURRENT_OPPONENT = \"user/SET_CURRENT_OPPONENT\"; // action creator\n\nexport const setUserRequestAction = createAction(SET_USER_REQUEST, data => data);\nexport const loginRequestAction = createAction(LOG_IN_REQUEST, data => data);\nexport const logoutRequestAction = createAction(LOG_OUT_REQUEST); // -> deprecated\n\nexport const registerRequestAction = createAction(REGISTER_REQUEST, data => data);\nexport const setCurrentOpponentRequestAction = createAction(SET_CURRENT_OPPONENT, data => data); // reducer\n\nconst userReducer = handleActions({\n  [SET_USER_REQUEST]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    setUserLoading: true,\n    setUserDone: false,\n    setUserFalse: null\n  }),\n  [SET_USER_SUCCESS]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    setUserLoading: false,\n    setUserDone: true,\n    setUserFalse: null,\n    me: action.user\n  }),\n  [SET_USER_FAILURE]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    setUserLoading: false,\n    setUserDone: false,\n    setUserFalse: null\n  }),\n  [LOG_IN_REQUEST]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    loginLoading: true,\n    loginDone: false,\n    loginError: null\n  }),\n  [LOG_IN_SUCCESS]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    loginLoading: false,\n    loginDone: true,\n    loginError: null,\n    me: action.user\n  }),\n  [LOG_IN_FAILURE]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    loginLoading: false,\n    loginDone: false,\n    loginError: action.error\n  }),\n  [LOG_OUT_REQUEST]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    logoutLoading: true,\n    logoutDone: false,\n    logoutError: null\n  }),\n  [LOG_OUT_SUCCESS]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    logoutLoading: false,\n    logoutDone: true,\n    logoutError: null,\n    me: null\n  }),\n  [LOG_OUT_FAILURE]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    logoutLoading: false,\n    logoutDone: false,\n    logoutError: action.error\n  }),\n  // -> deprecated\n  [REGISTER_REQUEST]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    registerLoading: true,\n    registerSuccess: false,\n    registerFailure: null\n  }),\n  [REGISTER_SUCCESS]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    registerLoading: false,\n    registerSuccess: true,\n    registerFailure: null\n  }),\n  [REGISTER_FAILURE]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    registerLoading: false,\n    registerSuccess: false,\n    registerFailure: null\n  }),\n  [SET_CURRENT_OPPONENT]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    me: _objectSpread(_objectSpread({}, state.me), {}, {\n      opponent: action.payload.users.filter((v, i) => {\n        if (v.nickname !== state.me.nickname) {\n          return v;\n        }\n      })[0].nickname\n    })\n  })\n}, initialState);\nexport default userReducer;","map":null,"metadata":{},"sourceType":"module"}