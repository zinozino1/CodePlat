{"ast":null,"code":"var _jsxFileName = \"/Users/jinho/Project/ProjectFrontend/pages/_document.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import React from \"react\";\n// import Document, { Html, Head, Main, NextScript } from \"next/document\";\n// import { ServerStyleSheet } from \"styled-components\";\n// /**\n//  * @author 박진호\n//  * @version 1.0\n//  * @summary SSR 엔트리파일 커스터마이징(head에 css import)\n//  */\n// export default class MyDocument extends Document {\n//   static async getInitialProps(ctx) {\n//     const sheet = new ServerStyleSheet();\n//     console.log(\"ctx:\", ctx);\n//     const originalRenderPage = ctx.renderPage;\n//     const styleTags = sheet.getStyleElement();\n//     try {\n//       ctx.renderPage = () =>\n//         originalRenderPage({\n//           enhanceApp: (App) => (props) =>\n//             sheet.collectStyles(<App {...props} />),\n//         });\n//       const initialProps = await Document.getInitialProps(ctx);\n//       return {\n//         ...initialProps,\n//         styles: (\n//           <>\n//             {initialProps.styles}\n//             {sheet.getStyleElement()}\n//           </>\n//         ),\n//       };\n//     } catch (error) {\n//       console.error(error);\n//     } finally {\n//       sheet.seal();\n//     }\n//   }\n//   render() {\n//     return (\n//       <Html>\n//         <Head>{this.props.styleTags}</Head>\n//         <body>\n//           <Main />\n//           <NextScript />\n//         </body>\n//       </Html>\n//     );\n//   }\n// }\nimport Document, { Html, Head, Main, NextScript } from \"next/document\"; // Import styled components ServerStyleSheet\n\nimport { ServerStyleSheet } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MyDocument extends Document {\n  static getInitialProps({\n    renderPage\n  }) {\n    // Step 1: Create an instance of ServerStyleSheet\n    const sheet = new ServerStyleSheet(); // Step 2: Retrieve styles from components in the page\n\n    const page = renderPage(App => props => sheet.collectStyles( /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }, this))); // Step 3: Extract the styles as <style> tags\n\n    const styleTags = sheet.getStyleElement(); // Step 4: Pass styleTags as a prop\n\n    return _objectSpread(_objectSpread({}, page), {}, {\n      styleTags\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: this.props.styleTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/pages/_document.jsx"],"names":["Document","Html","Head","Main","NextScript","ServerStyleSheet","MyDocument","getInitialProps","renderPage","sheet","page","App","props","collectStyles","styleTags","getStyleElement","render"],"mappings":";;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD,C,CACA;;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,eAAe,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAC/C,SAAOO,eAAP,CAAuB;AAAEC,IAAAA;AAAF,GAAvB,EAAuC;AACrC;AACA,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd,CAFqC,CAIrC;;AACA,UAAMK,IAAI,GAAGF,UAAU,CAAEG,GAAD,IAAUC,KAAD,IAC/BH,KAAK,CAACI,aAAN,eAAoB,QAAC,GAAD,oBAASD,KAAT;AAAA;AAAA;AAAA;AAAA,YAApB,CADqB,CAAvB,CALqC,CASrC;;AACA,UAAME,SAAS,GAAGL,KAAK,CAACM,eAAN,EAAlB,CAVqC,CAYrC;;AACA,2CAAYL,IAAZ;AAAkBI,MAAAA;AAAlB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD;AAAA,kBAEG,KAAKJ,KAAL,CAAWE;AAFd;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA9B8C","sourcesContent":["// import React from \"react\";\n// import Document, { Html, Head, Main, NextScript } from \"next/document\";\n// import { ServerStyleSheet } from \"styled-components\";\n\n// /**\n//  * @author 박진호\n//  * @version 1.0\n//  * @summary SSR 엔트리파일 커스터마이징(head에 css import)\n//  */\n\n// export default class MyDocument extends Document {\n//   static async getInitialProps(ctx) {\n//     const sheet = new ServerStyleSheet();\n//     console.log(\"ctx:\", ctx);\n//     const originalRenderPage = ctx.renderPage;\n//     const styleTags = sheet.getStyleElement();\n\n//     try {\n//       ctx.renderPage = () =>\n//         originalRenderPage({\n//           enhanceApp: (App) => (props) =>\n//             sheet.collectStyles(<App {...props} />),\n//         });\n//       const initialProps = await Document.getInitialProps(ctx);\n//       return {\n//         ...initialProps,\n//         styles: (\n//           <>\n//             {initialProps.styles}\n//             {sheet.getStyleElement()}\n//           </>\n//         ),\n//       };\n//     } catch (error) {\n//       console.error(error);\n//     } finally {\n//       sheet.seal();\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <Html>\n//         <Head>{this.props.styleTags}</Head>\n//         <body>\n//           <Main />\n//           <NextScript />\n//         </body>\n//       </Html>\n//     );\n//   }\n// }\n\nimport Document, { Html, Head, Main, NextScript } from \"next/document\";\n// Import styled components ServerStyleSheet\nimport { ServerStyleSheet } from \"styled-components\";\n\nexport default class MyDocument extends Document {\n  static getInitialProps({ renderPage }) {\n    // Step 1: Create an instance of ServerStyleSheet\n    const sheet = new ServerStyleSheet();\n\n    // Step 2: Retrieve styles from components in the page\n    const page = renderPage((App) => (props) =>\n      sheet.collectStyles(<App {...props} />),\n    );\n\n    // Step 3: Extract the styles as <style> tags\n    const styleTags = sheet.getStyleElement();\n\n    // Step 4: Pass styleTags as a prop\n    return { ...page, styleTags };\n  }\n\n  render() {\n    return (\n      <Html>\n        <Head>\n          {/* Step 5: Output the styles in the head  */}\n          {this.props.styleTags}\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}