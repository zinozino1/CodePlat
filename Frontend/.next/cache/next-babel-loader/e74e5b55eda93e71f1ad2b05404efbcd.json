{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions, createAction } from \"redux-actions\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 유저 관련 리덕스 설정파일\n * @note deprecated 된 것은 컴포넌트 혹은 페이지 내부에서 axios 직접 요청으로 대체\n */\n// initial state\n\nconst initialState = {\n  me: null,\n  setUserLoading: false,\n  setUserDone: false,\n  setUserFalse: null,\n  loginLoading: false,\n  loginDone: false,\n  loginError: null,\n  logoutLoading: false,\n  logoutDone: false,\n  logoutError: null,\n  registerLoading: false,\n  registerSuccess: false,\n  registerFailure: null\n}; // action type\n\nexport const SET_USER_REQUEST = \"user/SET_USER_REQUEST\";\nexport const SET_USER_SUCCESS = \"user/SET_USER_SUCCESS\";\nexport const SET_USER_FAILURE = \"user/SET_USER_FAILURE\";\nexport const LOG_IN_REQUEST = \"user/LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"user/LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"user/LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"user/LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"user/LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"user/LOG_OUT_FAILURE\"; // -> deprecated\n\nexport const REGISTER_REQUEST = \"user/REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"user/REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"user/REGISTER_FAILURE\";\nexport const SET_CURRENT_OPPONENT = \"user/SET_CURRENT_OPPONENT\"; // action creator\n\nexport const setUserRequestAction = createAction(SET_USER_REQUEST, data => data);\nexport const loginRequestAction = createAction(LOG_IN_REQUEST, data => data);\nexport const logoutRequestAction = createAction(LOG_OUT_REQUEST); // -> deprecated\n\nexport const registerRequestAction = createAction(REGISTER_REQUEST, data => data);\nexport const setCurrentOpponentRequestAction = createAction(SET_CURRENT_OPPONENT, data => data); // reducer\n\nconst userReducer = handleActions({\n  [SET_USER_REQUEST]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    setUserLoading: true,\n    setUserDone: false,\n    setUserFalse: null\n  }),\n  [SET_USER_SUCCESS]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    setUserLoading: false,\n    setUserDone: true,\n    setUserFalse: null,\n    me: action.user\n  }),\n  [SET_USER_FAILURE]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    setUserLoading: false,\n    setUserDone: false,\n    setUserFalse: null\n  }),\n  [LOG_IN_REQUEST]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    loginLoading: true,\n    loginDone: false,\n    loginError: null\n  }),\n  [LOG_IN_SUCCESS]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    loginLoading: false,\n    loginDone: true,\n    loginError: null,\n    me: action.user\n  }),\n  [LOG_IN_FAILURE]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    loginLoading: false,\n    loginDone: false,\n    loginError: action.error\n  }),\n  [LOG_OUT_REQUEST]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    logoutLoading: true,\n    logoutDone: false,\n    logoutError: null\n  }),\n  [LOG_OUT_SUCCESS]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    logoutLoading: false,\n    logoutDone: true,\n    logoutError: null,\n    me: null\n  }),\n  [LOG_OUT_FAILURE]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    logoutLoading: false,\n    logoutDone: false,\n    logoutError: action.error\n  }),\n  // -> deprecated\n  [REGISTER_REQUEST]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    registerLoading: true,\n    registerSuccess: false,\n    registerFailure: null\n  }),\n  [REGISTER_SUCCESS]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    registerLoading: false,\n    registerSuccess: true,\n    registerFailure: null\n  }),\n  [REGISTER_FAILURE]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    registerLoading: false,\n    registerSuccess: false,\n    registerFailure: null\n  }),\n  [SET_CURRENT_OPPONENT]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    me: _objectSpread(_objectSpread({}, state.me), {}, {\n      opponent: action.payload.users.filter((v, i) => {\n        if (v.nickname !== state.me.nickname) {\n          return v;\n        }\n      })[0].nickname\n    })\n  })\n}, initialState);\nexport default userReducer;","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/reducers/user.js"],"names":["handleActions","createAction","initialState","me","setUserLoading","setUserDone","setUserFalse","loginLoading","loginDone","loginError","logoutLoading","logoutDone","logoutError","registerLoading","registerSuccess","registerFailure","SET_USER_REQUEST","SET_USER_SUCCESS","SET_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","SET_CURRENT_OPPONENT","setUserRequestAction","data","loginRequestAction","logoutRequestAction","registerRequestAction","setCurrentOpponentRequestAction","userReducer","state","action","user","error","opponent","payload","users","filter","v","i","nickname"],"mappings":"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","sourcesContent":["import { handleActions, createAction } from \"redux-actions\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 유저 관련 리덕스 설정파일\n * @note deprecated 된 것은 컴포넌트 혹은 페이지 내부에서 axios 직접 요청으로 대체\n */\n\n// initial state\n\nconst initialState = {\n  me: null,\n  setUserLoading: false,\n  setUserDone: false,\n  setUserFalse: null,\n  loginLoading: false,\n  loginDone: false,\n  loginError: null,\n  logoutLoading: false,\n  logoutDone: false,\n  logoutError: null,\n  registerLoading: false,\n  registerSuccess: false,\n  registerFailure: null,\n};\n\n// action type\n\nexport const SET_USER_REQUEST = \"user/SET_USER_REQUEST\";\nexport const SET_USER_SUCCESS = \"user/SET_USER_SUCCESS\";\nexport const SET_USER_FAILURE = \"user/SET_USER_FAILURE\";\n\nexport const LOG_IN_REQUEST = \"user/LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"user/LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"user/LOG_IN_FAILURE\";\n\nexport const LOG_OUT_REQUEST = \"user/LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"user/LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"user/LOG_OUT_FAILURE\";\n\n// -> deprecated\nexport const REGISTER_REQUEST = \"user/REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"user/REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"user/REGISTER_FAILURE\";\n\nexport const SET_CURRENT_OPPONENT = \"user/SET_CURRENT_OPPONENT\";\n\n// action creator\n\nexport const setUserRequestAction = createAction(\n  SET_USER_REQUEST,\n  (data) => data,\n);\n\nexport const loginRequestAction = createAction(LOG_IN_REQUEST, (data) => data);\n\nexport const logoutRequestAction = createAction(LOG_OUT_REQUEST);\n\n// -> deprecated\nexport const registerRequestAction = createAction(\n  REGISTER_REQUEST,\n  (data) => data,\n);\n\nexport const setCurrentOpponentRequestAction = createAction(\n  SET_CURRENT_OPPONENT,\n  (data) => data,\n);\n\n// reducer\n\nconst userReducer = handleActions(\n  {\n    [SET_USER_REQUEST]: (state, action) => ({\n      ...state,\n      setUserLoading: true,\n      setUserDone: false,\n      setUserFalse: null,\n    }),\n    [SET_USER_SUCCESS]: (state, action) => ({\n      ...state,\n      setUserLoading: false,\n      setUserDone: true,\n      setUserFalse: null,\n      me: action.user,\n    }),\n    [SET_USER_FAILURE]: (state, action) => ({\n      ...state,\n      setUserLoading: false,\n      setUserDone: false,\n      setUserFalse: null,\n    }),\n    [LOG_IN_REQUEST]: (state, action) => ({\n      ...state,\n      loginLoading: true,\n      loginDone: false,\n      loginError: null,\n    }),\n    [LOG_IN_SUCCESS]: (state, action) => ({\n      ...state,\n      loginLoading: false,\n      loginDone: true,\n      loginError: null,\n      me: action.user,\n    }),\n    [LOG_IN_FAILURE]: (state, action) => ({\n      ...state,\n      loginLoading: false,\n      loginDone: false,\n      loginError: action.error,\n    }),\n    [LOG_OUT_REQUEST]: (state, action) => ({\n      ...state,\n      logoutLoading: true,\n      logoutDone: false,\n      logoutError: null,\n    }),\n    [LOG_OUT_SUCCESS]: (state, action) => ({\n      ...state,\n      logoutLoading: false,\n      logoutDone: true,\n      logoutError: null,\n      me: null,\n    }),\n    [LOG_OUT_FAILURE]: (state, action) => ({\n      ...state,\n      logoutLoading: false,\n      logoutDone: false,\n      logoutError: action.error,\n    }),\n    // -> deprecated\n    [REGISTER_REQUEST]: (state, action) => ({\n      ...state,\n      registerLoading: true,\n      registerSuccess: false,\n      registerFailure: null,\n    }),\n    [REGISTER_SUCCESS]: (state, action) => ({\n      ...state,\n      registerLoading: false,\n      registerSuccess: true,\n      registerFailure: null,\n    }),\n    [REGISTER_FAILURE]: (state, action) => ({\n      ...state,\n      registerLoading: false,\n      registerSuccess: false,\n      registerFailure: null,\n    }),\n    [SET_CURRENT_OPPONENT]: (state, action) => ({\n      ...state,\n      me: {\n        ...state.me,\n        opponent: action.payload.users.filter((v, i) => {\n          if (v.nickname !== state.me.nickname) {\n            return v;\n          }\n        })[0].nickname,\n      },\n    }),\n  },\n  initialState,\n);\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}