{"ast":null,"code":"var _jsxFileName = \"/Users/jinho/Project/ProjectFrontend/components/modal/ProfileModal.jsx\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Tag } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport firebase from \"../../firebase\";\nimport Router, { withRouter } from \"next/router\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 프로필 모달 창 컴포넌트, 메시지보내기 버튼 클릭 시 파이어베이스 채팅방 생성\n */\n// style\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileWrapper = styled.div.withConfig({\n  displayName: \"ProfileModal__ProfileWrapper\",\n  componentId: \"pdlbcs-0\"\n})([\"margin:0;border:1px solid #ddd;padding:5px;.btn-wrapper{padding:5px;text-align:center;}\"]);\nconst RowWrapper = styled.div.withConfig({\n  displayName: \"ProfileModal__RowWrapper\",\n  componentId: \"pdlbcs-1\"\n})([\"padding:5px;.tag-partial{width:55px;text-align:center;}\"]);\n\nconst ProfileModal = ({\n  writer\n}) => {\n  // redux\n  const {\n    me\n  } = useSelector(state => state.user); // local state\n\n  const {\n    0: chatRoomsRef,\n    1: setChatRoomsRef\n  } = useState(firebase.database().ref(\"chatRooms\"));\n  const {\n    0: chatRooms,\n    1: setChatRooms\n  } = useState([]); // event listener\n\n  const addChatRoomListener = () => {\n    let chatRoomsArray = [];\n    chatRoomsRef.on(\"child_added\", DataSnapShot => {\n      chatRoomsArray.push(DataSnapShot.val());\n      setChatRooms(chatRoomsArray);\n    });\n  };\n\n  const onCreateChatRoom = useCallback(async () => {\n    let user = firebase.auth().currentUser;\n\n    if (user) {\n      const key = chatRoomsRef.push().key;\n      const newChatRoom = {\n        id: key,\n        users: [{\n          clientId: me._id,\n          nickname: me.nickname\n        }, {\n          clientId: writer._id,\n          nickname: writer.nickname\n        }]\n      };\n      let chatRoomExist = false;\n\n      if (chatRooms.length !== 0) {\n        chatRooms.forEach((v, i) => {\n          let cnt = 0;\n          v.users.forEach((s, j) => {\n            if (s.clientId === newChatRoom.users[0].clientId || s.clientId === newChatRoom.users[1].clientId) {\n              cnt++;\n            }\n          });\n\n          if (cnt === 2) {\n            chatRoomExist = true;\n          }\n        });\n      }\n\n      if (chatRoomExist) {\n        Router.push(`/mypage`);\n      } else {\n        try {\n          await chatRoomsRef.child(key).update(newChatRoom);\n          alert(\"채팅방 생성완료\");\n          Router.push(`/mypage`);\n        } catch (error) {\n          alert(\"오류발생! 다시 시도해주세요.\");\n        }\n      }\n\n      chatRoomExist = false;\n    }\n  }, [chatRoomsRef, chatRooms]); // hooks\n\n  useEffect(() => {\n    addChatRoomListener();\n    return () => {\n      chatRoomsRef.off();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProfileWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(RowWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"tag-partial\",\n          color: \"#ccc\",\n          children: \"\\uAD00\\uC2EC\\uAE30\\uC220\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), writer.techStack.map((v, i) => {\n        if (i < 3) {\n          return /*#__PURE__*/_jsxDEV(Tag, {\n            color: \"blue\",\n            children: v\n          }, v, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"tag-partial\",\n          color: \"#ccc\",\n          children: \"\\uAC00\\uC785\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${new Date(writer.createdAt).getFullYear()}.${new Date(writer.createdAt).getMonth() + 1}.${new Date(writer.createdAt).getDate()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"tag-partial\",\n          color: \"#ccc\",\n          children: \"Github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), me && me.secretGithub ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#999\"\n        },\n        children: \"\\uBE44\\uACF5\\uAC1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: writer.githubUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowWrapper, {\n      className: \"btn-wrapper\",\n      children: me && me._id !== writer._id && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        className: \"note-btn\",\n        onClick: onCreateChatRoom,\n        style: {\n          marginTop: \"20px\"\n        },\n        children: \"\\uBA54\\uC2DC\\uC9C0 \\uBCF4\\uB0B4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withRouter(ProfileModal);","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/components/modal/ProfileModal.jsx"],"names":["React","useCallback","useState","useEffect","styled","Button","Tag","useSelector","useDispatch","firebase","Router","withRouter","ProfileWrapper","div","RowWrapper","ProfileModal","writer","me","state","user","chatRoomsRef","setChatRoomsRef","database","ref","chatRooms","setChatRooms","addChatRoomListener","chatRoomsArray","on","DataSnapShot","push","val","onCreateChatRoom","auth","currentUser","key","newChatRoom","id","users","clientId","_id","nickname","chatRoomExist","length","forEach","v","i","cnt","s","j","child","update","alert","error","off","techStack","map","Date","createdAt","getFullYear","getMonth","getDate","secretGithub","color","githubUrl","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,MAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,MAAMC,cAAc,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,+FAApB;AAUA,MAAMC,UAAU,GAAGV,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,+DAAhB;;AAQA,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACnC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAASV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B,CAHmC,CAKnC;;AAEA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCnB,QAAQ,CAC9CO,QAAQ,CAACa,QAAT,GAAoBC,GAApB,CAAwB,WAAxB,CAD8C,CAAhD;AAGA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BvB,QAAQ,CAAC,EAAD,CAA1C,CAVmC,CAYnC;;AAEA,QAAMwB,mBAAmB,GAAG,MAAM;AAChC,QAAIC,cAAc,GAAG,EAArB;AAEAP,IAAAA,YAAY,CAACQ,EAAb,CAAgB,aAAhB,EAAgCC,YAAD,IAAkB;AAC/CF,MAAAA,cAAc,CAACG,IAAf,CAAoBD,YAAY,CAACE,GAAb,EAApB;AACAN,MAAAA,YAAY,CAACE,cAAD,CAAZ;AACD,KAHD;AAID,GAPD;;AASA,QAAMK,gBAAgB,GAAG/B,WAAW,CAAC,YAAY;AAC/C,QAAIkB,IAAI,GAAGV,QAAQ,CAACwB,IAAT,GAAgBC,WAA3B;;AACA,QAAIf,IAAJ,EAAU;AACR,YAAMgB,GAAG,GAAGf,YAAY,CAACU,IAAb,GAAoBK,GAAhC;AACA,YAAMC,WAAW,GAAG;AAClBC,QAAAA,EAAE,EAAEF,GADc;AAElBG,QAAAA,KAAK,EAAE,CACL;AAAEC,UAAAA,QAAQ,EAAEtB,EAAE,CAACuB,GAAf;AAAoBC,UAAAA,QAAQ,EAAExB,EAAE,CAACwB;AAAjC,SADK,EAEL;AAAEF,UAAAA,QAAQ,EAAEvB,MAAM,CAACwB,GAAnB;AAAwBC,UAAAA,QAAQ,EAAEzB,MAAM,CAACyB;AAAzC,SAFK;AAFW,OAApB;AAQA,UAAIC,aAAa,GAAG,KAApB;;AACA,UAAIlB,SAAS,CAACmB,MAAV,KAAqB,CAAzB,EAA4B;AAC1BnB,QAAAA,SAAS,CAACoB,OAAV,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,cAAIC,GAAG,GAAG,CAAV;AACAF,UAAAA,CAAC,CAACP,KAAF,CAAQM,OAAR,CAAgB,CAACI,CAAD,EAAIC,CAAJ,KAAU;AACxB,gBACED,CAAC,CAACT,QAAF,KAAeH,WAAW,CAACE,KAAZ,CAAkB,CAAlB,EAAqBC,QAApC,IACAS,CAAC,CAACT,QAAF,KAAeH,WAAW,CAACE,KAAZ,CAAkB,CAAlB,EAAqBC,QAFtC,EAGE;AACAQ,cAAAA,GAAG;AACJ;AACF,WAPD;;AAQA,cAAIA,GAAG,KAAK,CAAZ,EAAe;AACbL,YAAAA,aAAa,GAAG,IAAhB;AACD;AACF,SAbD;AAcD;;AAED,UAAIA,aAAJ,EAAmB;AACjBhC,QAAAA,MAAM,CAACoB,IAAP,CAAa,SAAb;AACD,OAFD,MAEO;AACL,YAAI;AACF,gBAAMV,YAAY,CAAC8B,KAAb,CAAmBf,GAAnB,EAAwBgB,MAAxB,CAA+Bf,WAA/B,CAAN;AACAgB,UAAAA,KAAK,CAAC,UAAD,CAAL;AACA1C,UAAAA,MAAM,CAACoB,IAAP,CAAa,SAAb;AACD,SAJD,CAIE,OAAOuB,KAAP,EAAc;AACdD,UAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;AACF;;AACDV,MAAAA,aAAa,GAAG,KAAhB;AACD;AACF,GA3CmC,EA2CjC,CAACtB,YAAD,EAAeI,SAAf,CA3CiC,CAApC,CAvBmC,CAoEnC;;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,mBAAmB;AACnB,WAAO,MAAM;AACXN,MAAAA,YAAY,CAACkC,GAAb;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,QAAC,cAAD;AAAA,4BACE,QAAC,UAAD;AAAA,8BACE;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAMGtC,MAAM,CAACuC,SAAP,CAAiBC,GAAjB,CAAqB,CAACX,CAAD,EAAIC,CAAJ,KAAU;AAC9B,YAAIA,CAAC,GAAG,CAAR,EAAW;AACT,8BACE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAC,MAAX;AAAA,sBACGD;AADH,aAAuBA,CAAvB;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;AACF,OARA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,UAAD;AAAA,8BACE;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,kBAAQ,GAAE,IAAIY,IAAJ,CAASzC,MAAM,CAAC0C,SAAhB,EAA2BC,WAA3B,EAAyC,IACjD,IAAIF,IAAJ,CAASzC,MAAM,CAAC0C,SAAhB,EAA2BE,QAA3B,KAAwC,CACzC,IAAG,IAAIH,IAAJ,CAASzC,MAAM,CAAC0C,SAAhB,EAA2BG,OAA3B,EAAqC;AAFzC;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,eA2BE,QAAC,UAAD;AAAA,8BACE;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAMG5C,EAAE,IAAIA,EAAE,CAAC6C,YAAT,gBACC;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA,kBAAO/C,MAAM,CAACgD;AAAd;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF,eAwCE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAA,gBACG/C,EAAE,IAAIA,EAAE,CAACuB,GAAH,KAAWxB,MAAM,CAACwB,GAAxB,iBACC,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,SAAS,EAAC,UAFZ;AAGE,QAAA,OAAO,EAAER,gBAHX;AAIE,QAAA,KAAK,EAAE;AAAEiC,UAAAA,SAAS,EAAE;AAAb,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CApID;;AAsIA,eAAetD,UAAU,CAACI,YAAD,CAAzB","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Tag } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport firebase from \"../../firebase\";\nimport Router, { withRouter } from \"next/router\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 프로필 모달 창 컴포넌트, 메시지보내기 버튼 클릭 시 파이어베이스 채팅방 생성\n */\n\n// style\n\nconst ProfileWrapper = styled.div`\n  margin: 0;\n  border: 1px solid #ddd;\n  padding: 5px;\n  .btn-wrapper {\n    padding: 5px;\n    text-align: center;\n  }\n`;\n\nconst RowWrapper = styled.div`\n  padding: 5px;\n  .tag-partial {\n    width: 55px;\n    text-align: center;\n  }\n`;\n\nconst ProfileModal = ({ writer }) => {\n  // redux\n\n  const { me } = useSelector((state) => state.user);\n\n  // local state\n\n  const [chatRoomsRef, setChatRoomsRef] = useState(\n    firebase.database().ref(\"chatRooms\"),\n  );\n  const [chatRooms, setChatRooms] = useState([]);\n\n  // event listener\n\n  const addChatRoomListener = () => {\n    let chatRoomsArray = [];\n\n    chatRoomsRef.on(\"child_added\", (DataSnapShot) => {\n      chatRoomsArray.push(DataSnapShot.val());\n      setChatRooms(chatRoomsArray);\n    });\n  };\n\n  const onCreateChatRoom = useCallback(async () => {\n    let user = firebase.auth().currentUser;\n    if (user) {\n      const key = chatRoomsRef.push().key;\n      const newChatRoom = {\n        id: key,\n        users: [\n          { clientId: me._id, nickname: me.nickname },\n          { clientId: writer._id, nickname: writer.nickname },\n        ],\n      };\n\n      let chatRoomExist = false;\n      if (chatRooms.length !== 0) {\n        chatRooms.forEach((v, i) => {\n          let cnt = 0;\n          v.users.forEach((s, j) => {\n            if (\n              s.clientId === newChatRoom.users[0].clientId ||\n              s.clientId === newChatRoom.users[1].clientId\n            ) {\n              cnt++;\n            }\n          });\n          if (cnt === 2) {\n            chatRoomExist = true;\n          }\n        });\n      }\n\n      if (chatRoomExist) {\n        Router.push(`/mypage`);\n      } else {\n        try {\n          await chatRoomsRef.child(key).update(newChatRoom);\n          alert(\"채팅방 생성완료\");\n          Router.push(`/mypage`);\n        } catch (error) {\n          alert(\"오류발생! 다시 시도해주세요.\");\n        }\n      }\n      chatRoomExist = false;\n    }\n  }, [chatRoomsRef, chatRooms]);\n\n  // hooks\n\n  useEffect(() => {\n    addChatRoomListener();\n    return () => {\n      chatRoomsRef.off();\n    };\n  }, []);\n\n  return (\n    <ProfileWrapper>\n      <RowWrapper>\n        <span>\n          <Tag className=\"tag-partial\" color=\"#ccc\">\n            관심기술\n          </Tag>\n        </span>\n        {writer.techStack.map((v, i) => {\n          if (i < 3) {\n            return (\n              <Tag color=\"blue\" key={v}>\n                {v}\n              </Tag>\n            );\n          }\n        })}\n      </RowWrapper>\n      <RowWrapper>\n        <span>\n          <Tag className=\"tag-partial\" color=\"#ccc\">\n            가입일\n          </Tag>\n        </span>\n        <span>{`${new Date(writer.createdAt).getFullYear()}.${\n          new Date(writer.createdAt).getMonth() + 1\n        }.${new Date(writer.createdAt).getDate()}`}</span>\n      </RowWrapper>\n      <RowWrapper>\n        <span>\n          <Tag className=\"tag-partial\" color=\"#ccc\">\n            Github\n          </Tag>\n        </span>\n        {me && me.secretGithub ? (\n          <span style={{ color: \"#999\" }}>비공개</span>\n        ) : (\n          <span>{writer.githubUrl}</span>\n        )}\n      </RowWrapper>\n\n      <RowWrapper className=\"btn-wrapper\">\n        {me && me._id !== writer._id && (\n          <Button\n            type=\"primary\"\n            className=\"note-btn\"\n            onClick={onCreateChatRoom}\n            style={{ marginTop: \"20px\" }}\n          >\n            메시지 보내기\n          </Button>\n        )}\n      </RowWrapper>\n    </ProfileWrapper>\n  );\n};\n\nexport default withRouter(ProfileModal);\n"]},"metadata":{},"sourceType":"module"}