{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Avatar, Popover, Comment, Input, Image, Checkbox } from \"antd\";\nimport ProfileModal from \"../../modal/ProfileModal\";\nimport { UserOutlined, LockOutlined, LikeOutlined, LikeFilled } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useToggle from \"../../../hooks/useToggle\";\nimport { SERVER_URL } from \"../../../lib/constant/constant\";\nimport { addCommentRequestAction, deleteCommentRequestAction, likeCommentRequestAction, unLikeCommentRequestAction } from \"../../../reducers/post\";\nimport useInput from \"../../../hooks/useInput\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport ReCommentListItem from \"./ReCommentListItem\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 댓글 리스트 아이템 컴포넌트\n */\n// style\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ReApplyFormWrapper = styled.div.withConfig({\n  displayName: \"CommentListItem__ReApplyFormWrapper\",\n  componentId: \"ugl3jc-0\"\n})([\"width:800px;display:flex;@media (max-width:768px){width:200px;display:block;}\"]);\nvar ReApplyInput = styled(Input.TextArea).withConfig({\n  displayName: \"CommentListItem__ReApplyInput\",\n  componentId: \"ugl3jc-1\"\n})([\"flex:7;\"]);\nvar ButtonWrapper = styled.div.withConfig({\n  displayName: \"CommentListItem__ButtonWrapper\",\n  componentId: \"ugl3jc-2\"\n})([\"line-height:30px;flex:1;.cancel-btn{cursor:pointer;margin-left:5px;}.submit-btn{cursor:pointer;color:#208fff;margin-left:10px;}.secret-btn{margin-left:10px;}\"]);\nvar CommentActivityWrapper = styled.div.withConfig({\n  displayName: \"CommentListItem__CommentActivityWrapper\",\n  componentId: \"ugl3jc-3\"\n})([\"font-size:11px;padding:0 3px;cursor:pointer;\"]);\n\nvar CommentListItem = function CommentListItem(_ref) {\n  var item = _ref.item,\n      post = _ref.post;\n\n  // redux\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var dispatch = useDispatch(); // local state\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      reComment = _useInput2[0],\n      onChangeReComment = _useInput2[1];\n\n  var _useState = useState(\"\"),\n      editCommentText = _useState[0],\n      setEditCommentText = _useState[1];\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      isSecret = _useToggle2[0],\n      onToggleIsSecret = _useToggle2[1];\n\n  var _useToggle3 = useToggle(false),\n      _useToggle4 = _slicedToArray(_useToggle3, 2),\n      isEdit = _useToggle4[0],\n      onToggleIsEdit = _useToggle4[1];\n\n  var _useState2 = useState(false),\n      isEditSecret = _useState2[0],\n      setIsEditSecret = _useState2[1];\n\n  var _useToggle5 = useToggle(false),\n      _useToggle6 = _slicedToArray(_useToggle5, 2),\n      applyToggle = _useToggle6[0],\n      onChangeApplyToggle = _useToggle6[1];\n\n  var _useState3 = useState(item.likes.some(function (v, i) {\n    if (me && v.userId === me._id) {\n      return true;\n    }\n  }) ? true : false),\n      like = _useState3[0],\n      setLike = _useState3[1]; // event listener\n\n\n  var onChangeEditCommentText = useCallback(function (e) {\n    setEditCommentText(e.target.value);\n  }, []);\n  var onToggleIsEditSecret = useCallback(function () {\n    setIsEditSecret(!isEditSecret);\n  }, [isEditSecret]);\n  var onToggleLike = useCallback(function () {\n    setLike(!like);\n\n    if (like) {\n      dispatch(unLikeCommentRequestAction({\n        user: me,\n        id: item.likes.find(function (v, i) {\n          if (v.userId === me._id) {\n            return true;\n          }\n        })._id,\n        type: \"comment\",\n        commentId: item._id\n      }));\n    } else {\n      dispatch(likeCommentRequestAction({\n        user: me,\n        id: item._id,\n        type: \"comment\"\n      }));\n    }\n  }, [like, me, item]);\n  var onCancelEdit = useCallback(function () {\n    setEditCommentText(item.content);\n    setIsEditSecret(item.secretComment);\n    onToggleIsEdit();\n  }, [item, isEdit]);\n  var onReCommentSubmit = useCallback(function () {\n    if (reComment === \"\") {\n      alert(\"내용을 입력해주세요.\");\n      return;\n    }\n\n    var submitConfirm = confirm(\"댓글을 등록하시겠습니까?\");\n\n    if (submitConfirm) {\n      dispatch(addCommentRequestAction({\n        postId: post._id,\n        type: post.type,\n        content: reComment,\n        commentTo: item._id,\n        secretComment: isSecret\n      }));\n      Router.push(\"/articles/\".concat(post.type, \"/\").concat(post._id));\n    } else {\n      return;\n    }\n  }, [post, item, reComment, isSecret]);\n  var onUpdateComment = useCallback(function (comment) {\n    if (editCommentText === \"\") {\n      alert(\"내용을 입력해주세요.\");\n      return;\n    }\n\n    var updateConfirm = confirm(\"수정하시겠습니까?\");\n\n    if (updateConfirm) {\n      axios.patch(\"/api/comments\", {\n        commentId: comment._id,\n        content: editCommentText,\n        secretComment: isEditSecret\n      }).then(function (res) {\n        onToggleIsEdit();\n        Router.push(\"/articles/\".concat(post.type, \"/\").concat(post._id));\n      })[\"catch\"](function (error) {\n        alert(\"댓글수정 실패\");\n      });\n    } else {\n      return;\n    }\n  }, [isEditSecret, editCommentText]);\n  var onDeleteComment = useCallback(function (id) {\n    var confirmDelete = confirm(\"정말로 삭제하시겠습니까?\");\n\n    if (confirmDelete) {\n      var flag = false;\n      var parentId = null;\n      post.comments.forEach(function (v, i) {\n        if (id === v.commentTo) {\n          flag = true;\n        }\n      });\n\n      if (flag) {\n        dispatch(deleteCommentRequestAction({\n          type: \"children\",\n          id: id\n        }));\n      } else {\n        var child;\n        var parent;\n        var childInParentLength = 0;\n        post.comments.forEach(function (v, i) {\n          if (id === v._id) {\n            child = v;\n          }\n        });\n        post.comments.forEach(function (v, i) {\n          if (child.commentTo === v._id) {\n            parent = v;\n          }\n        });\n        post.comments.forEach(function (v, i) {\n          if (parent && parent._id === v.commentTo) {\n            childInParentLength++;\n          }\n        });\n\n        if (parent && parent.isDelete && childInParentLength === 1) {\n          parentId = parent._id;\n          axios[\"delete\"](\"/api/comments/\".concat(parentId)).then(function () {\n            axios[\"delete\"](\"/api/comments/\".concat(id)).then(function () {\n              Router.push(\"/articles/\".concat(post.type, \"/\").concat(post._id));\n              return;\n            });\n          });\n        } else {\n          dispatch(deleteCommentRequestAction({\n            type: \"none\",\n            id: id\n          }));\n        }\n      }\n\n      Router.push(\"/articles/\".concat(post.type, \"/\").concat(post._id));\n    } else {\n      return;\n    }\n  }, [item, post]); // hooks\n\n  useEffect(function () {\n    setEditCommentText(item.content);\n    setIsEditSecret(item.secretComment);\n  }, [item]);\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(Comment, {\n      actions: me && !item.isDelete && (!applyToggle ? isEdit ? [/*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsxs(ReApplyFormWrapper, {\n          children: [/*#__PURE__*/_jsx(ReApplyInput, {\n            rows: 1,\n            onChange: onChangeEditCommentText,\n            defaultValue: item.content\n          }), /*#__PURE__*/_jsxs(ButtonWrapper, {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              className: \"submit-btn\",\n              onClick: function onClick() {\n                onUpdateComment(item);\n              },\n              children: \"\\uC218\\uC815\"\n            }, \"comment-list-reply-to-0\"), /*#__PURE__*/_jsx(\"span\", {\n              className: \"cancel-btn\",\n              onClick: onCancelEdit,\n              children: \"\\uCDE8\\uC18C\"\n            }, \"comment-list-reply-to-1\"), /*#__PURE__*/_jsx(\"span\", {\n              className: \"secret-btn\",\n              children: /*#__PURE__*/_jsx(Checkbox, {\n                onChange: onToggleIsEditSecret,\n                style: {\n                  color: \"#999\"\n                },\n                defaultChecked: item.secretComment,\n                children: \"\\uBE44\\uBC00 \\uB313\\uAE00\"\n              })\n            }, \"comment-list-reply-to-2\")]\n          })]\n        })\n      })] : [/*#__PURE__*/_jsx(CommentActivityWrapper, {\n        children: me && /*#__PURE__*/_jsxs(\"span\", {\n          style: {\n            marginRight: \"10px\"\n          },\n          onClick: onToggleLike,\n          children: [like ? /*#__PURE__*/_jsx(LikeFilled, {\n            style: {\n              marginRight: \"3px\",\n              color: \"#1a91fe\"\n            }\n          }) : /*#__PURE__*/_jsx(LikeOutlined, {\n            style: {\n              marginRight: \"3px\"\n            }\n          }), item.likes.length]\n        })\n      }), /*#__PURE__*/_jsx(CommentActivityWrapper, {\n        onClick: onChangeApplyToggle,\n        children: \"\\uB300\\uB313\\uAE00 \\uC4F0\\uAE30\"\n      }, \"comment-list-reply-to-0\"), /*#__PURE__*/_jsx(CommentActivityWrapper, {\n        children: item.writer && me._id === item.writer._id && /*#__PURE__*/_jsx(\"span\", {\n          children: \"|\"\n        })\n      }), /*#__PURE__*/_jsx(CommentActivityWrapper, {\n        children: item.writer && me._id === item.writer._id && /*#__PURE__*/_jsx(\"span\", {\n          onClick: function onClick() {\n            onDeleteComment(item._id);\n          },\n          children: \"\\uC0AD\\uC81C\"\n        }, \"comment-list-reply-to-0\")\n      }), /*#__PURE__*/_jsx(CommentActivityWrapper, {\n        children: item.writer && me._id === item.writer._id && /*#__PURE__*/_jsx(\"span\", {\n          children: \"|\"\n        })\n      }), /*#__PURE__*/_jsx(CommentActivityWrapper, {\n        children: item.writer && me._id === item.writer._id && /*#__PURE__*/_jsx(\"span\", {\n          onClick: onToggleIsEdit,\n          children: \"\\uC218\\uC815\"\n        }, \"comment-list-reply-to-0\")\n      }),,] : [/*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsxs(ReApplyFormWrapper, {\n          children: [/*#__PURE__*/_jsx(ReApplyInput, {\n            rows: 1,\n            onChange: onChangeReComment\n          }), /*#__PURE__*/_jsxs(ButtonWrapper, {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              className: \"submit-btn\",\n              onClick: onReCommentSubmit,\n              children: \"\\uB4F1\\uB85D\"\n            }, \"comment-list-reply-to-0\"), /*#__PURE__*/_jsx(\"span\", {\n              className: \"cancel-btn\",\n              onClick: onChangeApplyToggle,\n              children: \"\\uCDE8\\uC18C\"\n            }, \"comment-list-reply-to-1\"), /*#__PURE__*/_jsx(\"span\", {\n              className: \"secret-btn\",\n              children: /*#__PURE__*/_jsx(Checkbox, {\n                onChange: onToggleIsSecret,\n                style: {\n                  color: \"#999\"\n                },\n                children: \"\\uBE44\\uBC00 \\uB313\\uAE00\"\n              })\n            }, \"comment-list-reply-to-2\")]\n          })]\n        })\n      })]),\n      author: !item.isDelete && item.writer && post.writer && (item.writer._id === post.writer._id ? /*#__PURE__*/_jsx(\"span\", {\n        style: {\n          color: \"#1a91fe\"\n        },\n        children: \"\\uAE00\\uC4F4\\uC774\"\n      }) : item.writer.nickname),\n      avatar: /*#__PURE__*/_jsxs(Popover, {\n        content: /*#__PURE__*/_jsx(\"div\", {\n          onClick: function onClick(e) {\n            e.stopPropagation();\n          },\n          children: item.writer && !item.isDelete && item.writer.constructor == Object && /*#__PURE__*/_jsx(ProfileModal, {\n            writer: item.writer\n          })\n        }),\n        children: [/*#__PURE__*/_jsx(Avatar, {\n          onClick: function onClick(e) {\n            e.stopPropagation();\n          },\n          style: {\n            cursor: \"pointer\"\n          },\n          size: 28,\n          icon: /*#__PURE__*/_jsx(UserOutlined, {}),\n          src: !item.isDelete && item.writer && item.writer.avatarUrl && /*#__PURE__*/_jsx(Image, {\n            src: \"\".concat(SERVER_URL, \"/\").concat(item.writer.avatarUrl),\n            width: 28,\n            height: 28\n          })\n        }), \" \"]\n      }),\n      content: item.writer && item.writer.constructor == Object ? item.secretComment ? me && (post.writer && me._id === post.writer._id || item.writer._id === me._id) ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: item.content\n        }), /*#__PURE__*/_jsxs(\"span\", {\n          style: {\n            color: \"#999\",\n            fontSize: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsx(LockOutlined, {\n            style: {\n              margin: \"0 5px\",\n              color: \"#999\"\n            }\n          }), \"\\uBE44\\uBC00 \\uB313\\uAE00\"]\n        })]\n      }) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(LockOutlined, {\n          style: {\n            margin: \"0 5px\",\n            color: \"#999\"\n          }\n        }), /*#__PURE__*/_jsx(\"span\", {\n          style: {\n            color: \"#999\"\n          },\n          children: \"\\uBE44\\uBC00 \\uB313\\uAE00\\uC785\\uB2C8\\uB2E4.\"\n        })]\n      }) : item.content : \"탈퇴한 회원입니다.\",\n      datetime: \"\".concat(new Date(item.createdAt).getMonth() + 1, \"/\").concat(new Date(item.createdAt).getDate(), \"  \").concat(new Date(item.createdAt).getHours(), \":\").concat(new Date(item.createdAt).getMinutes() < 10 ? \"0\" + new Date(item.createdAt).getMinutes() : new Date(item.createdAt).getMinutes(), \":\").concat(new Date(item.createdAt).getSeconds() < 10 ? \"0\" + new Date(item.createdAt).getSeconds() : new Date(item.createdAt).getSeconds()),\n      children: post.comments.map(function (reComment, i) {\n        if (reComment.commentTo === item._id) {\n          return /*#__PURE__*/_jsx(ReCommentListItem, {\n            reComment: reComment,\n            post: post,\n            me: me,\n            onDeleteComment: onDeleteComment\n          }, reComment._id);\n        }\n      })\n    })\n  });\n};\n\nexport default CommentListItem;","map":null,"metadata":{},"sourceType":"module"}