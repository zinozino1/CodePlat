{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport SkillFilterForm from \"./SkillFilterForm\";\nimport { Select, Upload, Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Locations, SERVER_URL, CLIENT_URL } from \"../../../lib/constant/constant\";\nimport TagBox from \"./TagBox\";\nimport { writePostRequestAction } from \"../../../reducers/post\";\nimport Router, { withRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Editor from \"./Editor\";\nimport FormData from \"form-data\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 글작성 컴포넌트\n */\n// style\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar WriteFormWrapper = styled.div.withConfig({\n  displayName: \"WriteForm__WriteFormWrapper\",\n  componentId: \"nyap5p-0\"\n})([\"margin:40px 0;background:#fff;padding:40px;.file-btn{&:hover{color:#111;border:1px solid #313355;}}\"]);\nvar TitleWrapper = styled.h3.withConfig({\n  displayName: \"WriteForm__TitleWrapper\",\n  componentId: \"nyap5p-1\"\n})([\"margin-bottom:30px;\"]);\nvar FormItemWrapper = styled.div.withConfig({\n  displayName: \"WriteForm__FormItemWrapper\",\n  componentId: \"nyap5p-2\"\n})([\"margin-bottom:30px;\"]);\nvar Label = styled.span.withConfig({\n  displayName: \"WriteForm__Label\",\n  componentId: \"nyap5p-3\"\n})([\"font-weight:500;\"]);\nvar EditFileList = styled.div.withConfig({\n  displayName: \"WriteForm__EditFileList\",\n  componentId: \"nyap5p-4\"\n})([\"margin:8px 0;border:1px solid #ccc;padding:8px;\"]); // helper variables\n\nvar LocationSelectChildren = [];\nvar PeopleSelectChildren = [];\nvar ForumSelectChildren = [/*#__PURE__*/_jsx(Select.Option, {\n  children: \"\\uC790\\uC720\"\n}, \"자유\"), /*#__PURE__*/_jsx(Select.Option, {\n  children: \"QnA\"\n}, \"QnA\")];\nLocations.forEach(function (v, i) {\n  LocationSelectChildren.push( /*#__PURE__*/_jsx(Select.Option, {\n    children: v.value\n  }, v.key));\n});\n\nfor (var i = 0; i < 10; i++) {\n  PeopleSelectChildren.push( /*#__PURE__*/_jsx(Select.Option, {\n    children: i + 1\n  }, i + 1));\n}\n\nvar WriteForm = function WriteForm(_ref) {\n  var contentType = _ref.contentType,\n      router = _ref.router,\n      isEdit = _ref.isEdit;\n  // redux\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      post = _useSelector.post;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.skill;\n  }),\n      skill = _useSelector2.skill;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector3.me; // helper method\n\n\n  var mergeFiles = function mergeFiles() {\n    var mergedFiles = [];\n\n    for (var _i = 0; _i < fileList.length; _i++) {\n      var newFile = {};\n      newFile.url = \"\".concat(SERVER_URL, \"/\").concat(fileList[_i]);\n      newFile.thumbUrl = \"\".concat(SERVER_URL, \"/\").concat(fileList[_i]);\n      newFile.name = fileNames[_i];\n      newFile.uid = _i;\n      newFile.status = \"done\";\n      mergedFiles.push(newFile);\n    }\n\n    return mergedFiles;\n  }; // local state\n\n\n  var _ref2 = isEdit ? useState(post.title) : useState(\"\"),\n      _ref3 = _slicedToArray(_ref2, 2),\n      title = _ref3[0],\n      setTitle = _ref3[1];\n\n  var _ref4 = isEdit ? useState(post.content) : useState(\"\"),\n      _ref5 = _slicedToArray(_ref4, 2),\n      description = _ref5[0],\n      setDescription = _ref5[1];\n\n  var _ref6 = isEdit ? useState(post.fileUrl) : useState([]),\n      _ref7 = _slicedToArray(_ref6, 2),\n      fileList = _ref7[0],\n      setFileList = _ref7[1];\n\n  var _ref8 = isEdit ? useState(post.fileName) : useState([]),\n      _ref9 = _slicedToArray(_ref8, 2),\n      fileNames = _ref9[0],\n      setFileNames = _ref9[1];\n\n  var _useState = useState(mergeFiles()),\n      mergedFiles = _useState[0],\n      setMergedFiles = _useState[1];\n\n  var _ref10 = isEdit ? useState(post.recruitment) : useState(1),\n      _ref11 = _slicedToArray(_ref10, 2),\n      peopleNumber = _ref11[0],\n      setPeopleNumber = _ref11[1];\n\n  var _ref12 = isEdit ? useState(post.location) : useState(\"전체\"),\n      _ref13 = _slicedToArray(_ref12, 2),\n      location = _ref13[0],\n      setLocation = _ref13[1];\n\n  var _ref14 = isEdit ? useState(post.field) : useState(\"자유\"),\n      _ref15 = _slicedToArray(_ref14, 2),\n      filter = _ref15[0],\n      setFilter = _ref15[1];\n\n  var _ref16 = isEdit ? useState(post.tag) : useState([]),\n      _ref17 = _slicedToArray(_ref16, 2),\n      tags = _ref17[0],\n      setTags = _ref17[1];\n\n  var _useState2 = useState(false),\n      inputVisible = _useState2[0],\n      setInputVisible = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      inputValue = _useState3[0],\n      setInputValue = _useState3[1];\n\n  var _useState4 = useState(-1),\n      editInputIndex = _useState4[0],\n      setEditInputIndex = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      editInputValue = _useState5[0],\n      setEditInputValue = _useState5[1]; // event listener\n\n\n  var onChangeTitle = useCallback(function (e) {\n    setTitle(e.target.value);\n  }, []);\n  var onChangeDescription = useCallback(function (e) {\n    setDescription(e);\n  }, []);\n  var onChangeFileList = useCallback(function (e) {\n    setMergedFiles(mergedFiles.concat(e));\n  }, [mergedFiles]);\n  var onRemoveFile = useCallback(function (e) {\n    setMergedFiles(mergedFiles.filter(function (v, i) {\n      if (v.uid !== e.uid) {\n        return _objectSpread({}, v);\n      }\n    }));\n  }, [mergedFiles]);\n  var onChangePeopleNumber = useCallback(function (value) {\n    setPeopleNumber(value);\n  }, []);\n  var onChangeLocation = useCallback(function (value) {\n    setLocation(value);\n  }, []);\n  var onStudyAndProjectSubmit = useCallback(function () {\n    if (!me) {\n      alert(\"로그인이 필요한 서비스입니다.\");\n      return;\n    }\n\n    if (skill.length === 0) {\n      alert(\"활용기술을 하나 이상 선택해주세요.\");\n      return;\n    }\n\n    if (title === \"\") {\n      alert(\"제목을 채워주세요.\");\n      return;\n    }\n\n    if (description === \"\") {\n      alert(\"내용을 채워주세요.\");\n      return;\n    }\n\n    if (description.length < 5) {\n      alert(\"내용을 5글자 이상 써주세요.\");\n      return;\n    }\n\n    var submitConfirm = confirm(\"게시물을 등록하시겠습니까?\");\n\n    if (submitConfirm) {\n      var formData = new FormData();\n      mergedFiles.forEach(function (file) {\n        return formData.append(\"files\", file);\n      });\n      formData.append(\"type\", contentType);\n      formData.append(\"writer\", me._id);\n      formData.append(\"title\", title);\n      formData.append(\"content\", description);\n      formData.append(\"techStack\", JSON.stringify(skill));\n      formData.append(\"recruitment\", peopleNumber);\n      formData.append(\"location\", location);\n      dispatch(writePostRequestAction(formData));\n    } else {\n      return;\n    }\n  }, [skill, title, description, peopleNumber, location, me, router, mergedFiles]);\n  var onStudyAndProjectEdit = useCallback(function () {\n    if (!me) {\n      alert(\"로그인이 필요한 서비스입니다.\");\n      return;\n    }\n\n    if (skill.length === 0) {\n      alert(\"활용기술을 하나 이상 선택해주세요.\");\n      return;\n    }\n\n    if (title === \"\") {\n      alert(\"제목을 채워주세요.\");\n      return;\n    }\n\n    if (description === \"\") {\n      alert(\"내용을 채워주세요.\");\n      return;\n    }\n\n    if (description.length < 5) {\n      alert(\"내용을 5글자 이상 써주세요.\");\n      return;\n    }\n\n    var editConfirm = confirm(\"수정하시겠습니까?\");\n\n    if (editConfirm) {\n      var formData = new FormData();\n      var existFilePaths = [];\n      var existFileNames = [];\n      mergedFiles.forEach(function (file) {\n        if (file.size) {\n          formData.append(\"files\", file);\n        } else {\n          existFilePaths.push(file.url.replace(\"\".concat(SERVER_URL, \"/\"), \"\"));\n          existFileNames.push(file.name);\n        }\n      });\n      formData.append(\"type\", contentType);\n      formData.append(\"id\", post._id);\n      formData.append(\"title\", title);\n      formData.append(\"content\", description);\n      formData.append(\"recruitment\", peopleNumber);\n      formData.append(\"location\", location);\n      formData.append(\"techStack\", JSON.stringify(skill));\n      formData.append(\"filePath\", JSON.stringify(existFilePaths));\n      formData.append(\"fileName\", JSON.stringify(existFileNames));\n      axios.patch(\"api/posts\", formData).then(function () {\n        Router.push(\"/articles/\".concat(post.type, \"/\").concat(post._id));\n      })[\"catch\"](function (error) {\n        alert(\"수정실패\");\n      });\n    } else {\n      return;\n    }\n  }, [skill, title, description, peopleNumber, location, post, mergedFiles]);\n  var onChangeFilter = useCallback(function (value) {\n    setFilter(value);\n  }, []);\n  var onForumSubmit = useCallback(function () {\n    if (!me) {\n      alert(\"로그인이 필요한 서비스입니다.\");\n      return;\n    }\n\n    if (title === \"\") {\n      alert(\"제목을 채워주세요.\");\n      return;\n    }\n\n    if (description === \"\") {\n      alert(\"내용을 채워주세요.\");\n      return;\n    }\n\n    if (description.length < 5) {\n      alert(\"내용을 5글자 이상 써주세요.\");\n      return;\n    }\n\n    var submitConfirm = confirm(\"게시물을 등록하시겠습니까?\");\n\n    if (submitConfirm) {\n      var formData = new FormData();\n      mergedFiles.forEach(function (file) {\n        return formData.append(\"files\", file);\n      });\n      formData.append(\"type\", \"forum\");\n      formData.append(\"writer\", me._id);\n      formData.append(\"title\", title);\n      formData.append(\"content\", description);\n      formData.append(\"tag\", JSON.stringify(tags));\n      formData.append(\"field\", filter);\n      dispatch(writePostRequestAction(formData));\n    } else {\n      return;\n    }\n  }, [title, description, tags, router, me, filter, mergedFiles]);\n  var onForumEdit = useCallback(function () {\n    if (!me) {\n      alert(\"로그인이 필요한 서비스입니다.\");\n      return;\n    }\n\n    if (title === \"\") {\n      alert(\"제목을 채워주세요.\");\n      return;\n    }\n\n    if (description === \"\") {\n      alert(\"내용을 채워주세요.\");\n      return;\n    }\n\n    if (description.length < 5) {\n      alert(\"내용을 5글자 이상 써주세요.\");\n      return;\n    }\n\n    var editConfirm = confirm(\"수정하시겠습니까?\");\n\n    if (editConfirm) {\n      var formData = new FormData();\n      var existFilePaths = [];\n      var existFileNames = [];\n      mergedFiles.forEach(function (file) {\n        if (file.size) {\n          formData.append(\"files\", file);\n        } else {\n          existFilePaths.push(file.url.replace(\"\".concat(SERVER_URL, \"/\"), \"\"));\n          existFileNames.push(file.name);\n        }\n      });\n      formData.append(\"type\", \"forum\");\n      formData.append(\"id\", post._id);\n      formData.append(\"title\", title);\n      formData.append(\"content\", description);\n      formData.append(\"tag\", JSON.stringify(tags));\n      formData.append(\"field\", filter);\n      formData.append(\"filePath\", JSON.stringify(existFilePaths));\n      formData.append(\"fileName\", JSON.stringify(existFileNames));\n      axios.patch(\"api/posts\", formData).then(function () {\n        Router.push(\"/\".concat(post.type, \"/\").concat(post._id));\n      })[\"catch\"](function (error) {\n        alert(\"수정실패\");\n      });\n    } else {\n      return;\n    }\n  }, [title, description, tags, post, filter, mergedFiles]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: contentType == \"study\" || contentType == \"project\" ? /*#__PURE__*/_jsxs(WriteFormWrapper, {\n      children: [contentType === \"study\" ? /*#__PURE__*/_jsx(TitleWrapper, {\n        children: \"\\uC2A4\\uD130\\uB514 \\uBAA8\\uC9D1\"\n      }) : /*#__PURE__*/_jsx(TitleWrapper, {\n        children: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uBAA8\\uC9D1\"\n      }), /*#__PURE__*/_jsxs(FormItemWrapper, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          style: {\n            marginBottom: \"7px\"\n          },\n          children: /*#__PURE__*/_jsx(Label, {\n            children: \"\\uD65C\\uC6A9\\uAE30\\uC220\"\n          })\n        }), /*#__PURE__*/_jsx(SkillFilterForm, {\n          type: \"write\",\n          isEdit: isEdit,\n          values: isEdit && post.techStack\n        })]\n      }), /*#__PURE__*/_jsxs(FormItemWrapper, {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsx(Label, {\n          style: {\n            lineHeight: \"32px\"\n          },\n          children: \"\\uBAA8\\uC9D1\\uC778\\uC6D0\"\n        }), /*#__PURE__*/_jsx(Select, {\n          defaultValue: isEdit ? post.recruitment : \"1\",\n          bordered: false,\n          style: {\n            color: \"#999\"\n          },\n          onChange: onChangePeopleNumber,\n          children: PeopleSelectChildren\n        }), /*#__PURE__*/_jsx(Label, {\n          style: {\n            lineHeight: \"32px\"\n          },\n          children: \"\\uC9C0\\uC5ED\"\n        }), /*#__PURE__*/_jsx(Select, {\n          defaultValue: isEdit ? post.location : \"전체\",\n          bordered: false,\n          style: {\n            color: \"#999\"\n          },\n          onChange: onChangeLocation,\n          children: LocationSelectChildren\n        })]\n      }), /*#__PURE__*/_jsx(Editor, {\n        onChangeDescription: onChangeDescription,\n        onChangeTitle: onChangeTitle,\n        description: description,\n        title: title\n      }), /*#__PURE__*/_jsx(Upload, {\n        name: \"logo\",\n        beforeUpload: onChangeFileList,\n        defaultFileList: mergeFiles(),\n        onRemove: onRemoveFile,\n        children: /*#__PURE__*/_jsx(Button, {\n          className: \"file-btn\",\n          icon: /*#__PURE__*/_jsx(UploadOutlined, {}),\n          children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          textAlign: \"center\",\n          margin: \"50px 0\"\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          type: \"primary\",\n          style: {\n            width: \"100px\",\n            background: \"#313355\",\n            color: \"#fff\",\n            border: \"1px solid #313355\"\n          },\n          onClick: isEdit ? onStudyAndProjectEdit : onStudyAndProjectSubmit,\n          children: isEdit ? \"수정\" : \"등록\"\n        })\n      })]\n    }) : /*#__PURE__*/_jsxs(WriteFormWrapper, {\n      children: [/*#__PURE__*/_jsx(TitleWrapper, {\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }), /*#__PURE__*/_jsxs(FormItemWrapper, {\n        children: [/*#__PURE__*/_jsx(Label, {\n          style: {\n            lineHeight: \"32px\"\n          },\n          children: \"\\uBD84\\uB958\"\n        }), /*#__PURE__*/_jsx(Select, {\n          defaultValue: isEdit ? post.field : filter,\n          bordered: false,\n          style: {\n            color: \"#999\"\n          },\n          onChange: onChangeFilter,\n          children: ForumSelectChildren\n        })]\n      }), /*#__PURE__*/_jsxs(FormItemWrapper, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          style: {\n            marginBottom: \"7px\"\n          },\n          children: /*#__PURE__*/_jsx(Label, {\n            children: \"\\uD0DC\\uADF8\"\n          })\n        }), /*#__PURE__*/_jsx(TagBox, {\n          tags: tags,\n          setTags: setTags,\n          inputVisible: inputVisible,\n          setInputVisible: setInputVisible,\n          inputValue: inputValue,\n          setInputValue: setInputValue,\n          editInputIndex: editInputIndex,\n          setEditInputIndex: setEditInputIndex,\n          editInputValue: editInputValue,\n          setEditInputValue: setEditInputValue\n        })]\n      }), /*#__PURE__*/_jsx(Editor, {\n        onChangeDescription: onChangeDescription,\n        onChangeTitle: onChangeTitle,\n        description: description,\n        title: title\n      }), /*#__PURE__*/_jsx(Upload, {\n        name: \"logo\",\n        beforeUpload: onChangeFileList,\n        defaultFileList: mergeFiles(),\n        onRemove: onRemoveFile,\n        children: /*#__PURE__*/_jsx(Button, {\n          className: \"file-btn\",\n          icon: /*#__PURE__*/_jsx(UploadOutlined, {}),\n          children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          textAlign: \"center\",\n          margin: \"50px 0\"\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          type: \"primary\",\n          style: {\n            width: \"100px\",\n            background: \"#313355\",\n            color: \"#fff\",\n            border: \"1px solid #313355\"\n          },\n          onClick: isEdit ? onForumEdit : onForumSubmit,\n          children: isEdit ? \"수정\" : \"등록\"\n        })\n      })]\n    })\n  });\n};\n\nexport default withRouter(WriteForm);","map":null,"metadata":{},"sourceType":"module"}