{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/jinho/Project/ProjectFrontend/components/chat/ChatForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Input, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport firebase from \"../../firebase\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 마이페이지 채팅 폼 컴포넌트\n */\n// style\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ChatFormWrapper = styled.div.withConfig({\n  displayName: \"ChatForm__ChatFormWrapper\",\n  componentId: \"cirlrr-0\"\n})([\"margin:30px;display:flex;\"]);\n_c = ChatFormWrapper;\nvar InputWrapper = styled.div.withConfig({\n  displayName: \"ChatForm__InputWrapper\",\n  componentId: \"cirlrr-1\"\n})([\"flex:7;.chat-input{}\"]);\n_c2 = InputWrapper;\nvar ButtonWrapper = styled.div.withConfig({\n  displayName: \"ChatForm__ButtonWrapper\",\n  componentId: \"cirlrr-2\"\n})([\"flex:1;.submit-btn{&:hover{color:#111;border:1px solid #313355;}}\"]);\n_c3 = ButtonWrapper;\n\nvar ChatForm = function ChatForm(_ref) {\n  _s();\n\n  var chatRoomKey = _ref.chatRoomKey;\n\n  // redux\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.chat;\n  }),\n      currentChatRoom = _useSelector2.currentChatRoom; // local state\n\n\n  var _useState = useState(\"\"),\n      content = _useState[0],\n      setContent = _useState[1];\n\n  var _useState2 = useState(firebase.database().ref(\"messages\")),\n      messagesRef = _useState2[0],\n      setMessagesRef = _useState2[1]; // helper method\n\n\n  var createMessage = function createMessage() {\n    var message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        clientId: currentChatRoom.users.filter(function (v, i) {\n          if (v.clientId === me._id) {\n            return v;\n          }\n        })[0].clientId,\n        name: me.nickname\n      },\n      content: content\n    };\n    return message;\n  };\n\n  var handleEnterPress = function handleEnterPress(e) {\n    if (e.key === \"Enter\") {\n      onSubmit();\n    }\n  }; // event listener\n\n\n  var onChangeContent = useCallback(function (e) {\n    setContent(e.target.value);\n  }, []);\n  var onSubmit = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var opponentNickname, opponentUid, opponentInfo, isExistOpponentLeave;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(content === \"\")) {\n              _context.next = 3;\n              break;\n            }\n\n            alert(\"메시지를 입력해주세요.\");\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.prev = 3;\n            _context.next = 6;\n            return messagesRef.child(currentChatRoom.id).push().set(createMessage());\n\n          case 6:\n            setContent(\"\");\n            opponentNickname = null;\n            _context.next = 10;\n            return firebase.database().ref(\"chatRooms\").child(currentChatRoom.id).once(\"value\", function (data) {\n              data.val().users.forEach(function (v, i) {\n                if (v.nickname !== me.nickname) {\n                  opponentNickname = v.nickname;\n                }\n              });\n            });\n\n          case 10:\n            opponentUid = null;\n            _context.next = 13;\n            return firebase.database().ref(\"users\").orderByChild(\"nickname\").equalTo(opponentNickname).once(\"value\", function (data) {\n              opponentUid = Object.keys(data.val())[0];\n            });\n\n          case 13:\n            opponentInfo = null;\n            _context.next = 16;\n            return firebase.database().ref(\"users\").child(opponentUid).once(\"value\", function (data) {\n              opponentInfo = data.val();\n            });\n\n          case 16:\n            isExistOpponentLeave = null;\n            _context.next = 19;\n            return firebase.database().ref(\"chatRooms\").child(currentChatRoom.id).once(\"value\", function (data) {\n              if (data.val()[opponentNickname]) {\n                isExistOpponentLeave = data.val()[opponentNickname];\n              }\n            });\n\n          case 19:\n            if (opponentInfo.isInMypage) {\n              _context.next = 27;\n              break;\n            }\n\n            if (!isExistOpponentLeave) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 23;\n            return firebase.database().ref(\"chatRooms\").child(currentChatRoom.id).child(opponentNickname).update(_objectSpread(_objectSpread({}, isExistOpponentLeave), {}, {\n              count: isExistOpponentLeave.count + 1,\n              total: isExistOpponentLeave.total + 1,\n              lastKnownTotal: isExistOpponentLeave.lastKnownTotal\n            }));\n\n          case 23:\n            _context.next = 27;\n            break;\n\n          case 25:\n            _context.next = 27;\n            return firebase.database().ref(\"chatRooms\").child(currentChatRoom.id).child(opponentNickname).update({\n              chatRoomId: currentChatRoom.id,\n              user: opponentNickname,\n              total: 1,\n              lastKnownTotal: 0,\n              count: 1\n            });\n\n          case 27:\n            _context.next = 34;\n            break;\n\n          case 29:\n            _context.prev = 29;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n            alert(\"오류 발생\");\n            setContent(\"\");\n\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 29]]);\n  })), [content, messagesRef, chatRoomKey]); // hooks\n\n  useEffect(function () {\n    return function () {\n      return messagesRef.off();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ChatFormWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(InputWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        className: \"chat-input\",\n        onChange: onChangeContent,\n        value: content,\n        onKeyPress: handleEnterPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"submit-btn\",\n        style: {\n          width: \"100%\"\n        },\n        onClick: onSubmit,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ChatForm, \"brh2Rb/2mVwhbskIs71Z7HCL6I8=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c4 = ChatForm;\nexport default ChatForm;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ChatFormWrapper\");\n$RefreshReg$(_c2, \"InputWrapper\");\n$RefreshReg$(_c3, \"ButtonWrapper\");\n$RefreshReg$(_c4, \"ChatForm\");","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/components/chat/ChatForm.jsx"],"names":["React","useState","useCallback","useEffect","styled","Input","Button","useSelector","firebase","ChatFormWrapper","div","InputWrapper","ButtonWrapper","ChatForm","chatRoomKey","state","user","me","chat","currentChatRoom","content","setContent","database","ref","messagesRef","setMessagesRef","createMessage","message","timestamp","ServerValue","TIMESTAMP","clientId","users","filter","v","i","_id","name","nickname","handleEnterPress","e","key","onSubmit","onChangeContent","target","value","alert","child","id","push","set","opponentNickname","once","data","val","forEach","opponentUid","orderByChild","equalTo","Object","keys","opponentInfo","isExistOpponentLeave","isInMypage","update","count","total","lastKnownTotal","chatRoomId","console","log","off","width"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Input, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport firebase from \"../../firebase\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 마이페이지 채팅 폼 컴포넌트\n */\n\n// style\n\nconst ChatFormWrapper = styled.div`\n  margin: 30px;\n  display: flex;\n`;\n\nconst InputWrapper = styled.div`\n  flex: 7;\n  .chat-input {\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  flex: 1;\n  .submit-btn {\n    &:hover {\n      color: #111;\n      border: 1px solid #313355;\n    }\n  }\n`;\n\nconst ChatForm = ({ chatRoomKey }) => {\n  // redux\n\n  const { me } = useSelector((state) => state.user);\n  const { currentChatRoom } = useSelector((state) => state.chat);\n\n  // local state\n\n  const [content, setContent] = useState(\"\");\n  const [messagesRef, setMessagesRef] = useState(\n    firebase.database().ref(\"messages\"),\n  );\n\n  // helper method\n\n  const createMessage = () => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        clientId: currentChatRoom.users.filter((v, i) => {\n          if (v.clientId === me._id) {\n            return v;\n          }\n        })[0].clientId,\n        name: me.nickname,\n      },\n      content,\n    };\n    return message;\n  };\n\n  const handleEnterPress = (e) => {\n    if (e.key === \"Enter\") {\n      onSubmit();\n    }\n  };\n\n  // event listener\n\n  const onChangeContent = useCallback((e) => {\n    setContent(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(async () => {\n    if (content === \"\") {\n      alert(\"메시지를 입력해주세요.\");\n      return;\n    }\n    try {\n      await messagesRef.child(currentChatRoom.id).push().set(createMessage());\n      setContent(\"\");\n      let opponentNickname = null;\n      await firebase\n        .database()\n        .ref(`chatRooms`)\n        .child(currentChatRoom.id)\n        .once(\"value\", function (data) {\n          data.val().users.forEach((v, i) => {\n            if (v.nickname !== me.nickname) {\n              opponentNickname = v.nickname;\n            }\n          });\n        });\n\n      let opponentUid = null;\n\n      await firebase\n        .database()\n        .ref(`users`)\n        .orderByChild(\"nickname\")\n        .equalTo(opponentNickname)\n        .once(\"value\", function (data) {\n          opponentUid = Object.keys(data.val())[0];\n        });\n\n      let opponentInfo = null;\n      await firebase\n        .database()\n        .ref(\"users\")\n        .child(opponentUid)\n        .once(\"value\", function (data) {\n          opponentInfo = data.val();\n        });\n\n      let isExistOpponentLeave = null;\n      await firebase\n        .database()\n        .ref(\"chatRooms\")\n        .child(currentChatRoom.id)\n        .once(\"value\", function (data) {\n          if (data.val()[opponentNickname]) {\n            isExistOpponentLeave = data.val()[opponentNickname];\n          }\n        });\n\n      if (!opponentInfo.isInMypage) {\n        if (isExistOpponentLeave) {\n          await firebase\n            .database()\n            .ref(\"chatRooms\")\n            .child(currentChatRoom.id)\n            .child(opponentNickname)\n            .update({\n              ...isExistOpponentLeave,\n              count: isExistOpponentLeave.count + 1,\n              total: isExistOpponentLeave.total + 1,\n              lastKnownTotal: isExistOpponentLeave.lastKnownTotal,\n            });\n        } else {\n          await firebase\n            .database()\n            .ref(\"chatRooms\")\n            .child(currentChatRoom.id)\n            .child(opponentNickname)\n            .update({\n              chatRoomId: currentChatRoom.id,\n              user: opponentNickname,\n              total: 1,\n              lastKnownTotal: 0,\n              count: 1,\n            });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"오류 발생\");\n      setContent(\"\");\n    }\n  }, [content, messagesRef, chatRoomKey]);\n\n  // hooks\n\n  useEffect(() => {\n    return () => messagesRef.off();\n  }, []);\n\n  return (\n    <ChatFormWrapper>\n      <InputWrapper>\n        <Input\n          className=\"chat-input\"\n          onChange={onChangeContent}\n          value={content}\n          onKeyPress={handleEnterPress}\n        />\n      </InputWrapper>\n      <ButtonWrapper>\n        <Button\n          className=\"submit-btn\"\n          style={{ width: \"100%\" }}\n          onClick={onSubmit}\n        >\n          전송\n        </Button>\n      </ButtonWrapper>\n    </ChatFormWrapper>\n  );\n};\n\nexport default ChatForm;\n"]},"metadata":{},"sourceType":"module"}