{"ast":null,"code":"var _jsxFileName = \"/Users/jinho/Project/ProjectFrontend/Frontend/components/common/contents/ReCommentListItem.jsx\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Avatar, Popover, Comment, Input, Image, Checkbox } from \"antd\";\nimport ProfileModal from \"../../modal/ProfileModal\";\nimport { UserOutlined, LockOutlined, LikeOutlined, LikeFilled } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nimport useToggle from \"../../../hooks/useToggle\";\nimport { SERVER_URL } from \"../../../lib/constant/constant\";\nimport { likeCommentRequestAction, unLikeCommentRequestAction } from \"../../../reducers/post\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 대댓글 아이템 컴포넌트\n */\n// style\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReApplyFormWrapper = styled.div.withConfig({\n  displayName: \"ReCommentListItem__ReApplyFormWrapper\",\n  componentId: \"sc-14mn7tx-0\"\n})([\"width:800px;display:flex;@media (max-width:768px){width:200px;display:block;}\"]);\nconst ReApplyInput = styled(Input.TextArea).withConfig({\n  displayName: \"ReCommentListItem__ReApplyInput\",\n  componentId: \"sc-14mn7tx-1\"\n})([\"flex:7;\"]);\nconst ButtonWrapper = styled.div.withConfig({\n  displayName: \"ReCommentListItem__ButtonWrapper\",\n  componentId: \"sc-14mn7tx-2\"\n})([\"line-height:30px;flex:1;.cancel-btn{cursor:pointer;margin-left:5px;}.submit-btn{cursor:pointer;color:#208fff;margin-left:10px;}.secret-btn{margin-left:10px;}\"]);\nconst CommentActivityWrapper = styled.div.withConfig({\n  displayName: \"ReCommentListItem__CommentActivityWrapper\",\n  componentId: \"sc-14mn7tx-3\"\n})([\"font-size:11px;padding:0 3px;cursor:pointer;\"]);\n\nconst ReCommentListItem = ({\n  reComment,\n  post,\n  me,\n  onDeleteComment\n}) => {\n  // redux\n  const dispatch = useDispatch(); // local state\n\n  const {\n    0: editReCommentText,\n    1: setEditReCommentText\n  } = useState(\"\");\n  const [isEditReComment, onToggleIsEditReComment] = useToggle(false);\n  const {\n    0: isReEditSecret,\n    1: setIsReEditSecret\n  } = useState(false);\n  const {\n    0: currentReComment,\n    1: setCurrentReComment\n  } = useState(null);\n  const {\n    0: like,\n    1: setLike\n  } = useState(reComment.likes.some((v, i) => {\n    if (me && v.userId === me._id) {\n      return true;\n    }\n  }) ? true : false); // event listener\n\n  const onChangeEditReCommentText = useCallback(e => {\n    setEditReCommentText(e.target.value);\n  }, []);\n  const onToggleIsReEditSecret = useCallback(() => {\n    setIsReEditSecret(!isReEditSecret);\n  }, [isReEditSecret]);\n  const onUpdateReComment = useCallback(reComment => {\n    if (editReCommentText === \"\") {\n      alert(\"내용을 입력해주세요.\");\n      return;\n    }\n\n    let updateConfirm = confirm(\"수정하시겠습니까?\");\n\n    if (updateConfirm) {\n      axios.patch(`/api/comments`, {\n        commentId: reComment._id,\n        content: editReCommentText,\n        secretComment: isReEditSecret\n      }).then(res => {\n        onToggleIsEditReComment();\n        Router.push(`/articles/${post.type}/${post._id}`);\n      }).catch(error => {\n        alert(\"댓글수정 실패\");\n      });\n    } else {\n      return;\n    }\n  }, [editReCommentText, isReEditSecret]);\n  const onToggleLike = useCallback(() => {\n    setLike(!like);\n\n    if (like) {\n      dispatch(unLikeCommentRequestAction({\n        user: me,\n        id: reComment.likes.find((v, i) => {\n          if (v.userId === me._id) {\n            return true;\n          }\n        })._id,\n        type: \"comment\",\n        commentId: reComment._id\n      }));\n    } else {\n      dispatch(likeCommentRequestAction({\n        user: me,\n        id: reComment._id,\n        type: \"comment\"\n      }));\n    }\n  }, [like, me, reComment]);\n  const onCancelEdit = useCallback(() => {\n    setEditReCommentText(reComment.content);\n    setIsReEditSecret(reComment.secretComment);\n    onToggleIsEditReComment();\n  }, [reComment, isEditReComment]);\n  const onChangeCurrentReComment = useCallback(reComment => {\n    setCurrentReComment(reComment);\n  }, []); // hooks\n\n  useEffect(() => {\n    setEditReCommentText(reComment.content);\n    setIsReEditSecret(reComment.secretComment);\n  }, [reComment]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Comment, {\n      author: !reComment.isDelete && reComment.writer && post.writer && (reComment.writer._id === post.writer._id ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#1a91fe\"\n        },\n        children: \"\\uAE00\\uC4F4\\uC774\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this) : reComment.writer.nickname),\n      actions: me ? isEditReComment && currentReComment && currentReComment._id === reComment._id ? [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ReApplyFormWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(ReApplyInput, {\n            rows: 1,\n            onChange: onChangeEditReCommentText,\n            defaultValue: reComment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"submit-btn\",\n              onClick: () => {\n                onUpdateReComment(reComment);\n              },\n              children: \"\\uC218\\uC815\"\n            }, \"comment-list-reply-to-0\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cancel-btn\",\n              onClick: onCancelEdit,\n              children: \"\\uCDE8\\uC18C\"\n            }, \"comment-list-reply-to-1\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"secret-btn\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                onChange: onToggleIsReEditSecret,\n                style: {\n                  color: \"#999\"\n                },\n                defaultChecked: reComment.secretComment,\n                children: \"\\uBE44\\uBC00 \\uB313\\uAE00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 27\n              }, this)\n            }, \"comment-list-reply-to-2\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false)] : [/*#__PURE__*/_jsxDEV(CommentActivityWrapper, {\n        children: me && /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: onToggleLike,\n          style: {\n            marginRight: \"10px\"\n          },\n          children: [like ? /*#__PURE__*/_jsxDEV(LikeFilled, {\n            style: {\n              marginRight: \"3px\",\n              color: \"#1a91fe\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(LikeOutlined, {\n            style: {\n              marginRight: \"3px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 27\n          }, this), reComment.likes.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(CommentActivityWrapper, {\n        children: reComment.writer && me && me._id === reComment.writer._id && /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            onDeleteComment(reComment._id);\n          },\n          children: \"\\uC0AD\\uC81C\"\n        }, \"comment-list-reply-to-0\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(CommentActivityWrapper, {\n        children: reComment.writer && me._id === reComment.writer._id && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(CommentActivityWrapper, {\n        children: reComment.writer && me._id === reComment.writer._id && /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            onToggleIsEditReComment();\n            onChangeCurrentReComment(reComment);\n          },\n          children: \"\\uC218\\uC815\"\n        }, \"comment-list-reply-to-0\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }, this)] : [],\n      avatar: /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => {\n            e.stopPropagation();\n          },\n          children: reComment.writer && reComment.writer.constructor == Object && /*#__PURE__*/_jsxDEV(ProfileModal, {\n            writer: reComment.writer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          onClick: e => {\n            e.stopPropagation();\n          },\n          style: {\n            cursor: \"pointer\"\n          },\n          size: 28,\n          icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 21\n          }, this),\n          src: reComment.writer && reComment.writer.avatarUrl && /*#__PURE__*/_jsxDEV(Image, {\n            width: 28,\n            height: 28,\n            src: `${reComment.writer.avatarUrl}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this),\n      content: reComment.writer && reComment.writer.constructor == Object ? reComment.secretComment ? me && (reComment.writer && reComment.writer._id === me._id || post.comments.find((v, i) => {\n        if (v._id === reComment.commentTo) {\n          return true;\n        }\n      }).writer._id === me._id) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: reComment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#999\",\n            fontSize: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(LockOutlined, {\n            style: {\n              margin: \"0 5px\",\n              color: \"#999\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 21\n          }, this), \"\\uBE44\\uBC00 \\uB313\\uAE00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(LockOutlined, {\n          style: {\n            margin: \"0 5px\",\n            color: \"#999\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#999\"\n          },\n          children: \"\\uBE44\\uBC00 \\uB313\\uAE00\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true) : reComment.content : \"탈퇴한 회원입니다.\",\n      datetime: `${new Date(reComment.createdAt).getMonth() + 1}/${new Date(reComment.createdAt).getDate()}  ${new Date(reComment.createdAt).getHours()}:${new Date(reComment.createdAt).getMinutes() < 10 ? \"0\" + new Date(reComment.createdAt).getMinutes() : new Date(reComment.createdAt).getMinutes()}:${new Date(reComment.createdAt).getSeconds() < 10 ? \"0\" + new Date(reComment.createdAt).getSeconds() : new Date(reComment.createdAt).getSeconds()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, reComment._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ReCommentListItem;","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/Frontend/components/common/contents/ReCommentListItem.jsx"],"names":["React","useCallback","useState","useEffect","styled","Avatar","Popover","Comment","Input","Image","Checkbox","ProfileModal","UserOutlined","LockOutlined","LikeOutlined","LikeFilled","useDispatch","useToggle","SERVER_URL","likeCommentRequestAction","unLikeCommentRequestAction","Router","axios","ReApplyFormWrapper","div","ReApplyInput","TextArea","ButtonWrapper","CommentActivityWrapper","ReCommentListItem","reComment","post","me","onDeleteComment","dispatch","editReCommentText","setEditReCommentText","isEditReComment","onToggleIsEditReComment","isReEditSecret","setIsReEditSecret","currentReComment","setCurrentReComment","like","setLike","likes","some","v","i","userId","_id","onChangeEditReCommentText","e","target","value","onToggleIsReEditSecret","onUpdateReComment","alert","updateConfirm","confirm","patch","commentId","content","secretComment","then","res","push","type","catch","error","onToggleLike","user","id","find","onCancelEdit","onChangeCurrentReComment","isDelete","writer","color","nickname","marginRight","length","stopPropagation","constructor","Object","cursor","avatarUrl","comments","commentTo","fontSize","margin","Date","createdAt","getMonth","getDate","getHours","getMinutes","getSeconds"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Avatar, Popover, Comment, Input, Image, Checkbox } from \"antd\";\nimport ProfileModal from \"../../modal/ProfileModal\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  LikeOutlined,\n  LikeFilled,\n} from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nimport useToggle from \"../../../hooks/useToggle\";\nimport { SERVER_URL } from \"../../../lib/constant/constant\";\nimport {\n  likeCommentRequestAction,\n  unLikeCommentRequestAction,\n} from \"../../../reducers/post\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 대댓글 아이템 컴포넌트\n */\n\n// style\n\nconst ReApplyFormWrapper = styled.div`\n  width: 800px;\n  display: flex;\n  @media (max-width: 768px) {\n    width: 200px;\n    display: block;\n  }\n`;\n\nconst ReApplyInput = styled(Input.TextArea)`\n  flex: 7;\n`;\n\nconst ButtonWrapper = styled.div`\n  line-height: 30px;\n  flex: 1;\n  .cancel-btn {\n    cursor: pointer;\n    margin-left: 5px;\n  }\n  .submit-btn {\n    cursor: pointer;\n    color: #208fff;\n    margin-left: 10px;\n  }\n  .secret-btn {\n    margin-left: 10px;\n  }\n`;\n\nconst CommentActivityWrapper = styled.div`\n  font-size: 11px;\n  padding: 0 3px;\n  cursor: pointer;\n`;\n\nconst ReCommentListItem = ({ reComment, post, me, onDeleteComment }) => {\n  // redux\n\n  const dispatch = useDispatch();\n\n  // local state\n\n  const [editReCommentText, setEditReCommentText] = useState(\"\");\n  const [isEditReComment, onToggleIsEditReComment] = useToggle(false);\n  const [isReEditSecret, setIsReEditSecret] = useState(false);\n  const [currentReComment, setCurrentReComment] = useState(null);\n  const [like, setLike] = useState(\n    reComment.likes.some((v, i) => {\n      if (me && v.userId === me._id) {\n        return true;\n      }\n    })\n      ? true\n      : false,\n  );\n\n  // event listener\n\n  const onChangeEditReCommentText = useCallback((e) => {\n    setEditReCommentText(e.target.value);\n  }, []);\n\n  const onToggleIsReEditSecret = useCallback(() => {\n    setIsReEditSecret(!isReEditSecret);\n  }, [isReEditSecret]);\n\n  const onUpdateReComment = useCallback(\n    (reComment) => {\n      if (editReCommentText === \"\") {\n        alert(\"내용을 입력해주세요.\");\n        return;\n      }\n      let updateConfirm = confirm(\"수정하시겠습니까?\");\n      if (updateConfirm) {\n        axios\n          .patch(`/api/comments`, {\n            commentId: reComment._id,\n            content: editReCommentText,\n            secretComment: isReEditSecret,\n          })\n          .then((res) => {\n            onToggleIsEditReComment();\n            Router.push(`/articles/${post.type}/${post._id}`);\n          })\n          .catch((error) => {\n            alert(\"댓글수정 실패\");\n          });\n      } else {\n        return;\n      }\n    },\n    [editReCommentText, isReEditSecret],\n  );\n\n  const onToggleLike = useCallback(() => {\n    setLike(!like);\n    if (like) {\n      dispatch(\n        unLikeCommentRequestAction({\n          user: me,\n          id: reComment.likes.find((v, i) => {\n            if (v.userId === me._id) {\n              return true;\n            }\n          })._id,\n          type: \"comment\",\n          commentId: reComment._id,\n        }),\n      );\n    } else {\n      dispatch(\n        likeCommentRequestAction({\n          user: me,\n          id: reComment._id,\n          type: \"comment\",\n        }),\n      );\n    }\n  }, [like, me, reComment]);\n\n  const onCancelEdit = useCallback(() => {\n    setEditReCommentText(reComment.content);\n    setIsReEditSecret(reComment.secretComment);\n    onToggleIsEditReComment();\n  }, [reComment, isEditReComment]);\n\n  const onChangeCurrentReComment = useCallback((reComment) => {\n    setCurrentReComment(reComment);\n  }, []);\n\n  // hooks\n\n  useEffect(() => {\n    setEditReCommentText(reComment.content);\n    setIsReEditSecret(reComment.secretComment);\n  }, [reComment]);\n\n  return (\n    <div key={reComment._id}>\n      <Comment\n        author={\n          !reComment.isDelete &&\n          reComment.writer &&\n          post.writer &&\n          (reComment.writer._id === post.writer._id ? (\n            <span style={{ color: \"#1a91fe\" }}>글쓴이</span>\n          ) : (\n            reComment.writer.nickname\n          ))\n        }\n        actions={\n          me\n            ? isEditReComment &&\n              currentReComment &&\n              currentReComment._id === reComment._id\n              ? [\n                  <>\n                    <ReApplyFormWrapper>\n                      <ReApplyInput\n                        rows={1}\n                        onChange={onChangeEditReCommentText}\n                        defaultValue={reComment.content}\n                      />\n\n                      <ButtonWrapper>\n                        <span\n                          className=\"submit-btn\"\n                          key=\"comment-list-reply-to-0\"\n                          onClick={() => {\n                            onUpdateReComment(reComment);\n                          }}\n                        >\n                          수정\n                        </span>\n                        <span\n                          className=\"cancel-btn\"\n                          key=\"comment-list-reply-to-1\"\n                          onClick={onCancelEdit}\n                        >\n                          취소\n                        </span>\n                        <span\n                          className=\"secret-btn\"\n                          key=\"comment-list-reply-to-2\"\n                        >\n                          <Checkbox\n                            onChange={onToggleIsReEditSecret}\n                            style={{ color: \"#999\" }}\n                            defaultChecked={reComment.secretComment}\n                          >\n                            비밀 댓글\n                          </Checkbox>\n                        </span>\n                      </ButtonWrapper>\n                    </ReApplyFormWrapper>\n                  </>,\n                ]\n              : [\n                  <CommentActivityWrapper>\n                    {me && (\n                      <span\n                        onClick={onToggleLike}\n                        style={{ marginRight: \"10px\" }}\n                      >\n                        {like ? (\n                          <LikeFilled\n                            style={{ marginRight: \"3px\", color: \"#1a91fe\" }}\n                          />\n                        ) : (\n                          <LikeOutlined style={{ marginRight: \"3px\" }} />\n                        )}\n\n                        {reComment.likes.length}\n                      </span>\n                    )}\n                  </CommentActivityWrapper>,\n                  <CommentActivityWrapper>\n                    {reComment.writer && me && me._id === reComment.writer._id && (\n                      <span\n                        key=\"comment-list-reply-to-0\"\n                        onClick={() => {\n                          onDeleteComment(reComment._id);\n                        }}\n                      >\n                        삭제\n                      </span>\n                    )}\n                  </CommentActivityWrapper>,\n                  <CommentActivityWrapper>\n                    {reComment.writer && me._id === reComment.writer._id && (\n                      <span>|</span>\n                    )}\n                  </CommentActivityWrapper>,\n                  <CommentActivityWrapper>\n                    {reComment.writer && me._id === reComment.writer._id && (\n                      <span\n                        key=\"comment-list-reply-to-0\"\n                        onClick={() => {\n                          onToggleIsEditReComment();\n                          onChangeCurrentReComment(reComment);\n                        }}\n                      >\n                        수정\n                      </span>\n                    )}\n                  </CommentActivityWrapper>,\n                ]\n            : []\n        }\n        avatar={\n          <Popover\n            content={\n              <div\n                onClick={(e) => {\n                  e.stopPropagation();\n                }}\n              >\n                {reComment.writer && reComment.writer.constructor == Object && (\n                  <ProfileModal writer={reComment.writer}></ProfileModal>\n                )}\n              </div>\n            }\n          >\n            <Avatar\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n              style={{\n                cursor: \"pointer\",\n              }}\n              size={28}\n              icon={<UserOutlined />}\n              src={\n                reComment.writer &&\n                reComment.writer.avatarUrl && (\n                  <Image\n                    width={28}\n                    height={28}\n                    src={`${reComment.writer.avatarUrl}`}\n                  />\n                )\n              }\n            />\n          </Popover>\n        }\n        content={\n          reComment.writer && reComment.writer.constructor == Object ? (\n            reComment.secretComment ? (\n              me &&\n              ((reComment.writer && reComment.writer._id === me._id) ||\n                post.comments.find((v, i) => {\n                  if (v._id === reComment.commentTo) {\n                    return true;\n                  }\n                }).writer._id === me._id) ? (\n                <>\n                  <span>{reComment.content}</span>\n                  <span style={{ color: \"#999\", fontSize: \"12px\" }}>\n                    <LockOutlined style={{ margin: \"0 5px\", color: \"#999\" }} />\n                    비밀 댓글\n                  </span>\n                </>\n              ) : (\n                <>\n                  <LockOutlined style={{ margin: \"0 5px\", color: \"#999\" }} />\n                  <span style={{ color: \"#999\" }}>비밀 댓글입니다.</span>\n                </>\n              )\n            ) : (\n              reComment.content\n            )\n          ) : (\n            \"탈퇴한 회원입니다.\"\n          )\n        }\n        datetime={`${new Date(reComment.createdAt).getMonth() + 1}/${new Date(\n          reComment.createdAt,\n        ).getDate()}  ${new Date(reComment.createdAt).getHours()}:${\n          new Date(reComment.createdAt).getMinutes() < 10\n            ? \"0\" + new Date(reComment.createdAt).getMinutes()\n            : new Date(reComment.createdAt).getMinutes()\n        }:${\n          new Date(reComment.createdAt).getSeconds() < 10\n            ? \"0\" + new Date(reComment.createdAt).getSeconds()\n            : new Date(reComment.createdAt).getSeconds()\n        }`}\n      />\n    </div>\n  );\n};\n\nexport default ReCommentListItem;\n"]},"metadata":{},"sourceType":"module"}