{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Input, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport firebase from \"../../firebase\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 마이페이지 채팅 폼 컴포넌트\n */\n// style\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatFormWrapper = styled.div.withConfig({\n  displayName: \"ChatForm__ChatFormWrapper\",\n  componentId: \"cirlrr-0\"\n})([\"margin:30px;display:flex;\"]);\nvar InputWrapper = styled.div.withConfig({\n  displayName: \"ChatForm__InputWrapper\",\n  componentId: \"cirlrr-1\"\n})([\"flex:7;.chat-input{}\"]);\nvar ButtonWrapper = styled.div.withConfig({\n  displayName: \"ChatForm__ButtonWrapper\",\n  componentId: \"cirlrr-2\"\n})([\"flex:1;.submit-btn{&:hover{color:#111;border:1px solid #313355;}}\"]);\n\nvar ChatForm = function ChatForm(_ref) {\n  var chatRoomKey = _ref.chatRoomKey;\n\n  // redux\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.chat;\n  }),\n      currentChatRoom = _useSelector2.currentChatRoom; // local state\n\n\n  var _useState = useState(\"\"),\n      content = _useState[0],\n      setContent = _useState[1];\n\n  var _useState2 = useState(firebase.database().ref(\"messages\")),\n      messagesRef = _useState2[0],\n      setMessagesRef = _useState2[1]; // helper method\n\n\n  var createMessage = function createMessage() {\n    var message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        clientId: currentChatRoom.users.filter(function (v, i) {\n          if (v.clientId === me._id) {\n            return v;\n          }\n        })[0].clientId,\n        name: me.nickname\n      },\n      content: content\n    };\n    return message;\n  };\n\n  var handleEnterPress = function handleEnterPress(e) {\n    if (e.key === \"Enter\") {\n      onSubmit();\n    }\n  }; // event listener\n\n\n  var onChangeContent = useCallback(function (e) {\n    setContent(e.target.value);\n  }, []);\n  var onSubmit = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var opponentNickname, opponentUid, opponentInfo, isExistOpponentLeave;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(content === \"\")) {\n              _context.next = 3;\n              break;\n            }\n\n            alert(\"메시지를 입력해주세요.\");\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.prev = 3;\n            _context.next = 6;\n            return messagesRef.child(currentChatRoom.id).push().set(createMessage());\n\n          case 6:\n            setContent(\"\");\n            opponentNickname = null;\n            _context.next = 10;\n            return firebase.database().ref(\"chatRooms\").child(currentChatRoom.id).once(\"value\", function (data) {\n              data.val().users.forEach(function (v, i) {\n                if (v.nickname !== me.nickname) {\n                  opponentNickname = v.nickname;\n                }\n              });\n            });\n\n          case 10:\n            opponentUid = null;\n            _context.next = 13;\n            return firebase.database().ref(\"users\").orderByChild(\"nickname\").equalTo(opponentNickname).once(\"value\", function (data) {\n              opponentUid = Object.keys(data.val())[0];\n            });\n\n          case 13:\n            opponentInfo = null;\n            _context.next = 16;\n            return firebase.database().ref(\"users\").child(opponentUid).once(\"value\", function (data) {\n              opponentInfo = data.val();\n            });\n\n          case 16:\n            isExistOpponentLeave = null;\n            _context.next = 19;\n            return firebase.database().ref(\"chatRooms\").child(currentChatRoom.id).once(\"value\", function (data) {\n              if (data.val()[opponentNickname]) {\n                isExistOpponentLeave = data.val()[opponentNickname];\n              }\n            });\n\n          case 19:\n            if (opponentInfo.isInMypage) {\n              _context.next = 27;\n              break;\n            }\n\n            if (!isExistOpponentLeave) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 23;\n            return firebase.database().ref(\"chatRooms\").child(currentChatRoom.id).child(opponentNickname).update(_objectSpread(_objectSpread({}, isExistOpponentLeave), {}, {\n              count: isExistOpponentLeave.count + 1,\n              total: isExistOpponentLeave.total + 1,\n              lastKnownTotal: isExistOpponentLeave.lastKnownTotal\n            }));\n\n          case 23:\n            _context.next = 27;\n            break;\n\n          case 25:\n            _context.next = 27;\n            return firebase.database().ref(\"chatRooms\").child(currentChatRoom.id).child(opponentNickname).update({\n              chatRoomId: currentChatRoom.id,\n              user: opponentNickname,\n              total: 1,\n              lastKnownTotal: 0,\n              count: 1\n            });\n\n          case 27:\n            _context.next = 34;\n            break;\n\n          case 29:\n            _context.prev = 29;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n            alert(\"오류 발생\");\n            setContent(\"\");\n\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 29]]);\n  })), [content, messagesRef, chatRoomKey]); // hooks\n\n  useEffect(function () {\n    return function () {\n      return messagesRef.off();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxs(ChatFormWrapper, {\n    children: [/*#__PURE__*/_jsx(InputWrapper, {\n      children: /*#__PURE__*/_jsx(Input, {\n        className: \"chat-input\",\n        onChange: onChangeContent,\n        value: content,\n        onKeyPress: handleEnterPress\n      })\n    }), /*#__PURE__*/_jsx(ButtonWrapper, {\n      children: /*#__PURE__*/_jsx(Button, {\n        className: \"submit-btn\",\n        style: {\n          width: \"100%\"\n        },\n        onClick: onSubmit,\n        children: \"\\uC804\\uC1A1\"\n      })\n    })]\n  });\n};\n\nexport default ChatForm;","map":null,"metadata":{},"sourceType":"module"}