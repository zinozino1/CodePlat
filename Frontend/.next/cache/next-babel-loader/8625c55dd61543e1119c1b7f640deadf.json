{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useCallback } from \"react\";\nimport { Tag, Input, Tooltip } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포럼 포스트 작성에 쓰이는 태그박스 컴포넌트\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar TagBox = function TagBox(_ref) {\n  var tags = _ref.tags,\n      setTags = _ref.setTags,\n      inputVisible = _ref.inputVisible,\n      setInputVisible = _ref.setInputVisible,\n      inputValue = _ref.inputValue,\n      setInputValue = _ref.setInputValue,\n      editInputIndex = _ref.editInputIndex,\n      setEditInputIndex = _ref.setEditInputIndex,\n      editInputValue = _ref.editInputValue,\n      setEditInputValue = _ref.setEditInputValue;\n  // event listener\n  var handleClose = useCallback(function (removedTag) {\n    setTags(tags.filter(function (tag) {\n      return tag !== removedTag;\n    }));\n  }, [tags]);\n  var showInput = useCallback(function () {\n    setInputVisible(true);\n  }, []);\n  var handleInputChange = useCallback(function (e) {\n    setInputValue(e.target.value);\n  }, []);\n  var handleInputConfirm = useCallback(function () {\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      setTags([].concat(_toConsumableArray(tags), [inputValue]));\n    }\n\n    setInputVisible(false);\n    setInputValue(\"\");\n  }, [inputValue, tags]);\n  var handleEditInputChange = useCallback(function (e) {\n    setEditInputValue(e.target.value);\n  }, []);\n  var handleEditInputConfirm = useCallback(function () {\n    var newTags = _toConsumableArray(tags);\n\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [tags.map(function (tag, index) {\n      if (editInputIndex === index) {\n        return /*#__PURE__*/_jsx(Input, {\n          ref: saveEditInputRef,\n          size: \"small\",\n          className: \"tag-input\",\n          value: editInputValue,\n          onChange: handleEditInputChange,\n          onBlur: handleEditInputConfirm,\n          onPressEnter: handleEditInputConfirm\n        }, tag);\n      }\n\n      var isLongTag = tag.length > 20;\n\n      var tagElem = /*#__PURE__*/_jsx(Tag, {\n        className: \"edit-tag\",\n        closable: true,\n        onClose: function onClose() {\n          return handleClose(tag);\n        },\n        children: /*#__PURE__*/_jsx(\"span\", {\n          children: isLongTag ? \"\".concat(tag.slice(0, 20), \"...\") : tag\n        })\n      }, tag);\n\n      return isLongTag ? /*#__PURE__*/_jsx(Tooltip, {\n        title: tag,\n        children: tagElem\n      }, tag) : tagElem;\n    }), inputVisible && /*#__PURE__*/_jsx(Input, {\n      type: \"text\",\n      size: \"small\",\n      className: \"tag-input\",\n      value: inputValue,\n      onChange: handleInputChange,\n      onBlur: handleInputConfirm,\n      onPressEnter: handleInputConfirm,\n      style: {\n        width: \"78px\",\n        marginRight: \"8px\",\n        verticalAlign: \"top\"\n      }\n    }), !inputVisible && /*#__PURE__*/_jsxs(Tag, {\n      className: \"site-tag-plus\",\n      onClick: showInput,\n      children: [/*#__PURE__*/_jsx(PlusOutlined, {}), \" \\uD0DC\\uADF8\\uCD94\\uAC00\"]\n    })]\n  });\n};\n\nexport default TagBox;","map":null,"metadata":{},"sourceType":"module"}