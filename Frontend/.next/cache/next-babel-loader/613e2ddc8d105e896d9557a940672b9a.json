{"ast":null,"code":"var _jsxFileName = \"/Users/jinho/Project/ProjectFrontend/components/auth/RegisterInputForm.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { Form, Input, Select, Button, Divider, Upload, Steps, Result } from \"antd\";\nimport { UserOutlined, UploadOutlined, SolutionOutlined, SmileOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SocialTemplate from \"../common/auth/SocialTemplate\";\nimport useInput from \"../../hooks/useInput\";\nimport SkillFilterForm from \"../common/contents/SkillFilterForm\";\nimport { EmailRegex } from \"../../lib/constant/constant\";\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\nimport FormData from \"form-data\";\nimport firebase from \"../../firebase\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 회원가입 종합 컴포넌트\n */\n// style\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst RegisterFormWrapper = styled(Form).withConfig({\n  displayName: \"RegisterInputForm__RegisterFormWrapper\",\n  componentId: \"sn3xer-0\"\n})([\".register-btn{margin:20px 0;text-align:center;}.ant-divider{font-size:12px;margin:50px 0;}\"]);\nconst RegisterInputItemWrapper = styled(Form.Item).withConfig({\n  displayName: \"RegisterInputForm__RegisterInputItemWrapper\",\n  componentId: \"sn3xer-1\"\n})([\".ant-form-item-label{text-align:left;}.email-code{width:200px;}.ant-form-item-control{}\"]);\nconst PushBackButton = styled.span.withConfig({\n  displayName: \"RegisterInputForm__PushBackButton\",\n  componentId: \"sn3xer-2\"\n})([\"color:#888;font-size:12px;text-decoration:underline;cursor:pointer;\"]);\nconst StyledDivider = styled(Divider).withConfig({\n  displayName: \"RegisterInputForm__StyledDivider\",\n  componentId: \"sn3xer-3\"\n})([\"\"]);\nconst formData = new FormData();\n\nconst RegisterInputForm = ({\n  router\n}) => {\n  // redux\n  const {\n    skill\n  } = useSelector(state => state.skill); // local state\n\n  const [form] = Form.useForm();\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(null);\n  const {\n    0: registerType,\n    1: setRegisterType\n  } = useState(null);\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    0: socialType,\n    1: setSocialType\n  } = useState(\"\");\n  const {\n    0: formError,\n    1: setFormError\n  } = useState(true);\n  const {\n    0: nicknameExistError,\n    1: setNicknameExistError\n  } = useState(false);\n  const {\n    0: emailExistError,\n    1: setEmailExistError\n  } = useState(false);\n  const {\n    0: noneEmailUser,\n    1: setNoneEmailUser\n  } = useState(false);\n  const {\n    0: firebaseLoading,\n    1: setFirebaseLoading\n  } = useState(false);\n  const {\n    0: imageFile,\n    1: setImageFile\n  } = useState(null);\n  const {\n    0: nickname,\n    1: setNickname\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const [confirmEmail, onChangeConfirmEmail] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const [confirmPassword, onChangeConfirmPassword] = useInput(\"\");\n  const [githubUrl, onChangeGithubUrl] = useInput(\"\"); // helper method\n\n  const normFile = e => {\n    if (e.file.status === \"done\") {\n      formData.append(\"avatar\", e.fileList[0].originFileObj);\n    } else if (e.file.status === \"removed\") {\n      formData.delete(\"avatar\");\n    }\n\n    let fileList = e.fileList;\n    fileList = fileList.slice(-1);\n\n    if (Array.isArray(e)) {\n      return e;\n    }\n\n    return e && fileList;\n  }; // event listener\n\n\n  const onChangeNickname = useCallback(e => {\n    setNickname(e.target.value);\n    setNicknameExistError(false);\n  }, []);\n  const onChangeEmail = useCallback(e => {\n    setEmail(e.target.value);\n    setEmailExistError(false);\n  }, []);\n  const onClickEmailVerify = useCallback(() => {\n    setProgress(2);\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        enctype: \"multipart/form-data\"\n      }\n    };\n    formData.append(\"type\", \"local\");\n    formData.append(\"id\", userId);\n    formData.append(\"techStack\", JSON.stringify(skill));\n    formData.append(\"githubUrl\", githubUrl);\n    axios.post(\"/api/join/optionForm\", formData, config);\n  }, [userId, skill, githubUrl]);\n  const onClickLocalButton = useCallback(async () => {\n    if (formError) return;\n    await axios.post(\"/api/join\", {\n      email,\n      nickname,\n      password\n    }).then(async res => {\n      setUserId(res.data.userId);\n      setEmailExistError(false);\n      setNicknameExistError(false);\n      setRegisterType(\"local\");\n      setProgress(1);\n      setFirebaseLoading(true);\n      let createdUser = await firebase.auth().createUserWithEmailAndPassword(email, email);\n      await createdUser.user.updateProfile({\n        displayName: nickname\n      });\n      await firebase.database().ref(\"users\").child(createdUser.user.uid).set({\n        nickname: createdUser.user.displayName,\n        email: createdUser.user.email,\n        type: \"local\",\n        isInMypage: false\n      });\n    }).catch(err => {\n      if (err.response.data.error.name === \"UserExistsError\") {\n        setEmailExistError(true);\n      } else {\n        setNicknameExistError(true);\n      }\n    });\n  }, [formError, email, nickname, password]);\n  const onPushBack = useCallback(() => {\n    setRegisterType(null);\n    setProgress(0);\n  }, []);\n  const onSocialRegisterSubmit = useCallback(e => {\n    if (nickname === \"\") {\n      alert(\"닉네임을 입력해주세요.\");\n      return;\n    }\n\n    if (noneEmailUser && email === \"\") {\n      console.log(noneEmailUser, email);\n      alert(\"이메일을 입력해주세요.\");\n      return;\n    }\n\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        enctype: \"multipart/form-data\"\n      }\n    };\n\n    if (noneEmailUser) {\n      formData.append(\"type\", \"email\");\n      formData.append(\"nickname\", nickname);\n      formData.append(\"techStack\", JSON.stringify(skill));\n      formData.append(\"githubUrl\", githubUrl);\n      formData.append(\"email\", email);\n      axios.post(\"/api/join/optionForm\", formData, config).then(async res => {\n        if (res.data.message === \"email is reduplication\") {\n          setEmailExistError(true);\n          formData.delete(\"type\");\n          formData.delete(\"nickname\");\n          formData.delete(\"techStack\");\n          formData.delete(\"githubUrl\");\n          formData.delete(\"email\");\n          return;\n        } else if (res.data.message === \"nickname is reduplication\") {\n          setNicknameExistError(true);\n          formData.delete(\"type\");\n          formData.delete(\"nickname\");\n          formData.delete(\"techStack\");\n          formData.delete(\"githubUrl\");\n          formData.delete(\"email\");\n          return;\n        }\n\n        setNicknameExistError(false);\n        setEmailExistError(false);\n        setProgress(2);\n        let createdUser = await firebase.auth().createUserWithEmailAndPassword(email, email);\n        await createdUser.user.updateProfile({\n          displayName: nickname\n        });\n        await firebase.database().ref(\"users\").child(createdUser.user.uid).set({\n          nickname: createdUser.user.displayName,\n          type: \"social\",\n          isInMypage: false\n        });\n      }).catch(error => {\n        console.log(error);\n        alert(\"에러 발생.\");\n        formData.delete(\"type\");\n        formData.delete(\"nickname\");\n        formData.delete(\"techStack\");\n        formData.delete(\"githubUrl\");\n        formData.delete(\"email\");\n      });\n    } else {\n      formData.append(\"type\", \"sns\");\n      formData.append(\"nickname\", nickname);\n      formData.append(\"techStack\", JSON.stringify(skill));\n      formData.append(\"githubUrl\", githubUrl);\n      axios.post(\"/api/join/optionForm\", formData, config).then(async res => {\n        if (res.data.message === \"nickname is reduplication\") {\n          setNicknameExistError(true);\n          formData.delete(\"type\");\n          formData.delete(\"nickname\");\n          formData.delete(\"techStack\");\n          formData.delete(\"githubUrl\");\n          return;\n        }\n\n        setNicknameExistError(false);\n        setFirebaseLoading(true);\n        let createdUser = await firebase.auth().createUserWithEmailAndPassword(res.data.user.email, res.data.user.email);\n        await createdUser.user.updateProfile({\n          displayName: nickname\n        });\n        await firebase.database().ref(\"users\").child(createdUser.user.uid).set({\n          email: createdUser.user.email,\n          nickname: createdUser.user.displayName,\n          type: \"social\",\n          isInMypage: false\n        });\n        let SignedInUser = await firebase.auth().signInWithEmailAndPassword(res.data.user.email, res.data.user.email);\n        setFirebaseLoading(false);\n        router.push(\"/\");\n      }).catch(error => {\n        alert(\"에러 발생.\");\n        console.log(error);\n        formData.delete(\"type\");\n        formData.delete(\"nickname\");\n        formData.delete(\"techStack\");\n        formData.delete(\"githubUrl\");\n      });\n    }\n  }, [nickname, skill, githubUrl]); // hooks\n\n  useEffect(() => {\n    if (nickname.length !== 0 && email.length !== 0 && confirmEmail.length !== 0 && password.length !== 0 && password.length >= 8 && confirmPassword.length !== 0 && password === confirmPassword && email === confirmEmail && email.match(EmailRegex)) {\n      setFormError(false);\n    } else {\n      setFormError(true);\n    }\n  }, [nickname, email, confirmEmail, password, confirmPassword]);\n  useEffect(() => {\n    if (router.query.type === \"sns\") {\n      setProgress(1);\n      setRegisterType(\"social\");\n    } else if (router.query.type === \"email\") {\n      setProgress(1);\n      setRegisterType(\"social\");\n      setNoneEmailUser(true);\n    }\n  }, [router]);\n  return /*#__PURE__*/_jsxDEV(RegisterFormWrapper, _objectSpread(_objectSpread({}, formItemLayout), {}, {\n    form: form,\n    name: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        marginBottom: \"40px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            color: \"#16172b\",\n            fontWeight: \"300\"\n          },\n          children: \"CodePlat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Steps, {\n      current: progress,\n      onChange: setProgress,\n      style: {\n        marginBottom: \"70px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Steps.Step, {\n        title: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n        icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 40\n        }, this),\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Steps.Step, {\n        title: \"\\uCD94\\uAC00\\uC815\\uBCF4\",\n        icon: /*#__PURE__*/_jsxDEV(SolutionOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 40\n        }, this),\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Steps.Step, {\n        title: \"\\uC644\\uB8CC\",\n        icon: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 38\n        }, this),\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), progress == 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [nicknameExistError ? /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n        name: \"nickname\",\n        label: \"\\uB2C9\\uB124\\uC784\",\n        validateStatus: \"error\",\n        help: \"\\uC774\\uBBF8 \\uC874\\uC7AC\\uD558\\uB294 \\uB2C9\\uB124\\uC784\\uC785\\uB2C8\\uB2E4.\",\n        rules: [{\n          required: true,\n          message: \"닉네임을 입력해주세요.\",\n          whitespace: true\n        }],\n        onChange: onChangeNickname,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"nickname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n        name: \"nickname\",\n        label: \"\\uB2C9\\uB124\\uC784\",\n        rules: [{\n          required: true,\n          message: \"닉네임을 입력해주세요.\",\n          whitespace: true\n        }],\n        onChange: onChangeNickname,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"nickname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }, this), emailExistError ? /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n        name: \"email\",\n        label: \"\\uC774\\uBA54\\uC77C\",\n        validateStatus: \"error\",\n        help: \"\\uC774\\uBBF8 \\uC874\\uC7AC\\uD558\\uB294 \\uC774\\uBA54\\uC77C\\uC785\\uB2C8\\uB2E4.\",\n        rules: [{\n          type: \"email\",\n          message: \"이메일 형식으로 입력해 주세요.\"\n        }, {\n          required: true,\n          message: \"이메일을 입력해주세요.\"\n        }],\n        onChange: onChangeEmail,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n        name: \"email\",\n        label: \"\\uC774\\uBA54\\uC77C\",\n        rules: [{\n          type: \"email\",\n          message: \"이메일 형식으로 입력해 주세요.\"\n        }, {\n          required: true,\n          message: \"이메일을 입력해주세요.\"\n        }],\n        onChange: onChangeEmail,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n        name: \"confirmEmail\",\n        label: \"\\uC774\\uBA54\\uC77C \\uD655\\uC778\",\n        rules: [{\n          required: true,\n          message: \"이메일 확인을 입력해주세요.\"\n        }, ({\n          getFieldValue\n        }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue(\"email\") === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(\"이메일이 일치하지 않습니다.\");\n          }\n\n        })],\n        onChange: onChangeConfirmEmail,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"confirm email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n        name: \"password\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        rules: [{\n          required: true,\n          message: \"비밀번호를 입력해주세요.\"\n        }, {\n          min: 8,\n          message: \"8자리 이상 비밀번호를 입력해주세요.\"\n        }],\n        hasFeedback: true,\n        onChange: onChangePassword,\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n        name: \"confirmpassword\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        dependencies: [\"password\"],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: \"비밀번호를 입력해주세요.\"\n        }, ({\n          getFieldValue\n        }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue(\"password\") === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(\"비밀번호가 일치하지 않습니다.\");\n          }\n\n        })],\n        onChange: onChangeConfirmPassword,\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"confirm password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-btn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          onClick: onClickLocalButton,\n          style: {\n            background: \"#313355\",\n            color: \"#fff\",\n            border: \"1px solid #313355\"\n          },\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledDivider, {\n        children: \"\\uC18C\\uC15C \\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SocialTemplate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), progress == 1 && registerType == \"local\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledDivider, {\n        children: \"\\uC120\\uD0DD \\uC785\\uB825 \\uC0AC\\uD56D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SkillFilterForm, {\n        type: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n        name: \"github\",\n        label: \"Github\",\n        hasFeedback: true,\n        onChange: onChangeGithubUrl,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"github \\uB2C9\\uB124\\uC784\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n        name: \"avatar\",\n        label: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uBBF8\\uC9C0 \\uC124\\uC815\",\n        valuePropName: \"fileList\",\n        getValueFromEvent: normFile,\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          name: \"logo\",\n          listType: \"picture\",\n          accept: \"image/*\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              background: \"#313355\",\n              color: \"#fff\",\n              border: \"1px solid #313355\"\n            },\n            icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 23\n            }, this),\n            children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledDivider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-btn\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: onClickEmailVerify,\n          style: {\n            background: \"#313355\",\n            color: \"#fff\",\n            border: \"1px solid #313355\"\n          },\n          children: \"\\uC774\\uBA54\\uC77C \\uC778\\uC99D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PushBackButton, {\n        onClick: onPushBack,\n        children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), progress == 1 && registerType == \"social\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [nicknameExistError ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n          name: \"nickname\",\n          label: \"\\uB2C9\\uB124\\uC784\",\n          validateStatus: \"error\",\n          help: \"\\uC774\\uBBF8 \\uC874\\uC7AC\\uD558\\uB294 \\uB2C9\\uB124\\uC784\\uC785\\uB2C8\\uB2E4.\",\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: \"닉네임을 입력해주세요.\",\n            whitespace: true\n          }],\n          onChange: onChangeNickname,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 15\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n          name: \"nickname\",\n          label: \"\\uB2C9\\uB124\\uC784\",\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: \"닉네임을 입력해주세요.\",\n            whitespace: true\n          }],\n          onChange: onChangeNickname,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), noneEmailUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: emailExistError ? /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n          name: \"email\",\n          label: \"\\uC774\\uBA54\\uC77C\",\n          validateStatus: \"error\",\n          help: \"\\uC774\\uBBF8 \\uC874\\uC7AC\\uD558\\uB294 \\uC774\\uBA54\\uC77C\\uC785\\uB2C8\\uB2E4.\",\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: \"이메일을 입력해주세요.\",\n            whitespace: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"email\",\n            onChange: onChangeEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n          name: \"email\",\n          label: \"\\uC774\\uBA54\\uC77C\",\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: \"이메일을 입력해주세요.\",\n            whitespace: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"email\",\n            onChange: onChangeEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(StyledDivider, {\n        children: \"\\uC120\\uD0DD \\uC785\\uB825 \\uC0AC\\uD56D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SkillFilterForm, {\n        type: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n        name: \"github\",\n        label: \"Github\",\n        hasFeedback: true,\n        onChange: onChangeGithubUrl,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"github \\uB2C9\\uB124\\uC784\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInputItemWrapper, {\n        name: \"avatar\",\n        label: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uBBF8\\uC9C0 \\uC124\\uC815\",\n        valuePropName: \"fileList\",\n        getValueFromEvent: normFile,\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          name: \"logo\",\n          listType: \"picture\",\n          accept: \"image/*\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 29\n            }, this),\n            children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledDivider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-btn\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: onSocialRegisterSubmit,\n          style: {\n            background: \"#313355\",\n            color: \"#fff\",\n            border: \"1px solid #313355\"\n          },\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 11\n      }, this), firebaseLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PushBackButton, {\n        onClick: onPushBack,\n        children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), progress == 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Result, {\n          status: \"success\",\n          title: `${email} 으로 인증 요청\n              메일을 보냈습니다. `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"16px\",\n          textAlign: \"center\"\n        },\n        children: [\"\\uD574\\uB2F9 \\uC774\\uBA54\\uC77C\\uC744 \\uD655\\uC778 \\uD558\\uC2DC\\uACE0, \\uC778\\uC99D \\uD655\\uC778 \\uB9C1\\uD06C\\uB97C \\uB20C\\uB7EC \\uC8FC\\uC2DC\\uAE30 \\uBC14\\uB78D\\uB2C8\\uB2E4.\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"13px\",\n          textAlign: \"center\",\n          margin: \"20px 0\",\n          color: \"#888\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }, this), \"\\uC774\\uBA54\\uC77C \\uC778\\uC99D\\uC774 \\uC644\\uB8CC \\uB418\\uC9C0 \\uC54A\\uC744 \\uACBD\\uC6B0 \\uC0AC\\uC774\\uD2B8 \\uC774\\uC6A9\\uC5D0 \\uC81C\\uD55C\\uC774 \\uC788\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"13px\",\n          textAlign: \"center\",\n          margin: \"20px 0\",\n          textDecoration: \"underline\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/auth/login\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              color: \"#888\"\n            },\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 9\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withRouter(RegisterInputForm);","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/components/auth/RegisterInputForm.jsx"],"names":["React","useCallback","useState","useEffect","Form","Input","Select","Button","Divider","Upload","Steps","Result","UserOutlined","UploadOutlined","SolutionOutlined","SmileOutlined","styled","Link","useDispatch","useSelector","SocialTemplate","useInput","SkillFilterForm","EmailRegex","axios","withRouter","FormData","firebase","formItemLayout","labelCol","xs","span","sm","wrapperCol","RegisterFormWrapper","RegisterInputItemWrapper","Item","PushBackButton","StyledDivider","formData","RegisterInputForm","router","skill","state","form","useForm","userId","setUserId","registerType","setRegisterType","progress","setProgress","socialType","setSocialType","formError","setFormError","nicknameExistError","setNicknameExistError","emailExistError","setEmailExistError","noneEmailUser","setNoneEmailUser","firebaseLoading","setFirebaseLoading","imageFile","setImageFile","nickname","setNickname","email","setEmail","confirmEmail","onChangeConfirmEmail","password","onChangePassword","confirmPassword","onChangeConfirmPassword","githubUrl","onChangeGithubUrl","normFile","e","file","status","append","fileList","originFileObj","delete","slice","Array","isArray","onChangeNickname","target","value","onChangeEmail","onClickEmailVerify","config","headers","Accept","enctype","JSON","stringify","post","onClickLocalButton","then","res","data","createdUser","auth","createUserWithEmailAndPassword","user","updateProfile","displayName","database","ref","child","uid","set","type","isInMypage","catch","err","response","error","name","onPushBack","onSocialRegisterSubmit","alert","console","log","message","SignedInUser","signInWithEmailAndPassword","push","length","match","query","textAlign","fontSize","fontWeight","marginBottom","color","required","whitespace","getFieldValue","validator","_","Promise","resolve","reject","min","background","border","margin","textDecoration"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,KAPF,EAQEC,MARF,QASO,MATP;AAUA,SACEC,YADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,aAJF,QAKO,mBALP;AAMA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,EAAE,EAAE;AACFC,MAAAA,IAAI,EAAE;AADJ,KADI;AAIRC,IAAAA,EAAE,EAAE;AACFD,MAAAA,IAAI,EAAE;AADJ;AAJI,GADW;AASrBE,EAAAA,UAAU,EAAE;AACVH,IAAAA,EAAE,EAAE;AACFC,MAAAA,IAAI,EAAE;AADJ,KADM;AAIVC,IAAAA,EAAE,EAAE;AACFD,MAAAA,IAAI,EAAE;AADJ;AAJM;AATS,CAAvB;AAmBA,MAAMG,mBAAmB,GAAGlB,MAAM,CAACZ,IAAD,CAAT;AAAA;AAAA;AAAA,kGAAzB;AAWA,MAAM+B,wBAAwB,GAAGnB,MAAM,CAACZ,IAAI,CAACgC,IAAN,CAAT;AAAA;AAAA;AAAA,+FAA9B;AAWA,MAAMC,cAAc,GAAGrB,MAAM,CAACe,IAAV;AAAA;AAAA;AAAA,2EAApB;AAOA,MAAMO,aAAa,GAAGtB,MAAM,CAACR,OAAD,CAAT;AAAA;AAAA;AAAA,QAAnB;AAEA,MAAM+B,QAAQ,GAAG,IAAIb,QAAJ,EAAjB;;AACA,MAAMc,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACxC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYvB,WAAW,CAAEwB,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAA7B,CAHwC,CAKxC;;AAEA,QAAM,CAACE,IAAD,IAASxC,IAAI,CAACyC,OAAL,EAAf;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsB7C,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAA,OAAC8C,YAAD;AAAA,OAAeC;AAAf,MAAkC/C,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM;AAAA,OAACgD,QAAD;AAAA,OAAWC;AAAX,MAA0BjD,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACkD,UAAD;AAAA,OAAaC;AAAb,MAA8BnD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACoD,SAAD;AAAA,OAAYC;AAAZ,MAA4BrD,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACsD,kBAAD;AAAA,OAAqBC;AAArB,MAA8CvD,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM;AAAA,OAACwD,eAAD;AAAA,OAAkBC;AAAlB,MAAwCzD,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAAC0D,aAAD;AAAA,OAAgBC;AAAhB,MAAoC3D,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAAC4D,eAAD;AAAA,OAAkBC;AAAlB,MAAwC7D,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAAC8D,SAAD;AAAA,OAAYC;AAAZ,MAA4B/D,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACgE,QAAD;AAAA,OAAWC;AAAX,MAA0BjE,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACkE,KAAD;AAAA,OAAQC;AAAR,MAAoBnE,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoE,YAAD,EAAeC,oBAAf,IAAuClD,QAAQ,CAAC,EAAD,CAArD;AACA,QAAM,CAACmD,QAAD,EAAWC,gBAAX,IAA+BpD,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACqD,eAAD,EAAkBC,uBAAlB,IAA6CtD,QAAQ,CAAC,EAAD,CAA3D;AACA,QAAM,CAACuD,SAAD,EAAYC,iBAAZ,IAAiCxD,QAAQ,CAAC,EAAD,CAA/C,CAvBwC,CAyBxC;;AAEA,QAAMyD,QAAQ,GAAIC,CAAD,IAAO;AACtB,QAAIA,CAAC,CAACC,IAAF,CAAOC,MAAP,KAAkB,MAAtB,EAA8B;AAC5B1C,MAAAA,QAAQ,CAAC2C,MAAT,CAAgB,QAAhB,EAA0BH,CAAC,CAACI,QAAF,CAAW,CAAX,EAAcC,aAAxC;AACD,KAFD,MAEO,IAAIL,CAAC,CAACC,IAAF,CAAOC,MAAP,KAAkB,SAAtB,EAAiC;AACtC1C,MAAAA,QAAQ,CAAC8C,MAAT,CAAgB,QAAhB;AACD;;AACD,QAAIF,QAAQ,GAAGJ,CAAC,CAACI,QAAjB;AACAA,IAAAA,QAAQ,GAAGA,QAAQ,CAACG,KAAT,CAAe,CAAC,CAAhB,CAAX;;AACA,QAAIC,KAAK,CAACC,OAAN,CAAcT,CAAd,CAAJ,EAAsB;AACpB,aAAOA,CAAP;AACD;;AACD,WAAOA,CAAC,IAAII,QAAZ;AACD,GAZD,CA3BwC,CAyCxC;;;AAEA,QAAMM,gBAAgB,GAAGxF,WAAW,CAAE8E,CAAD,IAAO;AAC1CZ,IAAAA,WAAW,CAACY,CAAC,CAACW,MAAF,CAASC,KAAV,CAAX;AACAlC,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAHmC,EAGjC,EAHiC,CAApC;AAKA,QAAMmC,aAAa,GAAG3F,WAAW,CAAE8E,CAAD,IAAO;AACvCV,IAAAA,QAAQ,CAACU,CAAC,CAACW,MAAF,CAASC,KAAV,CAAR;AACAhC,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAHgC,EAG9B,EAH8B,CAAjC;AAKA,QAAMkC,kBAAkB,GAAG5F,WAAW,CAAC,MAAM;AAC3CkD,IAAAA,WAAW,CAAC,CAAD,CAAX;AACA,UAAM2C,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEPC,QAAAA,OAAO,EAAE;AAFF;AADI,KAAf;AAMA1D,IAAAA,QAAQ,CAAC2C,MAAT,CAAgB,MAAhB,EAAwB,OAAxB;AACA3C,IAAAA,QAAQ,CAAC2C,MAAT,CAAgB,IAAhB,EAAsBpC,MAAtB;AACAP,IAAAA,QAAQ,CAAC2C,MAAT,CAAgB,WAAhB,EAA6BgB,IAAI,CAACC,SAAL,CAAezD,KAAf,CAA7B;AACAH,IAAAA,QAAQ,CAAC2C,MAAT,CAAgB,WAAhB,EAA6BN,SAA7B;AACApD,IAAAA,KAAK,CAAC4E,IAAN,CAAW,sBAAX,EAAmC7D,QAAnC,EAA6CuD,MAA7C;AACD,GAbqC,EAanC,CAAChD,MAAD,EAASJ,KAAT,EAAgBkC,SAAhB,CAbmC,CAAtC;AAeA,QAAMyB,kBAAkB,GAAGpG,WAAW,CAAC,YAAY;AACjD,QAAIqD,SAAJ,EAAe;AACf,UAAM9B,KAAK,CACR4E,IADG,CACE,WADF,EACe;AAAEhC,MAAAA,KAAF;AAASF,MAAAA,QAAT;AAAmBM,MAAAA;AAAnB,KADf,EAEH8B,IAFG,CAEE,MAAOC,GAAP,IAAe;AACnBxD,MAAAA,SAAS,CAACwD,GAAG,CAACC,IAAJ,CAAS1D,MAAV,CAAT;AACAa,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAF,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAR,MAAAA,eAAe,CAAC,OAAD,CAAf;AACAE,MAAAA,WAAW,CAAC,CAAD,CAAX;AAEAY,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA,UAAI0C,WAAW,GAAG,MAAM9E,QAAQ,CAC7B+E,IADqB,GAErBC,8BAFqB,CAEUvC,KAFV,EAEiBA,KAFjB,CAAxB;AAIA,YAAMqC,WAAW,CAACG,IAAZ,CAAiBC,aAAjB,CAA+B;AACnCC,QAAAA,WAAW,EAAE5C;AADsB,OAA/B,CAAN;AAGA,YAAMvC,QAAQ,CAACoF,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,EAAiCC,KAAjC,CAAuCR,WAAW,CAACG,IAAZ,CAAiBM,GAAxD,EAA6DC,GAA7D,CAAiE;AACrEjD,QAAAA,QAAQ,EAAEuC,WAAW,CAACG,IAAZ,CAAiBE,WAD0C;AAErE1C,QAAAA,KAAK,EAAEqC,WAAW,CAACG,IAAZ,CAAiBxC,KAF6C;AAGrEgD,QAAAA,IAAI,EAAE,OAH+D;AAIrEC,QAAAA,UAAU,EAAE;AAJyD,OAAjE,CAAN;AAMD,KAvBG,EAwBHC,KAxBG,CAwBIC,GAAD,IAAS;AACd,UAAIA,GAAG,CAACC,QAAJ,CAAahB,IAAb,CAAkBiB,KAAlB,CAAwBC,IAAxB,KAAiC,iBAArC,EAAwD;AACtD/D,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,OAFD,MAEO;AACLF,QAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;AACF,KA9BG,CAAN;AA+BD,GAjCqC,EAiCnC,CAACH,SAAD,EAAYc,KAAZ,EAAmBF,QAAnB,EAA6BM,QAA7B,CAjCmC,CAAtC;AAmCA,QAAMmD,UAAU,GAAG1H,WAAW,CAAC,MAAM;AACnCgD,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,WAAW,CAAC,CAAD,CAAX;AACD,GAH6B,EAG3B,EAH2B,CAA9B;AAKA,QAAMyE,sBAAsB,GAAG3H,WAAW,CACvC8E,CAAD,IAAO;AACL,QAAIb,QAAQ,KAAK,EAAjB,EAAqB;AACnB2D,MAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD;;AACD,QAAIjE,aAAa,IAAIQ,KAAK,KAAK,EAA/B,EAAmC;AACjC0D,MAAAA,OAAO,CAACC,GAAR,CAAYnE,aAAZ,EAA2BQ,KAA3B;AACAyD,MAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD;;AACD,UAAM/B,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEPC,QAAAA,OAAO,EAAE;AAFF;AADI,KAAf;;AAOA,QAAIrC,aAAJ,EAAmB;AACjBrB,MAAAA,QAAQ,CAAC2C,MAAT,CAAgB,MAAhB,EAAwB,OAAxB;AACA3C,MAAAA,QAAQ,CAAC2C,MAAT,CAAgB,UAAhB,EAA4BhB,QAA5B;AACA3B,MAAAA,QAAQ,CAAC2C,MAAT,CAAgB,WAAhB,EAA6BgB,IAAI,CAACC,SAAL,CAAezD,KAAf,CAA7B;AACAH,MAAAA,QAAQ,CAAC2C,MAAT,CAAgB,WAAhB,EAA6BN,SAA7B;AACArC,MAAAA,QAAQ,CAAC2C,MAAT,CAAgB,OAAhB,EAAyBd,KAAzB;AACA5C,MAAAA,KAAK,CACF4E,IADH,CACQ,sBADR,EACgC7D,QADhC,EAC0CuD,MAD1C,EAEGQ,IAFH,CAEQ,MAAOC,GAAP,IAAe;AACnB,YAAIA,GAAG,CAACC,IAAJ,CAASwB,OAAT,KAAqB,wBAAzB,EAAmD;AACjDrE,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACApB,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,MAAhB;AACA9C,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,UAAhB;AACA9C,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,WAAhB;AACA9C,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,WAAhB;AACA9C,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,OAAhB;AACA;AACD,SARD,MAQO,IAAIkB,GAAG,CAACC,IAAJ,CAASwB,OAAT,KAAqB,2BAAzB,EAAsD;AAC3DvE,UAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAlB,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,MAAhB;AACA9C,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,UAAhB;AACA9C,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,WAAhB;AACA9C,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,WAAhB;AACA9C,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,OAAhB;AACA;AACD;;AAED5B,QAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAE,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAR,QAAAA,WAAW,CAAC,CAAD,CAAX;AAEA,YAAIsD,WAAW,GAAG,MAAM9E,QAAQ,CAC7B+E,IADqB,GAErBC,8BAFqB,CAEUvC,KAFV,EAEiBA,KAFjB,CAAxB;AAIA,cAAMqC,WAAW,CAACG,IAAZ,CAAiBC,aAAjB,CAA+B;AACnCC,UAAAA,WAAW,EAAE5C;AADsB,SAA/B,CAAN;AAGA,cAAMvC,QAAQ,CACXoF,QADG,GAEHC,GAFG,CAEC,OAFD,EAGHC,KAHG,CAGGR,WAAW,CAACG,IAAZ,CAAiBM,GAHpB,EAIHC,GAJG,CAIC;AACHjD,UAAAA,QAAQ,EAAEuC,WAAW,CAACG,IAAZ,CAAiBE,WADxB;AAEHM,UAAAA,IAAI,EAAE,QAFH;AAGHC,UAAAA,UAAU,EAAE;AAHT,SAJD,CAAN;AASD,OAzCH,EA2CGC,KA3CH,CA2CUG,KAAD,IAAW;AAChBK,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAI,QAAAA,KAAK,CAAC,QAAD,CAAL;AACAtF,QAAAA,QAAQ,CAAC8C,MAAT,CAAgB,MAAhB;AACA9C,QAAAA,QAAQ,CAAC8C,MAAT,CAAgB,UAAhB;AACA9C,QAAAA,QAAQ,CAAC8C,MAAT,CAAgB,WAAhB;AACA9C,QAAAA,QAAQ,CAAC8C,MAAT,CAAgB,WAAhB;AACA9C,QAAAA,QAAQ,CAAC8C,MAAT,CAAgB,OAAhB;AACD,OAnDH;AAoDD,KA1DD,MA0DO;AACL9C,MAAAA,QAAQ,CAAC2C,MAAT,CAAgB,MAAhB,EAAwB,KAAxB;AACA3C,MAAAA,QAAQ,CAAC2C,MAAT,CAAgB,UAAhB,EAA4BhB,QAA5B;AACA3B,MAAAA,QAAQ,CAAC2C,MAAT,CAAgB,WAAhB,EAA6BgB,IAAI,CAACC,SAAL,CAAezD,KAAf,CAA7B;AACAH,MAAAA,QAAQ,CAAC2C,MAAT,CAAgB,WAAhB,EAA6BN,SAA7B;AACApD,MAAAA,KAAK,CACF4E,IADH,CACQ,sBADR,EACgC7D,QADhC,EAC0CuD,MAD1C,EAEGQ,IAFH,CAEQ,MAAOC,GAAP,IAAe;AACnB,YAAIA,GAAG,CAACC,IAAJ,CAASwB,OAAT,KAAqB,2BAAzB,EAAsD;AACpDvE,UAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAlB,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,MAAhB;AACA9C,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,UAAhB;AACA9C,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,WAAhB;AACA9C,UAAAA,QAAQ,CAAC8C,MAAT,CAAgB,WAAhB;AACA;AACD;;AAED5B,QAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAM,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AAEA,YAAI0C,WAAW,GAAG,MAAM9E,QAAQ,CAC7B+E,IADqB,GAErBC,8BAFqB,CAGpBJ,GAAG,CAACC,IAAJ,CAASI,IAAT,CAAcxC,KAHM,EAIpBmC,GAAG,CAACC,IAAJ,CAASI,IAAT,CAAcxC,KAJM,CAAxB;AAOA,cAAMqC,WAAW,CAACG,IAAZ,CAAiBC,aAAjB,CAA+B;AACnCC,UAAAA,WAAW,EAAE5C;AADsB,SAA/B,CAAN;AAIA,cAAMvC,QAAQ,CACXoF,QADG,GAEHC,GAFG,CAEC,OAFD,EAGHC,KAHG,CAGGR,WAAW,CAACG,IAAZ,CAAiBM,GAHpB,EAIHC,GAJG,CAIC;AACH/C,UAAAA,KAAK,EAAEqC,WAAW,CAACG,IAAZ,CAAiBxC,KADrB;AAEHF,UAAAA,QAAQ,EAAEuC,WAAW,CAACG,IAAZ,CAAiBE,WAFxB;AAGHM,UAAAA,IAAI,EAAE,QAHH;AAIHC,UAAAA,UAAU,EAAE;AAJT,SAJD,CAAN;AAWA,YAAIY,YAAY,GAAG,MAAMtG,QAAQ,CAC9B+E,IADsB,GAEtBwB,0BAFsB,CAGrB3B,GAAG,CAACC,IAAJ,CAASI,IAAT,CAAcxC,KAHO,EAIrBmC,GAAG,CAACC,IAAJ,CAASI,IAAT,CAAcxC,KAJO,CAAzB;AAMAL,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAtB,QAAAA,MAAM,CAAC0F,IAAP,CAAY,GAAZ;AACD,OA7CH,EA8CGb,KA9CH,CA8CUG,KAAD,IAAW;AAChBI,QAAAA,KAAK,CAAC,QAAD,CAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAlF,QAAAA,QAAQ,CAAC8C,MAAT,CAAgB,MAAhB;AACA9C,QAAAA,QAAQ,CAAC8C,MAAT,CAAgB,UAAhB;AACA9C,QAAAA,QAAQ,CAAC8C,MAAT,CAAgB,WAAhB;AACA9C,QAAAA,QAAQ,CAAC8C,MAAT,CAAgB,WAAhB;AACD,OArDH;AAsDD;AACF,GAxIuC,EA0IxC,CAACnB,QAAD,EAAWxB,KAAX,EAAkBkC,SAAlB,CA1IwC,CAA1C,CA5GwC,CAyPxC;;AAEAzE,EAAAA,SAAS,CAAC,MAAM;AACd,QACE+D,QAAQ,CAACkE,MAAT,KAAoB,CAApB,IACAhE,KAAK,CAACgE,MAAN,KAAiB,CADjB,IAEA9D,YAAY,CAAC8D,MAAb,KAAwB,CAFxB,IAGA5D,QAAQ,CAAC4D,MAAT,KAAoB,CAHpB,IAIA5D,QAAQ,CAAC4D,MAAT,IAAmB,CAJnB,IAKA1D,eAAe,CAAC0D,MAAhB,KAA2B,CAL3B,IAMA5D,QAAQ,KAAKE,eANb,IAOAN,KAAK,KAAKE,YAPV,IAQAF,KAAK,CAACiE,KAAN,CAAY9G,UAAZ,CATF,EAUE;AACAgC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAZD,MAYO;AACLA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAhBQ,EAgBN,CAACW,QAAD,EAAWE,KAAX,EAAkBE,YAAlB,EAAgCE,QAAhC,EAA0CE,eAA1C,CAhBM,CAAT;AAkBAvE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsC,MAAM,CAAC6F,KAAP,CAAalB,IAAb,KAAsB,KAA1B,EAAiC;AAC/BjE,MAAAA,WAAW,CAAC,CAAD,CAAX;AACAF,MAAAA,eAAe,CAAC,QAAD,CAAf;AACD,KAHD,MAGO,IAAIR,MAAM,CAAC6F,KAAP,CAAalB,IAAb,KAAsB,OAA1B,EAAmC;AACxCjE,MAAAA,WAAW,CAAC,CAAD,CAAX;AACAF,MAAAA,eAAe,CAAC,QAAD,CAAf;AACAY,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AACF,GATQ,EASN,CAACpB,MAAD,CATM,CAAT;AAWA,sBACE,QAAC,mBAAD,kCAAyBb,cAAzB;AAAyC,IAAA,IAAI,EAAEgB,IAA/C;AAAqD,IAAA,IAAI,EAAC,UAA1D;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AACL2F,QAAAA,SAAS,EAAE,QADN;AAELC,QAAAA,QAAQ,EAAE,MAFL;AAGLC,QAAAA,UAAU,EAAE,MAHP;AAILC,QAAAA,YAAY,EAAE;AAJT,OADT;AAAA,6BAQE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA,+BACE;AAAG,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,SAAT;AAAoBF,YAAAA,UAAU,EAAE;AAAhC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,KAAD;AACE,MAAA,OAAO,EAAEvF,QADX;AAEE,MAAA,QAAQ,EAAEC,WAFZ;AAGE,MAAA,KAAK,EAAE;AAAEuF,QAAAA,YAAY,EAAE;AAAhB,OAHT;AAAA,8BAKE,QAAC,KAAD,CAAO,IAAP;AAAY,QAAA,KAAK,EAAC,0BAAlB;AAAyB,QAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAA/B;AAAiD,QAAA,QAAQ;AAAzD;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,KAAD,CAAO,IAAP;AAAY,QAAA,KAAK,EAAC,0BAAlB;AAAyB,QAAA,IAAI,eAAE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBAA/B;AAAqD,QAAA,QAAQ;AAA7D;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,KAAD,CAAO,IAAP;AAAY,QAAA,KAAK,EAAC,cAAlB;AAAuB,QAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAgD,QAAA,QAAQ;AAAxD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAsBGxF,QAAQ,IAAI,CAAZ,iBACC;AAAA,iBACGM,kBAAkB,gBACjB,QAAC,wBAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAC,oBAFR;AAGE,QAAA,cAAc,EAAC,OAHjB;AAIE,QAAA,IAAI,EAAC,6EAJP;AAKE,QAAA,KAAK,EAAE,CACL;AACEoF,UAAAA,QAAQ,EAAE,IADZ;AAEEZ,UAAAA,OAAO,EAAE,cAFX;AAGEa,UAAAA,UAAU,EAAE;AAHd,SADK,CALT;AAYE,QAAA,QAAQ,EAAEpD,gBAZZ;AAAA,+BAcE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,cADiB,gBAkBjB,QAAC,wBAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAC,oBAFR;AAGE,QAAA,KAAK,EAAE,CACL;AACEmD,UAAAA,QAAQ,EAAE,IADZ;AAEEZ,UAAAA,OAAO,EAAE,cAFX;AAGEa,UAAAA,UAAU,EAAE;AAHd,SADK,CAHT;AAUE,QAAA,QAAQ,EAAEpD,gBAVZ;AAAA,+BAYE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,cAnBJ,EAmCG/B,eAAe,gBACd,QAAC,wBAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,oBAFR;AAGE,QAAA,cAAc,EAAC,OAHjB;AAIE,QAAA,IAAI,EAAC,6EAJP;AAKE,QAAA,KAAK,EAAE,CACL;AACE0D,UAAAA,IAAI,EAAE,OADR;AAEEY,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL;AACEY,UAAAA,QAAQ,EAAE,IADZ;AAEEZ,UAAAA,OAAO,EAAE;AAFX,SALK,CALT;AAeE,QAAA,QAAQ,EAAEpC,aAfZ;AAAA,+BAiBE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAjBF;AAAA;AAAA;AAAA;AAAA,cADc,gBAqBd,QAAC,wBAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,oBAFR;AAGE,QAAA,KAAK,EAAE,CACL;AACEwB,UAAAA,IAAI,EAAE,OADR;AAEEY,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL;AACEY,UAAAA,QAAQ,EAAE,IADZ;AAEEZ,UAAAA,OAAO,EAAE;AAFX,SALK,CAHT;AAaE,QAAA,QAAQ,EAAEpC,aAbZ;AAAA,+BAeE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,cAxDJ,eA0EE,QAAC,wBAAD;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,KAAK,EAAC,iCAFR;AAGE,QAAA,KAAK,EAAE,CACL;AACEgD,UAAAA,QAAQ,EAAE,IADZ;AAEEZ,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL,CAAC;AAAEc,UAAAA;AAAF,SAAD,MAAwB;AACtBC,UAAAA,SAAS,CAACC,CAAD,EAAIrD,KAAJ,EAAW;AAClB,gBAAI,CAACA,KAAD,IAAUmD,aAAa,CAAC,OAAD,CAAb,KAA2BnD,KAAzC,EAAgD;AAC9C,qBAAOsD,OAAO,CAACC,OAAR,EAAP;AACD;;AAED,mBAAOD,OAAO,CAACE,MAAR,CAAe,iBAAf,CAAP;AACD;;AAPqB,SAAxB,CALK,CAHT;AAkBE,QAAA,QAAQ,EAAE5E,oBAlBZ;AAAA,+BAoBE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AApBF;AAAA;AAAA;AAAA;AAAA,cA1EF,eAgGE,QAAC,wBAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAC,0BAFR;AAGE,QAAA,KAAK,EAAE,CACL;AACEqE,UAAAA,QAAQ,EAAE,IADZ;AAEEZ,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL;AACEoB,UAAAA,GAAG,EAAE,CADP;AAEEpB,UAAAA,OAAO,EAAE;AAFX,SALK,CAHT;AAaE,QAAA,WAAW,MAbb;AAcE,QAAA,QAAQ,EAAEvD,gBAdZ;AAAA,+BAgBE,QAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AAhBF;AAAA;AAAA;AAAA;AAAA,cAhGF,eAkHE,QAAC,wBAAD;AACE,QAAA,IAAI,EAAC,iBADP;AAEE,QAAA,KAAK,EAAC,uCAFR;AAGE,QAAA,YAAY,EAAE,CAAC,UAAD,CAHhB;AAIE,QAAA,WAAW,MAJb;AAKE,QAAA,KAAK,EAAE,CACL;AACEmE,UAAAA,QAAQ,EAAE,IADZ;AAEEZ,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL,CAAC;AAAEc,UAAAA;AAAF,SAAD,MAAwB;AACtBC,UAAAA,SAAS,CAACC,CAAD,EAAIrD,KAAJ,EAAW;AAClB,gBAAI,CAACA,KAAD,IAAUmD,aAAa,CAAC,UAAD,CAAb,KAA8BnD,KAA5C,EAAmD;AACjD,qBAAOsD,OAAO,CAACC,OAAR,EAAP;AACD;;AAED,mBAAOD,OAAO,CAACE,MAAR,CAAe,kBAAf,CAAP;AACD;;AAPqB,SAAxB,CALK,CALT;AAoBE,QAAA,QAAQ,EAAExE,uBApBZ;AAAA,+BAsBE,QAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AAtBF;AAAA;AAAA;AAAA;AAAA,cAlHF,eA2IE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,QAAQ,EAAC,QAFX;AAGE,UAAA,OAAO,EAAE0B,kBAHX;AAIE,UAAA,KAAK,EAAE;AACLgD,YAAAA,UAAU,EAAE,SADP;AAELV,YAAAA,KAAK,EAAE,MAFF;AAGLW,YAAAA,MAAM,EAAE;AAHH,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3IF,eA0JE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1JF,eA2JE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cA3JF;AAAA,oBAvBJ,EAqLGpG,QAAQ,IAAI,CAAZ,IAAiBF,YAAY,IAAI,OAAjC,iBACC;AAAA,8BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,wBAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,WAAW,MAHb;AAIE,QAAA,QAAQ,EAAE6B,iBAJZ;AAAA,+BAME,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAHF,eAWE,QAAC,wBAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,oDAFR;AAGE,QAAA,aAAa,EAAC,UAHhB;AAIE,QAAA,iBAAiB,EAAEC,QAJrB;AAAA,+BAME,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,MAAb;AAAoB,UAAA,QAAQ,EAAC,SAA7B;AAAuC,UAAA,MAAM,EAAC,SAA9C;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,KAAK,EAAE;AACLuE,cAAAA,UAAU,EAAE,SADP;AAELV,cAAAA,KAAK,EAAE,MAFF;AAGLW,cAAAA,MAAM,EAAE;AAHH,aADT;AAME,YAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,oBANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAXF,eA8BE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cA9BF,eA+BE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAEf,UAAAA,SAAS,EAAE;AAAb,SAAlC;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,OAAO,EAAE1C,kBAFX;AAGE,UAAA,KAAK,EAAE;AACLwD,YAAAA,UAAU,EAAE,SADP;AAELV,YAAAA,KAAK,EAAE,MAFF;AAGLW,YAAAA,MAAM,EAAE;AAHH,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA/BF,eA4CE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE3B,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CF;AAAA,oBAtLJ,EAqOGzE,QAAQ,IAAI,CAAZ,IAAiBF,YAAY,IAAI,QAAjC,iBACC;AAAA,iBACGQ,kBAAkB,gBACjB;AAAA,+BACE,QAAC,wBAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAC,oBAFR;AAGE,UAAA,cAAc,EAAC,OAHjB;AAIE,UAAA,IAAI,EAAC,6EAJP;AAKE,UAAA,WAAW,MALb;AAME,UAAA,KAAK,EAAE,CACL;AACEoF,YAAAA,QAAQ,EAAE,IADZ;AAEEZ,YAAAA,OAAO,EAAE,cAFX;AAGEa,YAAAA,UAAU,EAAE;AAHd,WADK,CANT;AAaE,UAAA,QAAQ,EAAEpD,gBAbZ;AAAA,iCAeE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA;AADF,uBADiB,gBAqBjB;AAAA,+BACE,QAAC,wBAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAC,oBAFR;AAGE,UAAA,WAAW,MAHb;AAIE,UAAA,KAAK,EAAE,CACL;AACEmD,YAAAA,QAAQ,EAAE,IADZ;AAEEZ,YAAAA,OAAO,EAAE,cAFX;AAGEa,YAAAA,UAAU,EAAE;AAHd,WADK,CAJT;AAWE,UAAA,QAAQ,EAAEpD,gBAXZ;AAAA,iCAaE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA;AADF,uBAtBJ,EAwCG7B,aAAa,iBACZ;AAAA,kBACGF,eAAe,gBACd,QAAC,wBAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,KAAK,EAAC,oBAFR;AAGE,UAAA,cAAc,EAAC,OAHjB;AAIE,UAAA,IAAI,EAAC,6EAJP;AAKE,UAAA,WAAW,MALb;AAME,UAAA,KAAK,EAAE,CACL;AACEkF,YAAAA,QAAQ,EAAE,IADZ;AAEEZ,YAAAA,OAAO,EAAE,cAFX;AAGEa,YAAAA,UAAU,EAAE;AAHd,WADK,CANT;AAAA,iCAcE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAC,OAAnB;AAA2B,YAAA,QAAQ,EAAEjD;AAArC;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,gBADc,gBAkBd,QAAC,wBAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,KAAK,EAAC,oBAFR;AAGE,UAAA,WAAW,MAHb;AAIE,UAAA,KAAK,EAAE,CACL;AACEgD,YAAAA,QAAQ,EAAE,IADZ;AAEEZ,YAAAA,OAAO,EAAE,cAFX;AAGEa,YAAAA,UAAU,EAAE;AAHd,WADK,CAJT;AAAA,iCAYE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAC,OAAnB;AAA2B,YAAA,QAAQ,EAAEjD;AAArC;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA;AAnBJ,uBAzCJ,eA8EE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9EF,eA+EE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cA/EF,eAgFE,QAAC,wBAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,WAAW,MAHb;AAIE,QAAA,QAAQ,EAAEf,iBAJZ;AAAA,+BAME,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAhFF,eAwFE,QAAC,wBAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,oDAFR;AAGE,QAAA,aAAa,EAAC,UAHhB;AAIE,QAAA,iBAAiB,EAAEC,QAJrB;AAAA,+BAME,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,MAAb;AAAoB,UAAA,QAAQ,EAAC,SAA7B;AAAuC,UAAA,MAAM,EAAC,SAA9C;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAxFF,eAkGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAlGF,eAmGE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAEyD,UAAAA,SAAS,EAAE;AAAb,SAAlC;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,OAAO,EAAEX,sBAFX;AAGE,UAAA,KAAK,EAAE;AACLyB,YAAAA,UAAU,EAAE,SADP;AAELV,YAAAA,KAAK,EAAE,MAFF;AAGLW,YAAAA,MAAM,EAAE;AAHH,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnGF,EAgHGxF,eAAe,iBACd;AAAK,QAAA,KAAK,EAAE;AAAEyE,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjHJ,eAmHE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAEZ,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnHF;AAAA,oBAtOJ,EA4VGzE,QAAQ,IAAI,CAAZ,iBACC;AAAA,8BACE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,MAAM,EAAC,SADT;AAEE,UAAA,KAAK,EAAG,GAAEkB,KAAM;AAC9B;AAHY;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,KAAK,EAAE;AAAEoE,UAAAA,QAAQ,EAAE,MAAZ;AAAoBD,UAAAA,SAAS,EAAE;AAA/B,SAAZ;AAAA,oMACyC,GADzC;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAWE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,MADL;AAELD,UAAAA,SAAS,EAAE,QAFN;AAGLgB,UAAAA,MAAM,EAAE,QAHH;AAILZ,UAAAA,KAAK,EAAE;AAJF,SADT;AAAA,gCAQE;AAAM,UAAA,KAAK,EAAE;AAAEA,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,mNAWE;AAAM,UAAA,KAAK,EAAE;AAAEA,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAyBE;AACE,QAAA,KAAK,EAAE;AACLH,UAAAA,QAAQ,EAAE,MADL;AAELD,UAAAA,SAAS,EAAE,QAFN;AAGLgB,UAAAA,MAAM,EAAE,QAHH;AAILC,UAAAA,cAAc,EAAE;AAJX,SADT;AAAA,+BAQE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,aAAX;AAAA,iCACE;AAAG,YAAA,KAAK,EAAE;AAAEb,cAAAA,KAAK,EAAE;AAAT,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7VJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuYD,CA/pBD;;AAiqBA,eAAelH,UAAU,CAACe,iBAAD,CAAzB","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  Form,\n  Input,\n  Select,\n  Button,\n  Divider,\n  Upload,\n  Steps,\n  Result,\n} from \"antd\";\nimport {\n  UserOutlined,\n  UploadOutlined,\n  SolutionOutlined,\n  SmileOutlined,\n} from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SocialTemplate from \"../common/auth/SocialTemplate\";\nimport useInput from \"../../hooks/useInput\";\nimport SkillFilterForm from \"../common/contents/SkillFilterForm\";\nimport { EmailRegex } from \"../../lib/constant/constant\";\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\nimport FormData from \"form-data\";\nimport firebase from \"../../firebase\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 회원가입 종합 컴포넌트\n */\n\n// style\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\n\nconst RegisterFormWrapper = styled(Form)`\n  .register-btn {\n    margin: 20px 0;\n    text-align: center;\n  }\n  .ant-divider {\n    font-size: 12px;\n    margin: 50px 0;\n  }\n`;\n\nconst RegisterInputItemWrapper = styled(Form.Item)`\n  .ant-form-item-label {\n    text-align: left;\n  }\n  .email-code {\n    width: 200px;\n  }\n  .ant-form-item-control {\n  }\n`;\n\nconst PushBackButton = styled.span`\n  color: #888;\n  font-size: 12px;\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\nconst StyledDivider = styled(Divider)``;\n\nconst formData = new FormData();\nconst RegisterInputForm = ({ router }) => {\n  // redux\n\n  const { skill } = useSelector((state) => state.skill);\n\n  // local state\n\n  const [form] = Form.useForm();\n  const [userId, setUserId] = useState(null);\n  const [registerType, setRegisterType] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [socialType, setSocialType] = useState(\"\");\n  const [formError, setFormError] = useState(true);\n  const [nicknameExistError, setNicknameExistError] = useState(false);\n  const [emailExistError, setEmailExistError] = useState(false);\n  const [noneEmailUser, setNoneEmailUser] = useState(false);\n  const [firebaseLoading, setFirebaseLoading] = useState(false);\n  const [imageFile, setImageFile] = useState(null);\n  const [nickname, setNickname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [confirmEmail, onChangeConfirmEmail] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const [confirmPassword, onChangeConfirmPassword] = useInput(\"\");\n  const [githubUrl, onChangeGithubUrl] = useInput(\"\");\n\n  // helper method\n\n  const normFile = (e) => {\n    if (e.file.status === \"done\") {\n      formData.append(\"avatar\", e.fileList[0].originFileObj);\n    } else if (e.file.status === \"removed\") {\n      formData.delete(\"avatar\");\n    }\n    let fileList = e.fileList;\n    fileList = fileList.slice(-1);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && fileList;\n  };\n\n  // event listener\n\n  const onChangeNickname = useCallback((e) => {\n    setNickname(e.target.value);\n    setNicknameExistError(false);\n  }, []);\n\n  const onChangeEmail = useCallback((e) => {\n    setEmail(e.target.value);\n    setEmailExistError(false);\n  }, []);\n\n  const onClickEmailVerify = useCallback(() => {\n    setProgress(2);\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        enctype: \"multipart/form-data\",\n      },\n    };\n    formData.append(\"type\", \"local\");\n    formData.append(\"id\", userId);\n    formData.append(\"techStack\", JSON.stringify(skill));\n    formData.append(\"githubUrl\", githubUrl);\n    axios.post(\"/api/join/optionForm\", formData, config);\n  }, [userId, skill, githubUrl]);\n\n  const onClickLocalButton = useCallback(async () => {\n    if (formError) return;\n    await axios\n      .post(\"/api/join\", { email, nickname, password })\n      .then(async (res) => {\n        setUserId(res.data.userId);\n        setEmailExistError(false);\n        setNicknameExistError(false);\n        setRegisterType(\"local\");\n        setProgress(1);\n\n        setFirebaseLoading(true);\n        let createdUser = await firebase\n          .auth()\n          .createUserWithEmailAndPassword(email, email);\n\n        await createdUser.user.updateProfile({\n          displayName: nickname,\n        });\n        await firebase.database().ref(\"users\").child(createdUser.user.uid).set({\n          nickname: createdUser.user.displayName,\n          email: createdUser.user.email,\n          type: \"local\",\n          isInMypage: false,\n        });\n      })\n      .catch((err) => {\n        if (err.response.data.error.name === \"UserExistsError\") {\n          setEmailExistError(true);\n        } else {\n          setNicknameExistError(true);\n        }\n      });\n  }, [formError, email, nickname, password]);\n\n  const onPushBack = useCallback(() => {\n    setRegisterType(null);\n    setProgress(0);\n  }, []);\n\n  const onSocialRegisterSubmit = useCallback(\n    (e) => {\n      if (nickname === \"\") {\n        alert(\"닉네임을 입력해주세요.\");\n        return;\n      }\n      if (noneEmailUser && email === \"\") {\n        console.log(noneEmailUser, email);\n        alert(\"이메일을 입력해주세요.\");\n        return;\n      }\n      const config = {\n        headers: {\n          Accept: \"application/json\",\n          enctype: \"multipart/form-data\",\n        },\n      };\n\n      if (noneEmailUser) {\n        formData.append(\"type\", \"email\");\n        formData.append(\"nickname\", nickname);\n        formData.append(\"techStack\", JSON.stringify(skill));\n        formData.append(\"githubUrl\", githubUrl);\n        formData.append(\"email\", email);\n        axios\n          .post(\"/api/join/optionForm\", formData, config)\n          .then(async (res) => {\n            if (res.data.message === \"email is reduplication\") {\n              setEmailExistError(true);\n              formData.delete(\"type\");\n              formData.delete(\"nickname\");\n              formData.delete(\"techStack\");\n              formData.delete(\"githubUrl\");\n              formData.delete(\"email\");\n              return;\n            } else if (res.data.message === \"nickname is reduplication\") {\n              setNicknameExistError(true);\n              formData.delete(\"type\");\n              formData.delete(\"nickname\");\n              formData.delete(\"techStack\");\n              formData.delete(\"githubUrl\");\n              formData.delete(\"email\");\n              return;\n            }\n\n            setNicknameExistError(false);\n            setEmailExistError(false);\n            setProgress(2);\n\n            let createdUser = await firebase\n              .auth()\n              .createUserWithEmailAndPassword(email, email);\n\n            await createdUser.user.updateProfile({\n              displayName: nickname,\n            });\n            await firebase\n              .database()\n              .ref(\"users\")\n              .child(createdUser.user.uid)\n              .set({\n                nickname: createdUser.user.displayName,\n                type: \"social\",\n                isInMypage: false,\n              });\n          })\n\n          .catch((error) => {\n            console.log(error);\n            alert(\"에러 발생.\");\n            formData.delete(\"type\");\n            formData.delete(\"nickname\");\n            formData.delete(\"techStack\");\n            formData.delete(\"githubUrl\");\n            formData.delete(\"email\");\n          });\n      } else {\n        formData.append(\"type\", \"sns\");\n        formData.append(\"nickname\", nickname);\n        formData.append(\"techStack\", JSON.stringify(skill));\n        formData.append(\"githubUrl\", githubUrl);\n        axios\n          .post(\"/api/join/optionForm\", formData, config)\n          .then(async (res) => {\n            if (res.data.message === \"nickname is reduplication\") {\n              setNicknameExistError(true);\n              formData.delete(\"type\");\n              formData.delete(\"nickname\");\n              formData.delete(\"techStack\");\n              formData.delete(\"githubUrl\");\n              return;\n            }\n\n            setNicknameExistError(false);\n            setFirebaseLoading(true);\n\n            let createdUser = await firebase\n              .auth()\n              .createUserWithEmailAndPassword(\n                res.data.user.email,\n                res.data.user.email,\n              );\n\n            await createdUser.user.updateProfile({\n              displayName: nickname,\n            });\n\n            await firebase\n              .database()\n              .ref(\"users\")\n              .child(createdUser.user.uid)\n              .set({\n                email: createdUser.user.email,\n                nickname: createdUser.user.displayName,\n                type: \"social\",\n                isInMypage: false,\n              });\n\n            let SignedInUser = await firebase\n              .auth()\n              .signInWithEmailAndPassword(\n                res.data.user.email,\n                res.data.user.email,\n              );\n            setFirebaseLoading(false);\n            router.push(\"/\");\n          })\n          .catch((error) => {\n            alert(\"에러 발생.\");\n            console.log(error);\n            formData.delete(\"type\");\n            formData.delete(\"nickname\");\n            formData.delete(\"techStack\");\n            formData.delete(\"githubUrl\");\n          });\n      }\n    },\n\n    [nickname, skill, githubUrl],\n  );\n\n  // hooks\n\n  useEffect(() => {\n    if (\n      nickname.length !== 0 &&\n      email.length !== 0 &&\n      confirmEmail.length !== 0 &&\n      password.length !== 0 &&\n      password.length >= 8 &&\n      confirmPassword.length !== 0 &&\n      password === confirmPassword &&\n      email === confirmEmail &&\n      email.match(EmailRegex)\n    ) {\n      setFormError(false);\n    } else {\n      setFormError(true);\n    }\n  }, [nickname, email, confirmEmail, password, confirmPassword]);\n\n  useEffect(() => {\n    if (router.query.type === \"sns\") {\n      setProgress(1);\n      setRegisterType(\"social\");\n    } else if (router.query.type === \"email\") {\n      setProgress(1);\n      setRegisterType(\"social\");\n      setNoneEmailUser(true);\n    }\n  }, [router]);\n\n  return (\n    <RegisterFormWrapper {...formItemLayout} form={form} name=\"register\">\n      <div\n        style={{\n          textAlign: \"center\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\",\n          marginBottom: \"40px\",\n        }}\n      >\n        <Link href=\"/\">\n          <a style={{ color: \"#16172b\", fontWeight: \"300\" }}>CodePlat</a>\n        </Link>\n      </div>\n      <Steps\n        current={progress}\n        onChange={setProgress}\n        style={{ marginBottom: \"70px\" }}\n      >\n        <Steps.Step title=\"회원가입\" icon={<UserOutlined />} disabled />\n        <Steps.Step title=\"추가정보\" icon={<SolutionOutlined />} disabled />\n        <Steps.Step title=\"완료\" icon={<SmileOutlined />} disabled />\n      </Steps>\n      {progress == 0 && (\n        <>\n          {nicknameExistError ? (\n            <RegisterInputItemWrapper\n              name=\"nickname\"\n              label=\"닉네임\"\n              validateStatus=\"error\"\n              help=\"이미 존재하는 닉네임입니다.\"\n              rules={[\n                {\n                  required: true,\n                  message: \"닉네임을 입력해주세요.\",\n                  whitespace: true,\n                },\n              ]}\n              onChange={onChangeNickname}\n            >\n              <Input placeholder=\"nickname\" />\n            </RegisterInputItemWrapper>\n          ) : (\n            <RegisterInputItemWrapper\n              name=\"nickname\"\n              label=\"닉네임\"\n              rules={[\n                {\n                  required: true,\n                  message: \"닉네임을 입력해주세요.\",\n                  whitespace: true,\n                },\n              ]}\n              onChange={onChangeNickname}\n            >\n              <Input placeholder=\"nickname\" />\n            </RegisterInputItemWrapper>\n          )}\n\n          {emailExistError ? (\n            <RegisterInputItemWrapper\n              name=\"email\"\n              label=\"이메일\"\n              validateStatus=\"error\"\n              help=\"이미 존재하는 이메일입니다.\"\n              rules={[\n                {\n                  type: \"email\",\n                  message: \"이메일 형식으로 입력해 주세요.\",\n                },\n                {\n                  required: true,\n                  message: \"이메일을 입력해주세요.\",\n                },\n              ]}\n              onChange={onChangeEmail}\n            >\n              <Input placeholder=\"email\" />\n            </RegisterInputItemWrapper>\n          ) : (\n            <RegisterInputItemWrapper\n              name=\"email\"\n              label=\"이메일\"\n              rules={[\n                {\n                  type: \"email\",\n                  message: \"이메일 형식으로 입력해 주세요.\",\n                },\n                {\n                  required: true,\n                  message: \"이메일을 입력해주세요.\",\n                },\n              ]}\n              onChange={onChangeEmail}\n            >\n              <Input placeholder=\"email\" />\n            </RegisterInputItemWrapper>\n          )}\n          <RegisterInputItemWrapper\n            name=\"confirmEmail\"\n            label=\"이메일 확인\"\n            rules={[\n              {\n                required: true,\n                message: \"이메일 확인을 입력해주세요.\",\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"email\") === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(\"이메일이 일치하지 않습니다.\");\n                },\n              }),\n            ]}\n            onChange={onChangeConfirmEmail}\n          >\n            <Input placeholder=\"confirm email\" />\n          </RegisterInputItemWrapper>\n          <RegisterInputItemWrapper\n            name=\"password\"\n            label=\"비밀번호\"\n            rules={[\n              {\n                required: true,\n                message: \"비밀번호를 입력해주세요.\",\n              },\n              {\n                min: 8,\n                message: \"8자리 이상 비밀번호를 입력해주세요.\",\n              },\n            ]}\n            hasFeedback\n            onChange={onChangePassword}\n          >\n            <Input.Password placeholder=\"password\" />\n          </RegisterInputItemWrapper>\n          <RegisterInputItemWrapper\n            name=\"confirmpassword\"\n            label=\"비밀번호 확인\"\n            dependencies={[\"password\"]}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: \"비밀번호를 입력해주세요.\",\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(\"비밀번호가 일치하지 않습니다.\");\n                },\n              }),\n            ]}\n            onChange={onChangeConfirmPassword}\n          >\n            <Input.Password placeholder=\"confirm password\" />\n          </RegisterInputItemWrapper>\n\n          <div className=\"register-btn\">\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              onClick={onClickLocalButton}\n              style={{\n                background: \"#313355\",\n                color: \"#fff\",\n                border: \"1px solid #313355\",\n              }}\n            >\n              확인\n            </Button>\n          </div>\n\n          <StyledDivider>소셜 회원가입</StyledDivider>\n          <SocialTemplate />\n        </>\n      )}\n      {progress == 1 && registerType == \"local\" && (\n        <>\n          <StyledDivider>선택 입력 사항</StyledDivider>\n          <SkillFilterForm type=\"register\" />\n          <RegisterInputItemWrapper\n            name=\"github\"\n            label=\"Github\"\n            hasFeedback\n            onChange={onChangeGithubUrl}\n          >\n            <Input placeholder=\"github 닉네임\" />\n          </RegisterInputItemWrapper>\n          <RegisterInputItemWrapper\n            name=\"avatar\"\n            label=\"사용자 이미지 설정\"\n            valuePropName=\"fileList\"\n            getValueFromEvent={normFile}\n          >\n            <Upload name=\"logo\" listType=\"picture\" accept=\"image/*\">\n              <Button\n                style={{\n                  background: \"#313355\",\n                  color: \"#fff\",\n                  border: \"1px solid #313355\",\n                }}\n                icon={<UploadOutlined />}\n              >\n                파일 업로드\n              </Button>\n            </Upload>\n          </RegisterInputItemWrapper>\n          <StyledDivider />\n          <div className=\"email-btn\" style={{ textAlign: \"center\" }}>\n            <Button\n              type=\"primary\"\n              onClick={onClickEmailVerify}\n              style={{\n                background: \"#313355\",\n                color: \"#fff\",\n                border: \"1px solid #313355\",\n              }}\n            >\n              이메일 인증\n            </Button>\n          </div>\n          <PushBackButton onClick={onPushBack}>뒤로가기</PushBackButton>\n        </>\n      )}\n      {progress == 1 && registerType == \"social\" && (\n        <>\n          {nicknameExistError ? (\n            <>\n              <RegisterInputItemWrapper\n                name=\"nickname\"\n                label=\"닉네임\"\n                validateStatus=\"error\"\n                help=\"이미 존재하는 닉네임입니다.\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: \"닉네임을 입력해주세요.\",\n                    whitespace: true,\n                  },\n                ]}\n                onChange={onChangeNickname}\n              >\n                <Input placeholder=\"nickname\" />\n              </RegisterInputItemWrapper>\n            </>\n          ) : (\n            <>\n              <RegisterInputItemWrapper\n                name=\"nickname\"\n                label=\"닉네임\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: \"닉네임을 입력해주세요.\",\n                    whitespace: true,\n                  },\n                ]}\n                onChange={onChangeNickname}\n              >\n                <Input placeholder=\"nickname\" />\n              </RegisterInputItemWrapper>\n            </>\n          )}\n          {noneEmailUser && (\n            <>\n              {emailExistError ? (\n                <RegisterInputItemWrapper\n                  name=\"email\"\n                  label=\"이메일\"\n                  validateStatus=\"error\"\n                  help=\"이미 존재하는 이메일입니다.\"\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                      message: \"이메일을 입력해주세요.\",\n                      whitespace: true,\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"email\" onChange={onChangeEmail} />\n                </RegisterInputItemWrapper>\n              ) : (\n                <RegisterInputItemWrapper\n                  name=\"email\"\n                  label=\"이메일\"\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                      message: \"이메일을 입력해주세요.\",\n                      whitespace: true,\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"email\" onChange={onChangeEmail} />\n                </RegisterInputItemWrapper>\n              )}\n            </>\n          )}\n\n          <StyledDivider>선택 입력 사항</StyledDivider>\n          <SkillFilterForm type=\"register\" />\n          <RegisterInputItemWrapper\n            name=\"github\"\n            label=\"Github\"\n            hasFeedback\n            onChange={onChangeGithubUrl}\n          >\n            <Input placeholder=\"github 닉네임\" />\n          </RegisterInputItemWrapper>\n          <RegisterInputItemWrapper\n            name=\"avatar\"\n            label=\"사용자 이미지 설정\"\n            valuePropName=\"fileList\"\n            getValueFromEvent={normFile}\n          >\n            <Upload name=\"logo\" listType=\"picture\" accept=\"image/*\">\n              <Button icon={<UploadOutlined />}>파일 업로드</Button>\n            </Upload>\n          </RegisterInputItemWrapper>\n          <StyledDivider />\n          <div className=\"email-btn\" style={{ textAlign: \"center\" }}>\n            <Button\n              type=\"primary\"\n              onClick={onSocialRegisterSubmit}\n              style={{\n                background: \"#313355\",\n                color: \"#fff\",\n                border: \"1px solid #313355\",\n              }}\n            >\n              가입하기\n            </Button>\n          </div>\n          {firebaseLoading && (\n            <div style={{ textAlign: \"center\" }}>잠시만 기다려주세요...</div>\n          )}\n          <PushBackButton onClick={onPushBack}>뒤로가기</PushBackButton>\n        </>\n      )}\n      {progress == 2 && (\n        <div>\n          <div>\n            <Result\n              status=\"success\"\n              title={`${email} 으로 인증 요청\n              메일을 보냈습니다. `}\n            />\n          </div>\n          <div style={{ fontSize: \"16px\", textAlign: \"center\" }}>\n            해당 이메일을 확인 하시고, 인증 확인 링크를 눌러 주시기 바랍니다.{\" \"}\n          </div>\n          <div\n            style={{\n              fontSize: \"13px\",\n              textAlign: \"center\",\n              margin: \"20px 0\",\n              color: \"#888\",\n            }}\n          >\n            <span style={{ color: \"red\" }}>*</span>\n            이메일 인증이 완료 되지 않을 경우 사이트 이용에 제한이 있을 수\n            있습니다.\n            <span style={{ color: \"red\" }}>*</span>\n          </div>\n\n          <div\n            style={{\n              fontSize: \"13px\",\n              textAlign: \"center\",\n              margin: \"20px 0\",\n              textDecoration: \"underline\",\n            }}\n          >\n            <Link href=\"/auth/login\">\n              <a style={{ color: \"#888\" }}>로그인</a>\n            </Link>\n          </div>\n        </div>\n      )}\n    </RegisterFormWrapper>\n  );\n};\n\nexport default withRouter(RegisterInputForm);\n"]},"metadata":{},"sourceType":"module"}