{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions, createAction } from \"redux-actions\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 기술스택 관련 리덕스 설정파일\n */\n// initial state\n\nconst initialState = {\n  skill: []\n}; // action type\n\nexport const INITIALIZE_SKILL = \"skill/INITIALIZE_SKILL\";\nexport const CHANGE_SKILL = \"skill/CHANGE_SKILL\"; // action creator\n\nexport const initializeSkillAction = createAction(INITIALIZE_SKILL);\nexport const skillChangeAction = createAction(CHANGE_SKILL, data => data); // reducer\n\nconst skillReducer = handleActions({\n  [INITIALIZE_SKILL]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    skill: []\n  }),\n  [CHANGE_SKILL]: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    skill: action.payload\n  })\n}, initialState);\nexport default skillReducer;","map":{"version":3,"sources":["/Users/jinho/Project/ProjectFrontend/Frontend/reducers/skill.js"],"names":["handleActions","createAction","initialState","skill","INITIALIZE_SKILL","CHANGE_SKILL","initializeSkillAction","skillChangeAction","data","skillReducer","state","action","payload"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,YAAxB,QAA4C,eAA5C;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB,C,CAIA;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,wBAAzB;AAEP,OAAO,MAAMC,YAAY,GAAG,oBAArB,C,CAEP;;AAEA,OAAO,MAAMC,qBAAqB,GAAGL,YAAY,CAACG,gBAAD,CAA1C;AAEP,OAAO,MAAMG,iBAAiB,GAAGN,YAAY,CAACI,YAAD,EAAgBG,IAAD,IAAUA,IAAzB,CAAtC,C,CAEP;;AAEA,MAAMC,YAAY,GAAGT,aAAa,CAChC;AACE,GAACI,gBAAD,GAAoB,CAACM,KAAD,EAAQC,MAAR,qCACfD,KADe;AAElBP,IAAAA,KAAK,EAAE;AAFW,IADtB;AAKE,GAACE,YAAD,GAAgB,CAACK,KAAD,EAAQC,MAAR,qCACXD,KADW;AAEdP,IAAAA,KAAK,EAAEQ,MAAM,CAACC;AAFA;AALlB,CADgC,EAWhCV,YAXgC,CAAlC;AAcA,eAAeO,YAAf","sourcesContent":["import { handleActions, createAction } from \"redux-actions\";\n\n/**\n * @author 박진호\n * @version 1.0\n * @summary 기술스택 관련 리덕스 설정파일\n */\n\n// initial state\n\nconst initialState = {\n  skill: [],\n};\n\n// action type\n\nexport const INITIALIZE_SKILL = \"skill/INITIALIZE_SKILL\";\n\nexport const CHANGE_SKILL = \"skill/CHANGE_SKILL\";\n\n// action creator\n\nexport const initializeSkillAction = createAction(INITIALIZE_SKILL);\n\nexport const skillChangeAction = createAction(CHANGE_SKILL, (data) => data);\n\n// reducer\n\nconst skillReducer = handleActions(\n  {\n    [INITIALIZE_SKILL]: (state, action) => ({\n      ...state,\n      skill: [],\n    }),\n    [CHANGE_SKILL]: (state, action) => ({\n      ...state,\n      skill: action.payload,\n    }),\n  },\n  initialState,\n);\n\nexport default skillReducer;\n"]},"metadata":{},"sourceType":"module"}