{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadPostSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadPostsSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(mainLoadPostsSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(writePostSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(postScrapSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(postUnScrapSaga),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(addCommentSaga),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(loadForumPostsSaga),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(deletePostSaga),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(deleteCommentSaga),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(upLikePostSaga),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(unLikePostSaga),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(upLikeCommentSaga),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(unLikeCommentSaga),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchPost);\n\nimport { takeLatest, call, put, throttle, takeEvery } from \"redux-saga/effects\";\nimport { LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, MAIN_LOAD_POSTS_REQUEST, MAIN_LOAD_POSTS_SUCCESS, MAIN_LOAD_POSTS_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, WRITE_POST_REQUEST, WRITE_POST_SUCCESS, WRITE_POST_FAILURE, POST_SCRAP_REQUEST, POST_SCRAP_SUCCESS, POST_SCRAP_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, LOAD_FORUM_POSTS_REQUEST, LOAD_FORUM_POSTS_SUCCESS, LOAD_FORUM_POSTS_FAILURE, DELETE_COMMENT_REQUEST, DELETE_COMMENT_SUCCESS, DELETE_COMMENT_FAILURE, DELETE_POST_REQUEST, DELETE_POST_SUCCESS, DELETE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, LIKE_COMMENT_REQUEST, LIKE_COMMENT_SUCCESS, LIKE_COMMENT_FAILURE, UNLIKE_COMMENT_REQUEST, UNLIKE_COMMENT_SUCCESS, UNLIKE_COMMENT_FAILURE, POST_UNSCRAP_SUCCESS, POST_UNSCRAP_FAILURE, POST_UNSCRAP_REQUEST } from \"../reducers/post\";\nimport { mainLoadPosts, writePost, loadPost, loadPosts, loadForumPosts, addComment, deletePost, deleteComment, deleteCommentWithChildren, upLike, unLike, postScrap, postUnScrap } from \"../lib/api/post\";\n/**\n * @author 박진호\n * @version 1.0\n * @summary 포스트 관련 사가 설정파일\n * @note deprecated 된 것은 컴포넌트 혹은 페이지 내부에서 axios 직접 요청으로 대체\n */\n// saga\n\nfunction loadPostSaga(action) {\n  var postId, res;\n  return _regeneratorRuntime.wrap(function loadPostSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          postId = action.payload.postId;\n          _context.next = 4;\n          return call(loadPost, postId);\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            post: res.data.post\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 14;\n          return put({\n            type: LOAD_POST_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction loadPostsSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function loadPostsSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loadPosts, action.payload);\n\n        case 3:\n          res = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            contentType: action.payload.type,\n            data: res.data.posts,\n            temporalPostsLength: res.data.postSize\n          });\n\n        case 6:\n          _context2.next = 13;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          _context2.next = 13;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            contentType: action.payload\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction mainLoadPostsSaga(action) {\n  var res, _res$data$posts, study, project, forum;\n\n  return _regeneratorRuntime.wrap(function mainLoadPostsSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(mainLoadPosts);\n\n        case 3:\n          res = _context3.sent;\n          _res$data$posts = res.data.posts, study = _res$data$posts.study, project = _res$data$posts.project, forum = _res$data$posts.forum;\n          _context3.next = 7;\n          return put({\n            type: MAIN_LOAD_POSTS_SUCCESS,\n            study: study,\n            project: project,\n            forum: forum\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 14;\n          return put({\n            type: MAIN_LOAD_POSTS_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction writePostSaga(action) {\n  var res, post;\n  return _regeneratorRuntime.wrap(function writePostSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(writePost, action.payload);\n\n        case 3:\n          res = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: WRITE_POST_SUCCESS\n          });\n\n        case 6:\n          post = res.data.post;\n          window.location.href = \"http://localhost:3000/articles/\".concat(post.type, \"/\").concat(post._id);\n          _context4.next = 15;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          _context4.next = 15;\n          return put({\n            type: WRITE_POST_FAILURE\n          });\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 10]]);\n}\n\nfunction postScrapSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function postScrapSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(postScrap, action.payload);\n\n        case 3:\n          res = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: POST_SCRAP_SUCCESS,\n            scrap: res.data.scrap\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          _context5.next = 13;\n          return put({\n            type: POST_SCRAP_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction postUnScrapSaga(action) {\n  return _regeneratorRuntime.wrap(function postUnScrapSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(postUnScrap, action.payload);\n\n        case 3:\n          _context6.next = 5;\n          return put({\n            type: POST_UNSCRAP_SUCCESS,\n            scrapId: action.payload.id\n          });\n\n        case 5:\n          _context6.next = 12;\n          break;\n\n        case 7:\n          _context6.prev = 7;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(_context6.t0);\n          _context6.next = 12;\n          return put({\n            type: POST_UNSCRAP_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 7]]);\n} // -> deprecated\n\n\nfunction addCommentSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function addCommentSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(addComment, action.payload);\n\n        case 3:\n          res = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: ADD_COMMENT_SUCCESS\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: ADD_COMMENT_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction loadForumPostsSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function loadForumPostsSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(loadForumPosts, action.payload);\n\n        case 3:\n          res = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: LOAD_FORUM_POSTS_SUCCESS,\n            forumPosts: res.data.posts,\n            temporalPostsLength: res.data.postSize\n          });\n\n        case 6:\n          _context8.next = 12;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 12;\n          return put({\n            type: LOAD_FORUM_POSTS_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\n\nfunction deletePostSaga(action) {\n  return _regeneratorRuntime.wrap(function deletePostSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(deletePost, action.payload);\n\n        case 3:\n          _context9.next = 5;\n          return put({\n            type: DELETE_POST_SUCCESS\n          });\n\n        case 5:\n          _context9.next = 12;\n          break;\n\n        case 7:\n          _context9.prev = 7;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.log(_context9.t0);\n          _context9.next = 12;\n          return put({\n            type: DELETE_POST_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 7]]);\n} // -> deprecated\n\n\nfunction deleteCommentSaga(action) {\n  return _regeneratorRuntime.wrap(function deleteCommentSaga$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n\n          if (!(action.payload.type === \"children\")) {\n            _context10.next = 6;\n            break;\n          }\n\n          _context10.next = 4;\n          return call(deleteCommentWithChildren, action.payload.id);\n\n        case 4:\n          _context10.next = 8;\n          break;\n\n        case 6:\n          _context10.next = 8;\n          return call(deleteComment, action.payload.id);\n\n        case 8:\n          _context10.next = 10;\n          return put({\n            type: DELETE_COMMENT_SUCCESS\n          });\n\n        case 10:\n          _context10.next = 17;\n          break;\n\n        case 12:\n          _context10.prev = 12;\n          _context10.t0 = _context10[\"catch\"](0);\n          console.log(_context10.t0);\n          _context10.next = 17;\n          return put({\n            type: DELETE_COMMENT_FAILURE\n          });\n\n        case 17:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 12]]);\n}\n\nfunction upLikePostSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function upLikePostSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(upLike, action.payload);\n\n        case 3:\n          res = _context11.sent;\n          _context11.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            user: action.payload.user,\n            postId: action.payload.id,\n            like: res.data.like\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.log(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: LIKE_POST_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction unLikePostSaga(action) {\n  return _regeneratorRuntime.wrap(function unLikePostSaga$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.prev = 0;\n          _context12.next = 3;\n          return call(unLike, action.payload);\n\n        case 3:\n          _context12.next = 5;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            user: action.payload.user,\n            likeId: action.payload.id,\n            postId: action.payload.id\n          });\n\n        case 5:\n          _context12.next = 12;\n          break;\n\n        case 7:\n          _context12.prev = 7;\n          _context12.t0 = _context12[\"catch\"](0);\n          console.log(_context12.t0);\n          _context12.next = 12;\n          return put({\n            type: UNLIKE_POST_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12, null, [[0, 7]]);\n}\n\nfunction upLikeCommentSaga(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function upLikeCommentSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(upLike, action.payload);\n\n        case 3:\n          res = _context13.sent;\n          _context13.next = 6;\n          return put({\n            type: LIKE_COMMENT_SUCCESS,\n            user: action.payload.user,\n            commentId: action.payload.id,\n            like: res.data.like\n          });\n\n        case 6:\n          _context13.next = 13;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          console.log(_context13.t0);\n          _context13.next = 13;\n          return put({\n            type: LIKE_COMMENT_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction unLikeCommentSaga(action) {\n  return _regeneratorRuntime.wrap(function unLikeCommentSaga$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.prev = 0;\n          _context14.next = 3;\n          return call(unLike, action.payload);\n\n        case 3:\n          _context14.next = 5;\n          return put({\n            type: UNLIKE_COMMENT_SUCCESS,\n            user: action.payload.user,\n            likeId: action.payload.id,\n            commentId: action.payload.commentId\n          });\n\n        case 5:\n          _context14.next = 12;\n          break;\n\n        case 7:\n          _context14.prev = 7;\n          _context14.t0 = _context14[\"catch\"](0);\n          console.log(_context14.t0);\n          _context14.next = 12;\n          return put({\n            type: UNLIKE_COMMENT_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14, null, [[0, 7]]);\n} // watcher\n\n\nexport function watchPost() {\n  return _regeneratorRuntime.wrap(function watchPost$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(MAIN_LOAD_POSTS_REQUEST, mainLoadPostsSaga);\n\n        case 2:\n          _context15.next = 4;\n          return takeLatest(LOAD_POSTS_REQUEST, loadPostsSaga);\n\n        case 4:\n          _context15.next = 6;\n          return takeLatest(LOAD_POST_REQUEST, loadPostSaga);\n\n        case 6:\n          _context15.next = 8;\n          return throttle(2000, WRITE_POST_REQUEST, writePostSaga);\n\n        case 8:\n          _context15.next = 10;\n          return takeLatest(POST_SCRAP_REQUEST, postScrapSaga);\n\n        case 10:\n          _context15.next = 12;\n          return takeLatest(POST_UNSCRAP_REQUEST, postUnScrapSaga);\n\n        case 12:\n          _context15.next = 14;\n          return throttle(2000, ADD_COMMENT_REQUEST, addCommentSaga);\n\n        case 14:\n          _context15.next = 16;\n          return takeLatest(LOAD_FORUM_POSTS_REQUEST, loadForumPostsSaga);\n\n        case 16:\n          _context15.next = 18;\n          return takeLatest(DELETE_POST_REQUEST, deletePostSaga);\n\n        case 18:\n          _context15.next = 20;\n          return takeEvery(DELETE_COMMENT_REQUEST, deleteCommentSaga);\n\n        case 20:\n          _context15.next = 22;\n          return takeLatest(LIKE_POST_REQUEST, upLikePostSaga);\n\n        case 22:\n          _context15.next = 24;\n          return takeLatest(UNLIKE_POST_REQUEST, unLikePostSaga);\n\n        case 24:\n          _context15.next = 26;\n          return takeLatest(LIKE_COMMENT_REQUEST, upLikeCommentSaga);\n\n        case 26:\n          _context15.next = 28;\n          return takeLatest(UNLIKE_COMMENT_REQUEST, unLikeCommentSaga);\n\n        case 28:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}","map":null,"metadata":{},"sourceType":"module"}