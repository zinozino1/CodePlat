{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// import \"../../../lib/util/highlight.js\";\nimport React, { useRef, useEffect, useCallback } from \"react\"; // import \"quill/dist/quill.bubble.css\";\n\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/atom-one-dark.css\"; //import \"highlight.js/monokai-sublime.min.css\";\n\nimport \"quill/dist/quill.snow.css\";\nimport styled from \"styled-components\";\nimport wrapper from \"../../../store/configureStore\";\nimport { END } from \"redux-saga\";\nhljs.configure({\n  languages: [\"javascript\", \"ruby\", \"python\", \"rust\", \"c\", \"c++\", \"go\", \"java\", \"rust\", \"kotlin\", \"typescript\"]\n});\nvar EditorBlock = styled.div.withConfig({\n  displayName: \"Editor__EditorBlock\",\n  componentId: \"b00hhv-0\"\n})([\"padding-top:1rem;padding-bottom:1rem;\"]);\nvar TitleInput = styled.input.withConfig({\n  displayName: \"Editor__TitleInput\",\n  componentId: \"b00hhv-1\"\n})([\"font-size:1.2rem;outline:none;padding-bottom:0.2rem;border:none;border-bottom:1px solid #aaa;margin-bottom:1rem;width:100%;\"]);\nvar QuillWrapper = styled.div.withConfig({\n  displayName: \"Editor__QuillWrapper\",\n  componentId: \"b00hhv-2\"\n})([\".ql-editor{padding:20px;min-height:320px;font-size:1rem;line-height:1.5;}.ql-editor.ql-blank::before{left:20px;}\"]);\n\nvar Editor = function Editor(_ref) {\n  var onChangeTitle = _ref.onChangeTitle,\n      onChangeDescription = _ref.onChangeDescription,\n      description = _ref.description,\n      title = _ref.title;\n  //   hljs.configure({\n  //     // optionally configure hljs\n  //     languages: [\"javascript\", \"ruby\", \"python\"],\n  //   });\n  var Quill = true ? require(\"quill\") : function () {\n    return false;\n  };\n  var quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\n\n  var quillInstance = useRef(null); // Quill 인스턴스를 설정\n  //   const imageRef = useRef();\n\n  useEffect(function () {\n    quillInstance.current = new Quill(quillElement.current, {\n      theme: \"snow\",\n      placeholder: \"내용을 입력해주세요.\",\n      modules: {\n        syntax: {\n          highlight: function highlight(text) {\n            return hljs.highlightAuto(text).value;\n          }\n        },\n        // 더 많은 옵션\n        // https://quilljs.com/docs/modules/toolbar/ 참고\n        toolbar: [[{\n          header: \"1\"\n        }, {\n          header: \"2\"\n        }], [{\n          color: []\n        }], [\"bold\", \"italic\", \"underline\", \"strike\"], [{\n          list: \"ordered\"\n        }, {\n          list: \"bullet\"\n        }], [\"blockquote\", \"code-block\"], [{\n          size: [\"small\", false, \"large\", \"huge\"]\n        }]]\n      }\n    });\n    var quill = quillInstance.current; //editor default value\n\n    quill.root.innerHTML = description;\n    quill.on(\"text-change\", function (delta, oldDelta, source) {\n      if (source === \"user\") {\n        onChangeDescription(quill.root.innerHTML);\n      }\n    }); //quillInstance.current.getModule(\"toolbar\");\n    // const toolbar = quill.getModule(\"toolbar\");\n    // toolbar.addHandler(\"image\", onClickImageBtn);\n\n    return function () {};\n  }, [onChangeDescription]); //   const onClickImageBtn = useCallback(\n  //     (e) => {\n  //       // quill 의 이미지 버튼을 누르면 숨겨져있는 인풋태그가 활성화된다\n  //       //Quill을 초기화 합니다. 툴바에서 image가 선택되면 handlers에서 정의한대로 숨겨둔 file 타입 input을 click() 호출하여 파일 선택 dialog를 띄웁니다.\n  //       imageRef.current.click();\n  //     },\n  //     [imageRef.current],\n  //   );\n  //   const onChangeImageInput = useCallback((e) => {\n  //     // 실제 이미지 저장하는 로직 작성\n  //     const imageFormData = new FormData();\n  //     [].forEach.call(e.target.files, (f) => {\n  //       console.log(f);\n  //       imageFormData.append(\"image\", f);\n  //     });\n  //     //console.log(description);\n  //     // -> 서버에 일단 저장 -> 서버에서 이미지 소스 리턴 -> quill에서 그걸 다시 보여줘야함.\n  //     // dispatch({\n  //     //     type : UPLOAD_IMAGES_REQUEST,\n  //     //     data : imageFormData\n  //     // })\n  //   }, []);\n  // 이미지 전송작업 해야댐\n\n  return /*#__PURE__*/_jsxs(EditorBlock, {\n    children: [/*#__PURE__*/_jsx(TitleInput, {\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n      onChange: onChangeTitle,\n      defaultValue: title\n    }), /*#__PURE__*/_jsx(QuillWrapper, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        ref: quillElement\n      })\n    })]\n  });\n}; // export const getServerSideProps = wrapper.getServerSideProps(\n//   async (context) => {\n//     context.store.dispatch(END);\n//     await context.store.sagaTask.toPromise();\n//   },\n// );\n\n\nexport default Editor;","map":null,"metadata":{},"sourceType":"module"}