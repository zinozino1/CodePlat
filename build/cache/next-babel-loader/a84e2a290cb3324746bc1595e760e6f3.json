{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from \"react\";\nimport PostViewerLayout from \"../../../components/layout/PostViewerLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadPostRequestAction, initializePostAction } from \"../../../reducers/post\";\nimport { withRouter } from \"next/router\";\nimport PostViewer from \"../../../components/common/contents/PostViewer\";\nimport Head from \"next/head\";\nimport wrapper from \"../../../store/configureStore\";\nimport { setUserRequestAction } from \"../../../reducers/user\";\nimport { END } from \"redux-saga\";\nimport client from \"../../../lib/api/client\";\n\nconst StudyDetail = ({\n  router\n}) => {\n  const dispatch = useDispatch();\n  const {\n    post\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    // dispatch(\n    //   loadPostRequestAction({\n    //     postId: router.query.id,\n    //   }),\n    // );\n    return () => {\n      dispatch(initializePostAction());\n    };\n  }, [router]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"meta\", {\n        charSet: \"utf-8\"\n      }), /*#__PURE__*/_jsx(\"title\", {\n        children: \"\\uC2A4\\uD130\\uB514\"\n      })]\n    }), /*#__PURE__*/_jsx(PostViewerLayout, {\n      contentType: \"study\",\n      children: post && /*#__PURE__*/_jsx(PostViewer, {\n        post: post,\n        contentType: \"study\"\n      })\n    })]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  //console.log(context);\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  client.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    //console.log(\"fuckcookie\", cookie);\n    client.defaults.withCredentials = true;\n    client.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch(setUserRequestAction());\n  context.store.dispatch(loadPostRequestAction({\n    postId: context.params.id\n  })); //context.store.dispatch(mainLoadPostsReqeustAction());\n  //context.store.dispatch(END);\n\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default withRouter(StudyDetail);","map":null,"metadata":{},"sourceType":"module"}