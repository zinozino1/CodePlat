{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useCallback, useState } from \"react\";\nimport { Form, Button, Input, Checkbox } from \"antd\";\nimport useInput from \"../../../hooks/useInput\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCommentRequestAction } from \"../../../reducers/post\";\nimport Router, { withRouter } from \"next/router\";\nimport useToggle from \"../../../hooks/useToggle\";\nimport axios from \"axios\";\nvar CommentFormWrapper = styled.div.withConfig({\n  displayName: \"CommentForm__CommentFormWrapper\",\n  componentId: \"sc-1mffdup-0\"\n})([\".comment-input{&:hover{border:1px solid #ddd;}}.comment-btn{background:#313355;color:#fff;border:1px solid #313355;}\"]);\nvar TextAreaWrapper = styled(Input.TextArea).withConfig({\n  displayName: \"CommentForm__TextAreaWrapper\",\n  componentId: \"sc-1mffdup-1\"\n})([\"width:94%;\"]);\n\nvar CommentForm = function CommentForm(_ref) {\n  var post = _ref.post,\n      router = _ref.router;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useState = useState(\"\"),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var onChangeComment = useCallback(function (e) {\n    setComment(e.target.value);\n  }, []); //const [comment, onChangeComment] = useInput(\"\");\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      isSecret = _useToggle2[0],\n      onToggleIsSecret = _useToggle2[1];\n\n  var onSubmit = useCallback(function () {\n    // 1) 댓글 등록시 새로고침되며 article페이지의 useEffect가 재호출되면서 데이터가 업데이트 됨\n    // 2) 일부러 새로고침시킨다\n    var sumbitConfirm = confirm(\"댓글을 등록하시겠습니까?\");\n\n    if (sumbitConfirm) {\n      setComment(\"\");\n      axios.post(\"/api/comments\", {\n        postId: post._id,\n        type: post.type,\n        content: comment,\n        secretComment: isSecret\n      }).then(function (res) {\n        Router.push(\"http://localhost:3000/articles/\".concat(post.type, \"/\").concat(post._id));\n      })[\"catch\"](function (err) {\n        console.log(err);\n      }); // dispatch(\n      //   // post말고 comment받는 것도 고려\n      //   addCommentRequestAction({\n      //     postId: post._id,\n      //     type: post.type,\n      //     content: comment,\n      //     secretComment: isSecret,\n      //   }),\n      // );\n      // Router.push(`http://localhost:3000/articles/${post.type}/${post._id}`);\n    } else {\n      return;\n    }\n  }, [comment, post, isSecret]);\n  return /*#__PURE__*/_jsx(CommentFormWrapper, {\n    children: /*#__PURE__*/_jsxs(Form, {\n      children: [/*#__PURE__*/_jsxs(Form.Item, {\n        children: [/*#__PURE__*/_jsx(TextAreaWrapper, {\n          className: \"comment-input\",\n          rows: 3,\n          onChange: onChangeComment,\n          value: comment,\n          placeholder: me ? \"댓글을 작성해보세요.\" : \"로그인이 필요한 서비스입니다.\"\n        }), /*#__PURE__*/_jsx(Checkbox, {\n          style: {\n            marginTop: \"5px\",\n            color: \"#999\"\n          },\n          onChange: onToggleIsSecret,\n          disabled: me ? false : true,\n          children: \"\\uBE44\\uBC00 \\uB313\\uAE00\"\n        })]\n      }), /*#__PURE__*/_jsx(Form.Item, {\n        children: /*#__PURE__*/_jsx(Button, {\n          className: \"comment-btn\",\n          htmlType: \"submit\" //loading={submitting}\n          ,\n          onClick: onSubmit,\n          type: \"primary\",\n          disabled: me ? false : true,\n          children: \"\\uB4F1\\uB85D\"\n        })\n      })]\n    })\n  });\n};\n\nexport default withRouter(CommentForm);","map":null,"metadata":{},"sourceType":"module"}