{"ast":null,"code":"import shortId from \"shortid\";\nimport faker from \"faker\";\nexport const dummyMeCreator = () => {\n  return {\n    id: 111,\n    nickname: \"zinozino\",\n    email: \"gogod23@naver.com\",\n    password: \"safmimf3i2@#k9aci\",\n    techStack: [\"React\", \"JavaScript\", \"Vue\"],\n    githubUrl: \"http://github.com/zinozino1\",\n    filePath: \"\",\n    comments: [],\n    likes: [],\n    scraps: [],\n    email_verified: false,\n    key_for_verify: \"123\",\n    registerDate: new Date(),\n    rating: 4,\n    posts: [{\n      id: 1,\n      title: \"포스트1\",\n      content: \"content1\",\n      filePath: \"/usr/bin\",\n      writer: 1,\n      createAt: new Date(),\n      views: 100,\n      techStack: [],\n      area: \"\",\n      recruitment: 10,\n      type: \"study\",\n      isOnGoing: true,\n      likes: 40,\n      scraped: 10,\n      comments: [{\n        id: 1,\n        writer: 2,\n        content: \"안녕하세요\",\n        postId: 1,\n        createAt: new Date(),\n        commentTo: null,\n        // 대댓글이 아님\n        secret: false,\n        likes: 30\n      }]\n    }]\n  };\n};\nexport const dummyPostCreator = type => {\n  if (type == \"study\" || type == \"project\") return {\n    id: shortId.generate(),\n    title: faker.lorem.sentence(),\n    content: faker.lorem.paragraph(),\n    filePath: faker.image.image(),\n    writer: {\n      id: shortId.generate(),\n      nickname: faker.name.findName(),\n      email: faker.random.word(),\n      password: faker.random.word(),\n      techStack: Array(3).fill().map((v, i) => faker.lorem.word()),\n      githubUrl: faker.random.word(),\n      filePath: faker.image.image(),\n      posts: Array(3).fill().map((v, i) => {\n        dummy: i;\n      }),\n      rating: 4,\n      createdAt: faker.date.recent()\n    },\n    createdAt: faker.date.recent(),\n    techStack: Array(3).fill().map((v, i) => faker.lorem.word()),\n    views: parseInt(faker.random.number() / 100),\n    area: \"서울\",\n    recruitment: 4,\n    type: type === \"study\" ? \"study\" : \"project\",\n    isOnGoing: faker.random.boolean(),\n    likes: parseInt(faker.random.number() / 100),\n    scraped: parseInt(faker.random.number() / 100),\n    comments: [{\n      id: 1,\n      writer: dummyMeCreator(),\n      content: \"1번 댓글\",\n      postId: 1,\n      createAt: new Date(),\n      commentTo: null,\n      secretComment: false,\n      likes: 10\n    }, {\n      id: 2,\n      writer: dummyMeCreator(),\n      content: \"2번 댓글\",\n      postId: 1,\n      createAt: new Date(),\n      commentTo: null,\n      secretComment: true,\n      likes: 20\n    }, {\n      id: 3,\n      writer: dummyMeCreator(),\n      content: \"3번 댓글\",\n      postId: 1,\n      createAt: new Date(),\n      commentTo: 1,\n      secretComment: false,\n      likes: 340\n    }, {\n      id: 4,\n      writer: dummyMeCreator(),\n      content: \"4번 댓글\",\n      postId: 1,\n      createAt: new Date(),\n      commentTo: null,\n      // 대댓글이 아님\n      secretComment: true,\n      likes: 12\n    }, {\n      id: 5,\n      writer: dummyMeCreator(),\n      content: \"5번 댓글\",\n      postId: 1,\n      createAt: new Date(),\n      commentTo: 1,\n      // 대댓글이 아님\n      secretComment: true,\n      likes: 12\n    }]\n  };else return {\n    id: shortId.generate(),\n    title: faker.lorem.sentence(),\n    content: faker.lorem.paragraph(),\n    filePath: faker.image.image(),\n    writer: {\n      id: shortId.generate(),\n      nickname: faker.name.findName(),\n      email: faker.random.word(),\n      password: faker.random.word(),\n      techStack: Array(3).fill().map((v, i) => faker.lorem.word()),\n      githubUrl: faker.random.word(),\n      filePath: faker.image.image(),\n      posts: Array(3).fill().map((v, i) => {\n        dummy: i;\n      }),\n      rating: 4,\n      createdAt: faker.date.recent()\n    },\n    createdAt: faker.date.recent(),\n    techStack: Array(3).fill().map((v, i) => faker.lorem.word()),\n    views: parseInt(faker.random.number() / 100),\n    area: \"서울\",\n    type: \"forum\",\n    likes: parseInt(faker.random.number() / 100),\n    scraped: parseInt(faker.random.number() / 100),\n    comments: [{\n      id: 1,\n      writer: dummyMeCreator(),\n      content: \"반가워요\",\n      postId: 1,\n      createAt: new Date(),\n      commentTo: null,\n      secretComment: false,\n      likes: 10\n    }, {\n      id: 2,\n      writer: dummyMeCreator(),\n      content: \"ㅋㅇㅌㄹㅋㅇㄹ\",\n      postId: 1,\n      createAt: new Date(),\n      commentTo: 1,\n      secretComment: true,\n      likes: 20\n    }, {\n      id: 3,\n      writer: dummyMeCreator(),\n      content: \"ㅋㅋ\",\n      postId: 1,\n      createAt: new Date(),\n      commentTo: 1,\n      secretComment: false,\n      likes: 340\n    }, {\n      id: 4,\n      writer: dummyMeCreator(),\n      content: \"ㄴㄴ\",\n      postId: 1,\n      createAt: new Date(),\n      commentTo: null,\n      // 대댓글이 아님\n      secretComment: true,\n      likes: 12\n    }],\n    filter: \"QnA\",\n    tags: Array(3).fill().map((v, i) => faker.random.word())\n  };\n};\nexport const dummyPostsCreator = (type, number) => {\n  if (type == \"study\" || type == \"project\") return Array(number).fill().map((v, i) => ({\n    id: shortId.generate(),\n    title: faker.lorem.sentence(),\n    content: faker.lorem.paragraph(),\n    filePath: faker.image.image(),\n    writer: {\n      id: shortId.generate(),\n      nickname: faker.name.findName(),\n      email: faker.random.word(),\n      password: faker.random.word(),\n      techStack: Array(3).fill().map((v, i) => faker.lorem.word()),\n      githubUrl: faker.random.word(),\n      filePath: faker.image.image(),\n      posts: Array(3).fill().map((v, i) => {\n        dummy: i;\n      }),\n      rating: 4,\n      registerDate: faker.date.recent()\n    },\n    createAt: faker.date.recent(),\n    techStack: Array(3).fill().map((v, i) => faker.lorem.word()),\n    views: parseInt(faker.random.number() / 100),\n    area: \"서울\",\n    recruitment: 4,\n    type: type === \"study\" ? \"study\" : \"project\",\n    isOnGoing: faker.random.boolean(),\n    likes: parseInt(faker.random.number() / 100),\n    scraped: parseInt(faker.random.number() / 100),\n    comments: Array(3).fill().map((v, i) => ({\n      id: shortId.generate(),\n      writer: dummyMeCreator(),\n      content: \"안녕하세요\",\n      postId: 1,\n      createAt: new Date(),\n      commentTo: shortId.generate(),\n      // 대댓글이 아님\n      secret: false,\n      likes: 30\n    }))\n  }));else return Array(number).fill().map((v, i) => ({\n    id: shortId.generate(),\n    title: faker.lorem.sentence(),\n    content: faker.lorem.paragraph(),\n    filePath: faker.image.image(),\n    writer: {\n      id: shortId.generate(),\n      nickname: faker.name.findName(),\n      email: faker.random.word(),\n      password: faker.random.word(),\n      techStack: Array(3).fill().map((v, i) => faker.lorem.word()),\n      githubUrl: faker.random.word(),\n      filePath: faker.image.image(),\n      posts: Array(3).fill().map((v, i) => {\n        dummy: i;\n      }),\n      rating: 4,\n      registerDate: faker.date.recent()\n    },\n    createAt: faker.date.recent(),\n    techStack: Array(3).fill().map((v, i) => faker.lorem.word()),\n    views: parseInt(faker.random.number() / 100),\n    area: \"서울\",\n    type: \"forum\",\n    likes: parseInt(faker.random.number() / 100),\n    scraped: parseInt(faker.random.number() / 100),\n    comments: Array(3).fill().map((v, i) => ({\n      id: shortId.generate(),\n      writer: dummyMeCreator(),\n      content: \"안녕하세요\",\n      postId: 1,\n      createAt: new Date(),\n      commentTo: shortId.generate(),\n      // 대댓글이 아님\n      secret: false,\n      likes: 30\n    })),\n    filter: \"QnA\",\n    tags: Array(3).fill().map((v, i) => faker.random.word())\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}