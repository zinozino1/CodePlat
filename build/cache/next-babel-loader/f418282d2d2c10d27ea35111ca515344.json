{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Select, Radio, Checkbox } from \"antd\";\nimport styled, { css } from \"styled-components\";\nimport { StackList } from \"../../../lib/constant/constant\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { skillChangeAction, initializeSkillAction } from \"../../../reducers/skill\";\nconst SkillFilterFormWrapper = styled.div.withConfig({\n  displayName: \"SkillFilterForm__SkillFilterFormWrapper\",\n  componentId: \"t2e762-0\"\n})([\"margin:0 auto;width:900px;\", \" @media (max-width:1268px){width:100%;}\"], props => (props.type === \"register\" || props.type === \"write\" || props.type === \"mypage\") && css([\"width:100%;\"]));\nconst RadioWrapper = styled.div.withConfig({\n  displayName: \"SkillFilterForm__RadioWrapper\",\n  componentId: \"t2e762-1\"\n})([\".ant-radio-group{display:flex;justify-content:space-between;.ant-radio-button-wrapper{flex:1;z-index:1;&:hover{color:#313355;}}.ant-radio-button-wrapper-checked{color:#fff;border:none;background:#313355;&::selection{border:none;}&::after{background:#313355 !important;}&::before{background:none;}&:hover{color:#fff;}}@media (max-width:768px){flex-direction:column;}}\"]);\nconst CheckBoxWrapper = styled.div.withConfig({\n  displayName: \"SkillFilterForm__CheckBoxWrapper\",\n  componentId: \"t2e762-2\"\n})([\"padding:20px;background:#fff;.ant-checkbox-wrapper{color:#777;font-weight:400;}\"]);\nconst SelectWrapper = styled.div.withConfig({\n  displayName: \"SkillFilterForm__SelectWrapper\",\n  componentId: \"t2e762-3\"\n})([\"padding:20px 0;.ant-select-selection-item-remove{display:none;}.ant-select{width:100%;}\"]);\n\nconst SkillFilterForm = ({\n  type,\n  isEdit,\n  values\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: radioValue,\n    1: setRadioValue\n  } = useState(\"language\");\n  const {\n    0: checkList,\n    1: setCheckList\n  } = useState(StackList.language);\n  const [checkedValues, setCheckedValues] = isEdit ? useState(values) : useState([]);\n  const onClickRadio = useCallback(e => {\n    setRadioValue(e.target.value);\n    setCheckList(StackList[e.target.value]);\n  }, []);\n  const onClickCheckBox = useCallback(e => {\n    if (checkedValues.includes(e.target.value)) {\n      setCheckedValues(checkedValues.filter((v, i) => {\n        return v !== e.target.value;\n      }));\n    } else {\n      if (!e.target.value) return;\n      setCheckedValues(checkedValues.concat(e.target.value));\n    }\n  }, [checkedValues, values]);\n  useEffect(() => {\n    dispatch(skillChangeAction(checkedValues));\n  }, [checkedValues]);\n  useEffect(() => {\n    return () => {\n      dispatch(initializeSkillAction());\n    };\n  }, []);\n  return /*#__PURE__*/_jsxs(SkillFilterFormWrapper, {\n    type: type,\n    children: [/*#__PURE__*/_jsx(RadioWrapper, {\n      children: /*#__PURE__*/_jsxs(Radio.Group, {\n        defaultValue: \"language\",\n        children: [/*#__PURE__*/_jsx(Radio.Button, {\n          value: \"language\",\n          onClick: onClickRadio,\n          children: \"\\uC5B8\\uC5B4\"\n        }), /*#__PURE__*/_jsx(Radio.Button, {\n          value: \"framework\",\n          onClick: onClickRadio,\n          children: \"\\uD504\\uB808\\uC784\\uC6CC\\uD06C\"\n        }), /*#__PURE__*/_jsx(Radio.Button, {\n          value: \"database\",\n          onClick: onClickRadio,\n          children: \"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\"\n        }), /*#__PURE__*/_jsx(Radio.Button, {\n          value: \"cloudos\",\n          onClick: onClickRadio,\n          children: \"\\uD074\\uB77C\\uC6B0\\uB4DC/OS\"\n        }), /*#__PURE__*/_jsx(Radio.Button, {\n          value: \"mldl\",\n          onClick: onClickRadio,\n          children: \"ML/DL\"\n        })]\n      })\n    }), /*#__PURE__*/_jsx(CheckBoxWrapper, {\n      children: /*#__PURE__*/_jsx(Checkbox.Group, {\n        options: checkList,\n        defaultValue: isEdit ? values : [],\n        onClick: onClickCheckBox\n      })\n    }), /*#__PURE__*/_jsx(SelectWrapper, {\n      children: /*#__PURE__*/_jsx(Select, {\n        mode: \"tags\",\n        placeholder: type === \"register\" ? \"관심 기술을 선택해주세요.\" : \"기술을 선택해주세요\",\n        value: checkedValues\n      })\n    })]\n  });\n};\n\nexport default /*#__PURE__*/React.memo(SkillFilterForm);","map":null,"metadata":{},"sourceType":"module"}